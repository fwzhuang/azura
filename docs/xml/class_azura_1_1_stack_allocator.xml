<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="class_azura_1_1_stack_allocator" kind="class" language="C++" prot="public">
    <compoundname>Azura::StackAllocator</compoundname>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_azura_1_1_stack_allocator_1ac4325032455ca7dcc044da7eb816571c" prot="public" static="no">
        <type>UPTR</type>
        <definition>using Azura::StackAllocator::Marker =  UPTR</definition>
        <argsstring></argsstring>
        <name>Marker</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Common/Inc/Memory/StackAllocator.h" line="10" column="1" bodyfile="Source/Common/Inc/Memory/StackAllocator.h" bodystart="10" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_azura_1_1_stack_allocator_1a550a2be1b18b05d4b0226a91dfe0ed3f" prot="private" static="no" mutable="no">
        <type>Marker</type>
        <definition>Marker Azura::StackAllocator::mCurrentMarker</definition>
        <argsstring></argsstring>
        <name>mCurrentMarker</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Common/Inc/Memory/StackAllocator.h" line="33" column="1" bodyfile="Source/Common/Inc/Memory/StackAllocator.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_azura_1_1_stack_allocator_1acc874c404913c833729bd7e26d0053f6" prot="private" static="no" mutable="no">
        <type>Marker</type>
        <definition>Marker Azura::StackAllocator::mBaseMarker</definition>
        <argsstring></argsstring>
        <name>mBaseMarker</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Common/Inc/Memory/StackAllocator.h" line="34" column="1" bodyfile="Source/Common/Inc/Memory/StackAllocator.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_azura_1_1_stack_allocator_1ad302ce43f4aaf14a73fe1ac336386af0" prot="private" static="no" mutable="no">
        <type>U32</type>
        <definition>U32 Azura::StackAllocator::mSize</definition>
        <argsstring></argsstring>
        <name>mSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Common/Inc/Memory/StackAllocator.h" line="35" column="1" bodyfile="Source/Common/Inc/Memory/StackAllocator.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_azura_1_1_stack_allocator_1ac5a36099791e7f90b24c2aff68a90804" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>AZ::StackAllocator::StackAllocator</definition>
        <argsstring>(U32 stackSizeInBytes)</argsstring>
        <name>StackAllocator</name>
        <param>
          <type>U32</type>
          <declname>stackSizeInBytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Common/Inc/Memory/StackAllocator.h" line="13" column="1" bodyfile="Source/Common/Src/Memory/StackAllocator.cpp" bodystart="5" bodyend="9"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_stack_allocator_1aaf9ee86a10ababfaf8b1053bce7395b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>AZ::StackAllocator::~StackAllocator</definition>
        <argsstring>()</argsstring>
        <name>~StackAllocator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Common/Inc/Memory/StackAllocator.h" line="16" column="1" bodyfile="Source/Common/Src/Memory/StackAllocator.cpp" bodystart="11" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_stack_allocator_1ad8320e092aa03b95483e917184ebd325" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * AZ::StackAllocator::Allocate</definition>
        <argsstring>(U32 bytesToAllocate)</argsstring>
        <name>Allocate</name>
        <param>
          <type>U32</type>
          <declname>bytesToAllocate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Common/Inc/Memory/StackAllocator.h" line="20" column="1" bodyfile="Source/Common/Src/Memory/StackAllocator.cpp" bodystart="15" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_stack_allocator_1aec126664be90a9c1638c9a524e4a1396" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AZ::StackAllocator::FreeToMarker</definition>
        <argsstring>(Marker marker)</argsstring>
        <name>FreeToMarker</name>
        <param>
          <type>Marker</type>
          <declname>marker</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Common/Inc/Memory/StackAllocator.h" line="24" column="1" bodyfile="Source/Common/Src/Memory/StackAllocator.cpp" bodystart="30" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_stack_allocator_1ac3f86f859626e851886c3dd38c7fb6ad" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Marker</type>
        <definition>StackAllocator::Marker AZ::StackAllocator::GetMarker</definition>
        <argsstring>() const</argsstring>
        <name>GetMarker</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Common/Inc/Memory/StackAllocator.h" line="27" column="1" bodyfile="Source/Common/Src/Memory/StackAllocator.cpp" bodystart="34" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_stack_allocator_1ad3701d288886e480db536872e9e6e044" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AZ::StackAllocator::Clear</definition>
        <argsstring>()</argsstring>
        <name>Clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Common/Inc/Memory/StackAllocator.h" line="30" column="1" bodyfile="Source/Common/Src/Memory/StackAllocator.cpp" bodystart="38" bodyend="40"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="Source/Common/Inc/Memory/StackAllocator.h" line="8" column="1" bodyfile="Source/Common/Inc/Memory/StackAllocator.h" bodystart="8" bodyend="36"/>
    <listofallmembers>
      <member refid="class_azura_1_1_stack_allocator_1ad8320e092aa03b95483e917184ebd325" prot="public" virt="non-virtual"><scope>Azura::StackAllocator</scope><name>Allocate</name></member>
      <member refid="class_azura_1_1_stack_allocator_1ad3701d288886e480db536872e9e6e044" prot="public" virt="non-virtual"><scope>Azura::StackAllocator</scope><name>Clear</name></member>
      <member refid="class_azura_1_1_stack_allocator_1aec126664be90a9c1638c9a524e4a1396" prot="public" virt="non-virtual"><scope>Azura::StackAllocator</scope><name>FreeToMarker</name></member>
      <member refid="class_azura_1_1_stack_allocator_1ac3f86f859626e851886c3dd38c7fb6ad" prot="public" virt="non-virtual"><scope>Azura::StackAllocator</scope><name>GetMarker</name></member>
      <member refid="class_azura_1_1_stack_allocator_1ac4325032455ca7dcc044da7eb816571c" prot="public" virt="non-virtual"><scope>Azura::StackAllocator</scope><name>Marker</name></member>
      <member refid="class_azura_1_1_stack_allocator_1acc874c404913c833729bd7e26d0053f6" prot="private" virt="non-virtual"><scope>Azura::StackAllocator</scope><name>mBaseMarker</name></member>
      <member refid="class_azura_1_1_stack_allocator_1a550a2be1b18b05d4b0226a91dfe0ed3f" prot="private" virt="non-virtual"><scope>Azura::StackAllocator</scope><name>mCurrentMarker</name></member>
      <member refid="class_azura_1_1_stack_allocator_1ad302ce43f4aaf14a73fe1ac336386af0" prot="private" virt="non-virtual"><scope>Azura::StackAllocator</scope><name>mSize</name></member>
      <member refid="class_azura_1_1_stack_allocator_1ac5a36099791e7f90b24c2aff68a90804" prot="public" virt="non-virtual"><scope>Azura::StackAllocator</scope><name>StackAllocator</name></member>
      <member refid="class_azura_1_1_stack_allocator_1aaf9ee86a10ababfaf8b1053bce7395b4" prot="public" virt="non-virtual"><scope>Azura::StackAllocator</scope><name>~StackAllocator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
