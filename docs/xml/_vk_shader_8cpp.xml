<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="_vk_shader_8cpp" kind="file" language="C++">
    <compoundname>VkShader.cpp</compoundname>
    <includes refid="_vk_shader_8h" local="yes">Vulkan/VkShader.h</includes>
    <includes refid="_file_reader_8h" local="yes">Utils/FileReader.h</includes>
    <includes refid="_vk_core_8h" local="yes">Vulkan/VkCore.h</includes>
    <includes refid="_vk_macros_8h" local="yes">Vulkan/VkMacros.h</includes>
    <includes refid="_vk_type_mapping_8h" local="yes">Vulkan/VkTypeMapping.h</includes>
    <includes refid="_memory_factory_8h" local="yes">Memory/MemoryFactory.h</includes>
    <includes refid="_monotonic_allocator_8h" local="yes">Memory/MonotonicAllocator.h</includes>
    <includes refid="_heap_memory_buffer_8h" local="yes">Memory/HeapMemoryBuffer.h</includes>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="3418">
        <label>functional</label>
      </node>
      <node id="3436">
        <label>Utils/FileReader.h</label>
        <link refid="_file_reader_8h_source"/>
        <childnode refid="3422" relation="include">
        </childnode>
        <childnode refid="3415" relation="include">
        </childnode>
      </node>
      <node id="3419">
        <label>iterator</label>
      </node>
      <node id="3431">
        <label>Utils/Hash.h</label>
        <link refid="_hash_8h_source"/>
        <childnode refid="3422" relation="include">
        </childnode>
      </node>
      <node id="3453">
        <label>Memory/MemoryFactory.h</label>
        <link refid="_memory_factory_8h_source"/>
        <childnode refid="3454" relation="include">
        </childnode>
        <childnode refid="3445" relation="include">
        </childnode>
        <childnode refid="3422" relation="include">
        </childnode>
      </node>
      <node id="3438">
        <label>Generic/Renderer.h</label>
        <link refid="_renderer_8h_source"/>
        <childnode refid="3424" relation="include">
        </childnode>
        <childnode refid="3415" relation="include">
        </childnode>
        <childnode refid="3439" relation="include">
        </childnode>
        <childnode refid="3414" relation="include">
        </childnode>
        <childnode refid="3426" relation="include">
        </childnode>
        <childnode refid="3440" relation="include">
        </childnode>
      </node>
      <node id="3426">
        <label>Core/RawStorageFormat.h</label>
        <link refid="_raw_storage_format_8h_source"/>
        <childnode refid="3422" relation="include">
        </childnode>
        <childnode refid="3425" relation="include">
        </childnode>
        <childnode refid="3427" relation="include">
        </childnode>
        <childnode refid="3428" relation="include">
        </childnode>
        <childnode refid="3429" relation="include">
        </childnode>
        <childnode refid="3430" relation="include">
        </childnode>
      </node>
      <node id="3443">
        <label>VkScopedImage.h</label>
        <link refid="_vk_scoped_image_8h_source"/>
        <childnode refid="3411" relation="include">
        </childnode>
        <childnode refid="3422" relation="include">
        </childnode>
        <childnode refid="3434" relation="include">
        </childnode>
        <childnode refid="3444" relation="include">
        </childnode>
      </node>
      <node id="3446">
        <label>MemoryBuffer.h</label>
        <link refid="_memory_buffer_8h_source"/>
        <childnode refid="3422" relation="include">
        </childnode>
      </node>
      <node id="3421">
        <label>Memory/Allocator.h</label>
        <link refid="_allocator_8h_source"/>
        <childnode refid="3418" relation="include">
        </childnode>
        <childnode refid="3422" relation="include">
        </childnode>
        <childnode refid="3423" relation="include">
        </childnode>
      </node>
      <node id="3432">
        <label>Core/AssetLocation.h</label>
        <link refid="_asset_location_8h_source"/>
      </node>
      <node id="3416">
        <label>cassert</label>
      </node>
      <node id="3429">
        <label>boost/preprocessor/tuple/elem.hpp</label>
      </node>
      <node id="3449">
        <label>stdexcept</label>
      </node>
      <node id="3414">
        <label>GenericTypes.h</label>
        <link refid="_azura_2_render_system_2_inc_2_generic_2_generic_types_8h_source"/>
        <childnode refid="3415" relation="include">
        </childnode>
        <childnode refid="3424" relation="include">
        </childnode>
        <childnode refid="3422" relation="include">
        </childnode>
        <childnode refid="3426" relation="include">
        </childnode>
        <childnode refid="3431" relation="include">
        </childnode>
        <childnode refid="3432" relation="include">
        </childnode>
        <childnode refid="3433" relation="include">
        </childnode>
        <childnode refid="3430" relation="include">
        </childnode>
      </node>
      <node id="3445">
        <label>Memory/HeapMemoryBuffer.h</label>
        <link refid="_heap_memory_buffer_8h_source"/>
        <childnode refid="3446" relation="include">
        </childnode>
        <childnode refid="3422" relation="include">
        </childnode>
      </node>
      <node id="3412">
        <label>map</label>
      </node>
      <node id="3454">
        <label>Memory/StackMemoryBuffer.h</label>
        <link refid="_stack_memory_buffer_8h_source"/>
        <childnode refid="3416" relation="include">
        </childnode>
        <childnode refid="3446" relation="include">
        </childnode>
        <childnode refid="3422" relation="include">
        </childnode>
        <childnode refid="3423" relation="include">
        </childnode>
      </node>
      <node id="3423">
        <label>Utils/Macros.h</label>
        <link refid="_macros_8h_source"/>
      </node>
      <node id="3433">
        <label>boost/container/small_vector.hpp</label>
      </node>
      <node id="3424">
        <label>Generic/Constants.h</label>
        <link refid="_azura_2_render_system_2_inc_2_generic_2_constants_8h_source"/>
        <childnode refid="3425" relation="include">
        </childnode>
        <childnode refid="3422" relation="include">
        </childnode>
      </node>
      <node id="3430">
        <label>boost/detail/bitmask.hpp</label>
      </node>
      <node id="3410">
        <label>Vulkan/VkShader.h</label>
        <link refid="_vk_shader_8h_source"/>
        <childnode refid="3411" relation="include">
        </childnode>
        <childnode refid="3412" relation="include">
        </childnode>
        <childnode refid="3413" relation="include">
        </childnode>
        <childnode refid="3434" relation="include">
        </childnode>
      </node>
      <node id="3425">
        <label>tuple</label>
      </node>
      <node id="3420">
        <label>Array.h</label>
        <link refid="_array_8h_source"/>
        <childnode refid="3416" relation="include">
        </childnode>
        <childnode refid="3417" relation="include">
        </childnode>
        <childnode refid="3421" relation="include">
        </childnode>
        <childnode refid="3422" relation="include">
        </childnode>
      </node>
      <node id="3452">
        <label>optional</label>
      </node>
      <node id="3447">
        <label>Memory/MonotonicAllocator.h</label>
        <link refid="_monotonic_allocator_8h_source"/>
        <childnode refid="3421" relation="include">
        </childnode>
        <childnode refid="3422" relation="include">
        </childnode>
      </node>
      <node id="3435">
        <label>vector</label>
      </node>
      <node id="3415">
        <label>Containers/Vector.h</label>
        <link refid="_vector_8h_source"/>
        <childnode refid="3416" relation="include">
        </childnode>
        <childnode refid="3417" relation="include">
        </childnode>
        <childnode refid="3418" relation="include">
        </childnode>
        <childnode refid="3419" relation="include">
        </childnode>
        <childnode refid="3420" relation="include">
        </childnode>
        <childnode refid="3421" relation="include">
        </childnode>
        <childnode refid="3422" relation="include">
        </childnode>
        <childnode refid="3423" relation="include">
        </childnode>
      </node>
      <node id="3434">
        <label>Log/Log.h</label>
        <link refid="_log_8h_source"/>
        <childnode refid="3422" relation="include">
        </childnode>
        <childnode refid="3435" relation="include">
        </childnode>
      </node>
      <node id="3442">
        <label>array</label>
      </node>
      <node id="3439">
        <label>Drawable.h</label>
        <link refid="_drawable_8h_source"/>
        <childnode refid="3415" relation="include">
        </childnode>
        <childnode refid="3414" relation="include">
        </childnode>
        <childnode refid="3422" relation="include">
        </childnode>
        <childnode refid="3426" relation="include">
        </childnode>
      </node>
      <node id="3437">
        <label>Vulkan/VkCore.h</label>
        <link refid="_vk_core_8h_source"/>
        <childnode refid="3411" relation="include">
        </childnode>
        <childnode refid="3415" relation="include">
        </childnode>
        <childnode refid="3438" relation="include">
        </childnode>
        <childnode refid="3422" relation="include">
        </childnode>
        <childnode refid="3441" relation="include">
        </childnode>
        <childnode refid="3434" relation="include">
        </childnode>
      </node>
      <node id="3455">
        <label>iostream</label>
      </node>
      <node id="3450">
        <label>VkDebug.h</label>
        <link refid="_vk_debug_8h_source"/>
        <childnode refid="3411" relation="include">
        </childnode>
      </node>
      <node id="3411">
        <label>vulkan/vulkan_core.h</label>
      </node>
      <node id="3427">
        <label>boost/preprocessor/repetition/repeat.hpp</label>
      </node>
      <node id="3422">
        <label>Types.h</label>
      </node>
      <node id="3409">
        <label>Source/Azura/RenderSystem/Src/Vulkan/VkShader.cpp</label>
        <link refid="_vk_shader_8cpp"/>
        <childnode refid="3410" relation="include">
        </childnode>
        <childnode refid="3436" relation="include">
        </childnode>
        <childnode refid="3437" relation="include">
        </childnode>
        <childnode refid="3448" relation="include">
        </childnode>
        <childnode refid="3451" relation="include">
        </childnode>
        <childnode refid="3453" relation="include">
        </childnode>
        <childnode refid="3447" relation="include">
        </childnode>
        <childnode refid="3445" relation="include">
        </childnode>
        <childnode refid="3455" relation="include">
        </childnode>
      </node>
      <node id="3448">
        <label>Vulkan/VkMacros.h</label>
        <link refid="_vk_macros_8h_source"/>
        <childnode refid="3411" relation="include">
        </childnode>
        <childnode refid="3449" relation="include">
        </childnode>
        <childnode refid="3450" relation="include">
        </childnode>
        <childnode refid="3434" relation="include">
        </childnode>
      </node>
      <node id="3440">
        <label>ComputePool.h</label>
        <link refid="_compute_pool_8h_source"/>
        <childnode refid="3415" relation="include">
        </childnode>
        <childnode refid="3414" relation="include">
        </childnode>
        <childnode refid="3422" relation="include">
        </childnode>
      </node>
      <node id="3451">
        <label>Vulkan/VkTypeMapping.h</label>
        <link refid="_vk_type_mapping_8h_source"/>
        <childnode refid="3411" relation="include">
        </childnode>
        <childnode refid="3452" relation="include">
        </childnode>
        <childnode refid="3414" relation="include">
        </childnode>
        <childnode refid="3426" relation="include">
        </childnode>
      </node>
      <node id="3444">
        <label>Generic/TextureManager.h</label>
        <link refid="_texture_manager_8h_source"/>
        <childnode refid="3422" relation="include">
        </childnode>
        <childnode refid="3445" relation="include">
        </childnode>
        <childnode refid="3447" relation="include">
        </childnode>
        <childnode refid="3415" relation="include">
        </childnode>
        <childnode refid="3414" relation="include">
        </childnode>
        <childnode refid="3434" relation="include">
        </childnode>
      </node>
      <node id="3417">
        <label>cstring</label>
      </node>
      <node id="3413">
        <label>Generic/Shader.h</label>
        <link refid="_shader_8h_source"/>
        <childnode refid="3414" relation="include">
        </childnode>
      </node>
      <node id="3428">
        <label>boost/preprocessor/seq/for_each.hpp</label>
      </node>
      <node id="3441">
        <label>VkTypes.h</label>
        <link refid="_vk_types_8h_source"/>
        <childnode refid="3411" relation="include">
        </childnode>
        <childnode refid="3442" relation="include">
        </childnode>
        <childnode refid="3435" relation="include">
        </childnode>
        <childnode refid="3415" relation="include">
        </childnode>
        <childnode refid="3422" relation="include">
        </childnode>
        <childnode refid="3443" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_azura">Azura</innernamespace>
    <innernamespace refid="namespace_azura_1_1_vulkan">Azura::Vulkan</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;Vulkan/VkShader.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Utils/FileReader.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Vulkan/VkCore.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Vulkan/VkMacros.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Vulkan/VkTypeMapping.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Memory/MemoryFactory.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Memory/MonotonicAllocator.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Memory/HeapMemoryBuffer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_azura" kindref="compound">Azura</ref><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Vulkan<sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>String<sp/>SPRIV_EXT<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;spv&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal">VkShader::VkShader(VkDevice<sp/>device,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>String&amp;<sp/>fileName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Log&amp;<sp/>logger)<sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>:<sp/>Shader(fileName,<sp/>SPRIV_EXT),</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>log_VulkanRenderSystem(logger)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>HEAP_ALLOCATOR(Temporary,<sp/>Memory::MonotonicAllocator,<sp/>0x800000);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>LOG_DEBUG(log_VulkanRenderSystem,<sp/>LOG_LEVEL,<sp/></highlight><highlight class="stringliteral">&quot;VkShader:<sp/>Loading<sp/>Shader:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>GetFilePath().c_str());</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fileContents<sp/>=<sp/>FileReader::GetFileContents(GetFilePath(),<sp/>allocatorTemporary);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>LOG_DEBUG(log_VulkanRenderSystem,<sp/>LOG_LEVEL,<sp/></highlight><highlight class="stringliteral">&quot;VkShader:<sp/>File<sp/>Loaded:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>GetFilePath().c_str());</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>m_module<sp/>=<sp/>VkCore::CreateShaderModule(device,<sp/>fileContents,<sp/>log_VulkanRenderSystem);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>LOG_DEBUG(log_VulkanRenderSystem,<sp/>LOG_LEVEL,<sp/></highlight><highlight class="stringliteral">&quot;VkShader:<sp/>Successfully<sp/>Created<sp/>Shader:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>GetFilePath().c_str());</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal">VkPipelineShaderStageCreateInfo<sp/>VkShader::GetShaderStageInfo()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>vkShaderStage<sp/>=<sp/>ToVkShaderStageFlagBits(GetShaderStage());</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>VERIFY_OPT(log_VulkanRenderSystem,<sp/>vkShaderStage,<sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>Shader<sp/>Stage&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>VkPipelineShaderStageCreateInfo<sp/>shaderStage<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>shaderStage.sType<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>shaderStage.stage<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>vkShaderStage.value();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>shaderStage.module<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>m_module;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>shaderStage.pName<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>GetShaderEntryPoint().c_str();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>shaderStage;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VkShader::CleanUp(VkDevice<sp/>device)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>vkDestroyShaderModule(device,<sp/>m_module,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Vulkan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Azura</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="Source/Azura/RenderSystem/Src/Vulkan/VkShader.cpp"/>
  </compounddef>
</doxygen>
