<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="class_azura_1_1_containers_1_1_array_1_1_iterator" kind="class" language="C++" prot="public">
    <compoundname>Azura::Containers::Array::Iterator</compoundname>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_azura_1_1_containers_1_1_array_1_1_iterator_1a112a2c90d933d41b98430e1fe1d1584e" prot="public" static="no">
        <type>std::random_access_iterator_tag</type>
        <definition>using Azura::Containers::Array&lt; Type, MaxSize &gt;::Iterator::iterator_category =  std::random_access_iterator_tag</definition>
        <argsstring></argsstring>
        <name>iterator_category</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Array.h" line="86" column="1" bodyfile="Source/Containers/Inc/Containers/Array.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_azura_1_1_containers_1_1_array_1_1_iterator_1a524c2d8b413e586366ae5d72666a865c" prot="public" static="no">
        <type>Type</type>
        <definition>using Azura::Containers::Array&lt; Type, MaxSize &gt;::Iterator::value_type =  Type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Array.h" line="87" column="1" bodyfile="Source/Containers/Inc/Containers/Array.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_azura_1_1_containers_1_1_array_1_1_iterator_1a596bbf73f4c96c5ffeaff5fcd36a0f88" prot="public" static="no">
        <type>int</type>
        <definition>using Azura::Containers::Array&lt; Type, MaxSize &gt;::Iterator::difference_type =  int</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Array.h" line="88" column="1" bodyfile="Source/Containers/Inc/Containers/Array.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_azura_1_1_containers_1_1_array_1_1_iterator_1ac5c3b603ab1ea5fe10f3762b9e3eb3ef" prot="public" static="no">
        <type>Type *</type>
        <definition>using Azura::Containers::Array&lt; Type, MaxSize &gt;::Iterator::pointer =  Type*</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Array.h" line="89" column="1" bodyfile="Source/Containers/Inc/Containers/Array.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_azura_1_1_containers_1_1_array_1_1_iterator_1aa5f31929af2bfb88ba79941967337734" prot="public" static="no">
        <type>Type &amp;</type>
        <definition>using Azura::Containers::Array&lt; Type, MaxSize &gt;::Iterator::reference =  Type&amp;</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Array.h" line="90" column="1" bodyfile="Source/Containers/Inc/Containers/Array.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_azura_1_1_containers_1_1_array_1_1_iterator_1aed1a75ba997fbed0e17ba2c080250eb5" prot="private" static="no" mutable="no">
        <type>const <ref refid="class_azura_1_1_containers_1_1_array" kindref="compound">Array</ref> *</type>
        <definition>const Array* Azura::Containers::Array&lt; Type, MaxSize &gt;::Iterator::mPtr</definition>
        <argsstring></argsstring>
        <name>mPtr</name>
        <initializer>{nullptr}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Array.h" line="196" column="1" bodyfile="Source/Containers/Inc/Containers/Array.h" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_azura_1_1_containers_1_1_array_1_1_iterator_1a39297ddffeb9aba1e88a87abb9603193" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Azura::Containers::Array&lt; Type, MaxSize &gt;::Iterator::mIndex</definition>
        <argsstring></argsstring>
        <name>mIndex</name>
        <initializer>{-1}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Array.h" line="197" column="1" bodyfile="Source/Containers/Inc/Containers/Array.h" bodystart="197" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_array_1_1_iterator_1a802d4119d5fb5bd135c82874a75344be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Azura::Containers::Array&lt; Type, MaxSize &gt;::Iterator::Iterator</definition>
        <argsstring>()=default</argsstring>
        <name>Iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Array.h" line="81" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_array_1_1_iterator_1a4ef5fae2e102226e2144eba5a9ddc36d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Azura::Containers::Array&lt; Type, MaxSize &gt;::Iterator::~Iterator</definition>
        <argsstring>()=default</argsstring>
        <name>~Iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Array.h" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_array_1_1_iterator_1abee89f1f5ec73ee40c647bdada1bd513" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Azura::Containers::Array&lt; Type, MaxSize &gt;::Iterator::Iterator</definition>
        <argsstring>(const Iterator &amp;other)=default</argsstring>
        <name>Iterator</name>
        <param>
          <type>const <ref refid="class_azura_1_1_containers_1_1_array_1_1_iterator" kindref="compound">Iterator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Array.h" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_array_1_1_iterator_1a98e4ad55cfed7fcfbac276a63185633f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_azura_1_1_containers_1_1_array_1_1_iterator" kindref="compound">Iterator</ref> &amp;</type>
        <definition>Iterator&amp; Azura::Containers::Array&lt; Type, MaxSize &gt;::Iterator::operator=</definition>
        <argsstring>(const Iterator &amp;other)=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_azura_1_1_containers_1_1_array_1_1_iterator" kindref="compound">Iterator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Array.h" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_array_1_1_iterator_1a6119f84f788f7b8a4e65ea50edb752ac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Azura::Containers::Array&lt; Type, MaxSize &gt;::Iterator::Iterator</definition>
        <argsstring>(const Array *ptr, int index)</argsstring>
        <name>Iterator</name>
        <param>
          <type>const <ref refid="class_azura_1_1_containers_1_1_array" kindref="compound">Array</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Array.h" line="92" column="1" bodyfile="Source/Containers/Inc/Containers/Array.h" bodystart="92" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_array_1_1_iterator_1a36a55b4261f27fd4d5b1a1d6704cba9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Azura::Containers::Array&lt; Type, MaxSize &gt;::Iterator::Iterator</definition>
        <argsstring>(Iterator &amp;&amp;other) noexcept=default</argsstring>
        <name>Iterator</name>
        <param>
          <type><ref refid="class_azura_1_1_containers_1_1_array_1_1_iterator" kindref="compound">Iterator</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Array.h" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_array_1_1_iterator_1a035cd9f229803b6de0183dc8b140300f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_azura_1_1_containers_1_1_array_1_1_iterator" kindref="compound">Iterator</ref> &amp;</type>
        <definition>Iterator&amp; Azura::Containers::Array&lt; Type, MaxSize &gt;::Iterator::operator=</definition>
        <argsstring>(Iterator &amp;&amp;other) noexcept=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="class_azura_1_1_containers_1_1_array_1_1_iterator" kindref="compound">Iterator</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Array.h" line="95" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_array_1_1_iterator_1ae86ee2d4f3583020e85e5449ccd29323" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_azura_1_1_containers_1_1_array_1_1_iterator" kindref="compound">Iterator</ref> &amp;</type>
        <definition>Iterator&amp; Azura::Containers::Array&lt; Type, MaxSize &gt;::Iterator::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Array.h" line="98" column="1" bodyfile="Source/Containers/Inc/Containers/Array.h" bodystart="98" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_array_1_1_iterator_1a64ec3ea04174dac760ab80da43e9937a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_azura_1_1_containers_1_1_array_1_1_iterator" kindref="compound">Iterator</ref></type>
        <definition>Iterator Azura::Containers::Array&lt; Type, MaxSize &gt;::Iterator::operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Array.h" line="104" column="1" bodyfile="Source/Containers/Inc/Containers/Array.h" bodystart="104" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_array_1_1_iterator_1a488c1f839802659517ddad5710660d2a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_azura_1_1_containers_1_1_array_1_1_iterator" kindref="compound">Iterator</ref> &amp;</type>
        <definition>Iterator&amp; Azura::Containers::Array&lt; Type, MaxSize &gt;::Iterator::operator--</definition>
        <argsstring>()</argsstring>
        <name>operator--</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Array.h" line="111" column="1" bodyfile="Source/Containers/Inc/Containers/Array.h" bodystart="111" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_array_1_1_iterator_1a55c0a32a87349abe616dec97abeba22b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_azura_1_1_containers_1_1_array_1_1_iterator" kindref="compound">Iterator</ref></type>
        <definition>Iterator Azura::Containers::Array&lt; Type, MaxSize &gt;::Iterator::operator--</definition>
        <argsstring>(int)</argsstring>
        <name>operator--</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Array.h" line="117" column="1" bodyfile="Source/Containers/Inc/Containers/Array.h" bodystart="117" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_array_1_1_iterator_1ab7dc4af88adb1732fc4ac3b718c011cc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Azura::Containers::Array&lt; Type, MaxSize &gt;::Iterator::operator==</definition>
        <argsstring>(const Iterator &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_azura_1_1_containers_1_1_array_1_1_iterator" kindref="compound">Iterator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Array.h" line="123" column="1" bodyfile="Source/Containers/Inc/Containers/Array.h" bodystart="123" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_array_1_1_iterator_1a6e9eb4b3833b21303c0fbe7cc848be9e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Azura::Containers::Array&lt; Type, MaxSize &gt;::Iterator::operator!=</definition>
        <argsstring>(const Iterator &amp;rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_azura_1_1_containers_1_1_array_1_1_iterator" kindref="compound">Iterator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Array.h" line="127" column="1" bodyfile="Source/Containers/Inc/Containers/Array.h" bodystart="127" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_array_1_1_iterator_1a205e4200c563746c2449238bed78730c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Azura::Containers::Array&lt; Type, MaxSize &gt;::Iterator::operator&lt;</definition>
        <argsstring>(const Iterator &amp;rhs)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="class_azura_1_1_containers_1_1_array_1_1_iterator" kindref="compound">Iterator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Array.h" line="131" column="1" bodyfile="Source/Containers/Inc/Containers/Array.h" bodystart="131" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_array_1_1_iterator_1a09c0d2763194ebfca06a9955f79e381b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Azura::Containers::Array&lt; Type, MaxSize &gt;::Iterator::operator&lt;=</definition>
        <argsstring>(const Iterator &amp;rhs)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="class_azura_1_1_containers_1_1_array_1_1_iterator" kindref="compound">Iterator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Array.h" line="136" column="1" bodyfile="Source/Containers/Inc/Containers/Array.h" bodystart="136" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_array_1_1_iterator_1abf3249302ee48daee8412419538baf44" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Azura::Containers::Array&lt; Type, MaxSize &gt;::Iterator::operator&gt;</definition>
        <argsstring>(const Iterator &amp;rhs)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="class_azura_1_1_containers_1_1_array_1_1_iterator" kindref="compound">Iterator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Array.h" line="141" column="1" bodyfile="Source/Containers/Inc/Containers/Array.h" bodystart="141" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_array_1_1_iterator_1a7614deb1341c0f7a2c5ac6b339d0617c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Azura::Containers::Array&lt; Type, MaxSize &gt;::Iterator::operator&gt;=</definition>
        <argsstring>(const Iterator &amp;rhs)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="class_azura_1_1_containers_1_1_array_1_1_iterator" kindref="compound">Iterator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Array.h" line="146" column="1" bodyfile="Source/Containers/Inc/Containers/Array.h" bodystart="146" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_array_1_1_iterator_1a960b3a44936f4b83ea73dd32465c3527" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_azura_1_1_containers_1_1_array_1_1_iterator" kindref="compound">Iterator</ref></type>
        <definition>Iterator Azura::Containers::Array&lt; Type, MaxSize &gt;::Iterator::operator+</definition>
        <argsstring>(const int &amp;idx)</argsstring>
        <name>operator+</name>
        <param>
          <type>const int &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Array.h" line="151" column="1" bodyfile="Source/Containers/Inc/Containers/Array.h" bodystart="151" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_array_1_1_iterator_1a59adade82ee2e5f908e4a849aeef4c11" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_azura_1_1_containers_1_1_array_1_1_iterator" kindref="compound">Iterator</ref> &amp;</type>
        <definition>Iterator&amp; Azura::Containers::Array&lt; Type, MaxSize &gt;::Iterator::operator+=</definition>
        <argsstring>(const int &amp;idx)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const int &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Array.h" line="155" column="1" bodyfile="Source/Containers/Inc/Containers/Array.h" bodystart="155" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_array_1_1_iterator_1aeb26bfc8bd0ac21947819831eb4f49ad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_azura_1_1_containers_1_1_array_1_1_iterator" kindref="compound">Iterator</ref></type>
        <definition>Iterator Azura::Containers::Array&lt; Type, MaxSize &gt;::Iterator::operator-</definition>
        <argsstring>(const int &amp;idx)</argsstring>
        <name>operator-</name>
        <param>
          <type>const int &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Array.h" line="160" column="1" bodyfile="Source/Containers/Inc/Containers/Array.h" bodystart="160" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_array_1_1_iterator_1a7d6a72d457a53fe6dfbbe7987fa8067e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_azura_1_1_containers_1_1_array_1_1_iterator" kindref="compound">Iterator</ref> &amp;</type>
        <definition>Iterator&amp; Azura::Containers::Array&lt; Type, MaxSize &gt;::Iterator::operator-=</definition>
        <argsstring>(const int &amp;idx)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const int &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Array.h" line="165" column="1" bodyfile="Source/Containers/Inc/Containers/Array.h" bodystart="165" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_array_1_1_iterator_1adc87591c01fb4896e006faccba52b0c9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Azura::Containers::Array&lt; Type, MaxSize &gt;::Iterator::operator-</definition>
        <argsstring>(const Iterator &amp;rhs)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="class_azura_1_1_containers_1_1_array_1_1_iterator" kindref="compound">Iterator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Array.h" line="171" column="1" bodyfile="Source/Containers/Inc/Containers/Array.h" bodystart="171" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_array_1_1_iterator_1a7316fcadd0b3953b02c9274cf722a98a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Type &amp;</type>
        <definition>Type&amp; Azura::Containers::Array&lt; Type, MaxSize &gt;::Iterator::operator*</definition>
        <argsstring>()</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Array.h" line="183" column="1" bodyfile="Source/Containers/Inc/Containers/Array.h" bodystart="183" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_array_1_1_iterator_1afb30eaa834c00e4ba08af0d501941c60" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Type *</type>
        <definition>Type* Azura::Containers::Array&lt; Type, MaxSize &gt;::Iterator::operator-&gt;</definition>
        <argsstring>()</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Array.h" line="187" column="1" bodyfile="Source/Containers/Inc/Containers/Array.h" bodystart="187" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_array_1_1_iterator_1a6d8f3af6752b3649948869cd4bd3c13f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Type &amp;</type>
        <definition>Type&amp; Azura::Containers::Array&lt; Type, MaxSize &gt;::Iterator::operator[]</definition>
        <argsstring>(const int &amp;idx)</argsstring>
        <name>operator[]</name>
        <param>
          <type>const int &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Array.h" line="191" column="1" bodyfile="Source/Containers/Inc/Containers/Array.h" bodystart="191" bodyend="193"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_azura_1_1_containers_1_1_array_1_1_iterator_1a93661b1094ed6450a2921e0ff69b46ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend int</type>
        <definition>int operator-</definition>
        <argsstring>(const Iterator &amp;lhs, const Iterator &amp;rhs)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="class_azura_1_1_containers_1_1_array_1_1_iterator" kindref="compound">Iterator</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="class_azura_1_1_containers_1_1_array_1_1_iterator" kindref="compound">Iterator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Array.h" line="176" column="1" bodyfile="Source/Containers/Inc/Containers/Array.h" bodystart="176" bodyend="179"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="Source/Containers/Inc/Containers/Array.h" line="79" column="1" bodyfile="Source/Containers/Inc/Containers/Array.h" bodystart="79" bodyend="198"/>
    <listofallmembers>
      <member refid="class_azura_1_1_containers_1_1_array_1_1_iterator_1a596bbf73f4c96c5ffeaff5fcd36a0f88" prot="public" virt="non-virtual"><scope>Azura::Containers::Array::Iterator</scope><name>difference_type</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_1_1_iterator_1a802d4119d5fb5bd135c82874a75344be" prot="public" virt="non-virtual"><scope>Azura::Containers::Array::Iterator</scope><name>Iterator</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_1_1_iterator_1abee89f1f5ec73ee40c647bdada1bd513" prot="public" virt="non-virtual"><scope>Azura::Containers::Array::Iterator</scope><name>Iterator</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_1_1_iterator_1a6119f84f788f7b8a4e65ea50edb752ac" prot="public" virt="non-virtual"><scope>Azura::Containers::Array::Iterator</scope><name>Iterator</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_1_1_iterator_1a36a55b4261f27fd4d5b1a1d6704cba9e" prot="public" virt="non-virtual"><scope>Azura::Containers::Array::Iterator</scope><name>Iterator</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_1_1_iterator_1a112a2c90d933d41b98430e1fe1d1584e" prot="public" virt="non-virtual"><scope>Azura::Containers::Array::Iterator</scope><name>iterator_category</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_1_1_iterator_1a39297ddffeb9aba1e88a87abb9603193" prot="private" virt="non-virtual"><scope>Azura::Containers::Array::Iterator</scope><name>mIndex</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_1_1_iterator_1aed1a75ba997fbed0e17ba2c080250eb5" prot="private" virt="non-virtual"><scope>Azura::Containers::Array::Iterator</scope><name>mPtr</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_1_1_iterator_1a6e9eb4b3833b21303c0fbe7cc848be9e" prot="public" virt="non-virtual"><scope>Azura::Containers::Array::Iterator</scope><name>operator!=</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_1_1_iterator_1a7316fcadd0b3953b02c9274cf722a98a" prot="public" virt="non-virtual"><scope>Azura::Containers::Array::Iterator</scope><name>operator*</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_1_1_iterator_1a960b3a44936f4b83ea73dd32465c3527" prot="public" virt="non-virtual"><scope>Azura::Containers::Array::Iterator</scope><name>operator+</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_1_1_iterator_1ae86ee2d4f3583020e85e5449ccd29323" prot="public" virt="non-virtual"><scope>Azura::Containers::Array::Iterator</scope><name>operator++</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_1_1_iterator_1a64ec3ea04174dac760ab80da43e9937a" prot="public" virt="non-virtual"><scope>Azura::Containers::Array::Iterator</scope><name>operator++</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_1_1_iterator_1a59adade82ee2e5f908e4a849aeef4c11" prot="public" virt="non-virtual"><scope>Azura::Containers::Array::Iterator</scope><name>operator+=</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_1_1_iterator_1aeb26bfc8bd0ac21947819831eb4f49ad" prot="public" virt="non-virtual"><scope>Azura::Containers::Array::Iterator</scope><name>operator-</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_1_1_iterator_1adc87591c01fb4896e006faccba52b0c9" prot="public" virt="non-virtual"><scope>Azura::Containers::Array::Iterator</scope><name>operator-</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_1_1_iterator_1a93661b1094ed6450a2921e0ff69b46ff" prot="public" virt="non-virtual"><scope>Azura::Containers::Array::Iterator</scope><name>operator-</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_1_1_iterator_1a488c1f839802659517ddad5710660d2a" prot="public" virt="non-virtual"><scope>Azura::Containers::Array::Iterator</scope><name>operator--</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_1_1_iterator_1a55c0a32a87349abe616dec97abeba22b" prot="public" virt="non-virtual"><scope>Azura::Containers::Array::Iterator</scope><name>operator--</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_1_1_iterator_1a7d6a72d457a53fe6dfbbe7987fa8067e" prot="public" virt="non-virtual"><scope>Azura::Containers::Array::Iterator</scope><name>operator-=</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_1_1_iterator_1afb30eaa834c00e4ba08af0d501941c60" prot="public" virt="non-virtual"><scope>Azura::Containers::Array::Iterator</scope><name>operator-&gt;</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_1_1_iterator_1a205e4200c563746c2449238bed78730c" prot="public" virt="non-virtual"><scope>Azura::Containers::Array::Iterator</scope><name>operator&lt;</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_1_1_iterator_1a09c0d2763194ebfca06a9955f79e381b" prot="public" virt="non-virtual"><scope>Azura::Containers::Array::Iterator</scope><name>operator&lt;=</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_1_1_iterator_1a98e4ad55cfed7fcfbac276a63185633f" prot="public" virt="non-virtual"><scope>Azura::Containers::Array::Iterator</scope><name>operator=</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_1_1_iterator_1a035cd9f229803b6de0183dc8b140300f" prot="public" virt="non-virtual"><scope>Azura::Containers::Array::Iterator</scope><name>operator=</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_1_1_iterator_1ab7dc4af88adb1732fc4ac3b718c011cc" prot="public" virt="non-virtual"><scope>Azura::Containers::Array::Iterator</scope><name>operator==</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_1_1_iterator_1abf3249302ee48daee8412419538baf44" prot="public" virt="non-virtual"><scope>Azura::Containers::Array::Iterator</scope><name>operator&gt;</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_1_1_iterator_1a7614deb1341c0f7a2c5ac6b339d0617c" prot="public" virt="non-virtual"><scope>Azura::Containers::Array::Iterator</scope><name>operator&gt;=</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_1_1_iterator_1a6d8f3af6752b3649948869cd4bd3c13f" prot="public" virt="non-virtual"><scope>Azura::Containers::Array::Iterator</scope><name>operator[]</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_1_1_iterator_1ac5c3b603ab1ea5fe10f3762b9e3eb3ef" prot="public" virt="non-virtual"><scope>Azura::Containers::Array::Iterator</scope><name>pointer</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_1_1_iterator_1aa5f31929af2bfb88ba79941967337734" prot="public" virt="non-virtual"><scope>Azura::Containers::Array::Iterator</scope><name>reference</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_1_1_iterator_1a524c2d8b413e586366ae5d72666a865c" prot="public" virt="non-virtual"><scope>Azura::Containers::Array::Iterator</scope><name>value_type</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_1_1_iterator_1a4ef5fae2e102226e2144eba5a9ddc36d" prot="public" virt="non-virtual"><scope>Azura::Containers::Array::Iterator</scope><name>~Iterator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
