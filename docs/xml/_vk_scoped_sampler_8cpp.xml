<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="_vk_scoped_sampler_8cpp" kind="file" language="C++">
    <compoundname>VkScopedSampler.cpp</compoundname>
    <includes refid="_vk_scoped_sampler_8h" local="yes">Vulkan/VkScopedSampler.h</includes>
    <includes refid="_vk_macros_8h" local="yes">Vulkan/VkMacros.h</includes>
    <incdepgraph>
      <node id="3356">
        <label>Vulkan/VkScopedSampler.h</label>
        <link refid="_vk_scoped_sampler_8h_source"/>
        <childnode refid="3357" relation="include">
        </childnode>
        <childnode refid="3358" relation="include">
        </childnode>
      </node>
      <node id="3362">
        <label>stdexcept</label>
      </node>
      <node id="3355">
        <label>Source/Azura/RenderSystem/Src/Vulkan/VkScopedSampler.cpp</label>
        <link refid="_vk_scoped_sampler_8cpp"/>
        <childnode refid="3356" relation="include">
        </childnode>
        <childnode refid="3361" relation="include">
        </childnode>
      </node>
      <node id="3360">
        <label>vector</label>
      </node>
      <node id="3358">
        <label>Log/Log.h</label>
        <link refid="_log_8h_source"/>
        <childnode refid="3359" relation="include">
        </childnode>
        <childnode refid="3360" relation="include">
        </childnode>
      </node>
      <node id="3363">
        <label>VkDebug.h</label>
        <link refid="_vk_debug_8h_source"/>
        <childnode refid="3357" relation="include">
        </childnode>
      </node>
      <node id="3357">
        <label>vulkan/vulkan_core.h</label>
      </node>
      <node id="3359">
        <label>Types.h</label>
      </node>
      <node id="3361">
        <label>Vulkan/VkMacros.h</label>
        <link refid="_vk_macros_8h_source"/>
        <childnode refid="3357" relation="include">
        </childnode>
        <childnode refid="3362" relation="include">
        </childnode>
        <childnode refid="3363" relation="include">
        </childnode>
        <childnode refid="3358" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_azura">Azura</innernamespace>
    <innernamespace refid="namespace_azura_1_1_vulkan">Azura::Vulkan</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;Vulkan/VkScopedSampler.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Vulkan/VkMacros.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_azura" kindref="compound">Azura</ref><sp/>{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Vulkan<sp/>{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal">VkScopedSampler::VkScopedSampler(VkDevice<sp/>device,<sp/>Log<sp/>logger)</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/>:<sp/>m_device(device),</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>log_VulkanRenderSystem(std::move(logger))<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(vasumahesh1):[SAMPLER]:<sp/>Generalize<sp/>this!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/>VkSamplerCreateInfo<sp/>samplerInfo<sp/><sp/><sp/><sp/><sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/>samplerInfo.sType<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/>samplerInfo.magFilter<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>VK_FILTER_NEAREST;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/>samplerInfo.minFilter<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>VK_FILTER_NEAREST;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>samplerInfo.addressModeU<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>samplerInfo.addressModeV<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>samplerInfo.addressModeW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>samplerInfo.anisotropyEnable<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>VK_FALSE;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>samplerInfo.maxAnisotropy<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>samplerInfo.borderColor<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>VK_BORDER_COLOR_INT_OPAQUE_BLACK;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>samplerInfo.unnormalizedCoordinates<sp/>=<sp/>VK_FALSE;<sp/></highlight><highlight class="comment">//<sp/>[0,1)<sp/>addressing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>samplerInfo.compareEnable<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>VK_FALSE;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>samplerInfo.compareOp<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>VK_COMPARE_OP_ALWAYS;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>samplerInfo.mipmapMode<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>VK_SAMPLER_MIPMAP_MODE_NEAREST;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>samplerInfo.mipLodBias<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>samplerInfo.minLod<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>samplerInfo.maxLod<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0f;<sp/></highlight><highlight class="comment">//<sp/>Force<sp/>use<sp/>0th<sp/>Mip<sp/>Map<sp/>for<sp/>Rendering.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>VERIFY_VK_OP(log_VulkanRenderSystem,<sp/>vkCreateSampler(m_device,<sp/>&amp;samplerInfo,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;m_sampler),</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>texture<sp/>sampler&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal">VkSampler<sp/>VkScopedSampler::Real()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_sampler;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VkScopedSampler::CleanUp()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>vkDestroySampler(m_device,<sp/>m_sampler,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Vulkan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Azura</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="Source/Azura/RenderSystem/Src/Vulkan/VkScopedSampler.cpp"/>
  </compounddef>
</doxygen>
