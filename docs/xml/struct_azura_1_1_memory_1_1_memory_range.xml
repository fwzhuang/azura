<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="struct_azura_1_1_memory_1_1_memory_range" kind="struct" language="C++" prot="public">
    <compoundname>Azura::Memory::MemoryRange</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_azura_1_1_memory_1_1_memory_range_1a96820fca226d438750de7409b41ff206" prot="public" static="no" mutable="no">
        <type>U32</type>
        <definition>U32 Azura::Memory::MemoryRange::m_offset</definition>
        <argsstring></argsstring>
        <name>m_offset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Common/Inc/Memory/Allocator.h" line="16" column="1" bodyfile="Source/Common/Inc/Memory/Allocator.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_azura_1_1_memory_1_1_memory_range_1ad39d3d8ef0e6ad3bd0093530c755e5ce" prot="public" static="no" mutable="no">
        <type>U32</type>
        <definition>U32 Azura::Memory::MemoryRange::m_size</definition>
        <argsstring></argsstring>
        <name>m_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Common/Inc/Memory/Allocator.h" line="17" column="1" bodyfile="Source/Common/Inc/Memory/Allocator.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_azura_1_1_memory_1_1_memory_range_1a5be4402a0143dbf5ba4ccb717ace87ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Azura::Memory::MemoryRange::MemoryRange</definition>
        <argsstring>(U32 offset, U32 size)</argsstring>
        <name>MemoryRange</name>
        <param>
          <type>U32</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>U32</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Common/Inc/Memory/Allocator.h" line="19" column="1" bodyfile="Source/Common/Src/Memory/Allocator.cpp" bodystart="6" bodyend="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="Source/Common/Inc/Memory/Allocator.h" line="15" column="1" bodyfile="Source/Common/Inc/Memory/Allocator.h" bodystart="15" bodyend="20"/>
    <listofallmembers>
      <member refid="struct_azura_1_1_memory_1_1_memory_range_1a96820fca226d438750de7409b41ff206" prot="public" virt="non-virtual"><scope>Azura::Memory::MemoryRange</scope><name>m_offset</name></member>
      <member refid="struct_azura_1_1_memory_1_1_memory_range_1ad39d3d8ef0e6ad3bd0093530c755e5ce" prot="public" virt="non-virtual"><scope>Azura::Memory::MemoryRange</scope><name>m_size</name></member>
      <member refid="struct_azura_1_1_memory_1_1_memory_range_1a5be4402a0143dbf5ba4ccb717ace87ca" prot="public" virt="non-virtual"><scope>Azura::Memory::MemoryRange</scope><name>MemoryRange</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
