<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="_vk_win32_platform_8cpp" kind="file" language="C++">
    <compoundname>VkWin32Platform.cpp</compoundname>
    <includes refid="_vk_platform_8h" local="yes">Vulkan/VkPlatform.h</includes>
    <includes local="no">Windows.h</includes>
    <includes local="no">vulkan/vulkan_win32.h</includes>
    <includes refid="_vk_macros_8h" local="yes">Vulkan/VkMacros.h</includes>
    <incdepgraph>
      <node id="3736">
        <label>functional</label>
      </node>
      <node id="3737">
        <label>iterator</label>
      </node>
      <node id="3751">
        <label>VkDebug.h</label>
        <link refid="_vk_debug_8h_source"/>
        <childnode refid="3732" relation="include">
        </childnode>
      </node>
      <node id="3742">
        <label>cstdint</label>
      </node>
      <node id="3747">
        <label>Windows.h</label>
      </node>
      <node id="3734">
        <label>cassert</label>
      </node>
      <node id="3750">
        <label>stdexcept</label>
      </node>
      <node id="3743">
        <label>string</label>
      </node>
      <node id="3748">
        <label>vulkan/vulkan_win32.h</label>
      </node>
      <node id="3739">
        <label>Memory/Allocator.h</label>
        <link refid="_allocator_8h_source"/>
        <childnode refid="3736" relation="include">
        </childnode>
        <childnode refid="3740" relation="include">
        </childnode>
        <childnode refid="3744" relation="include">
        </childnode>
      </node>
      <node id="3733">
        <label>Containers/Vector.h</label>
        <link refid="_vector_8h_source"/>
        <childnode refid="3734" relation="include">
        </childnode>
        <childnode refid="3735" relation="include">
        </childnode>
        <childnode refid="3736" relation="include">
        </childnode>
        <childnode refid="3737" relation="include">
        </childnode>
        <childnode refid="3738" relation="include">
        </childnode>
        <childnode refid="3739" relation="include">
        </childnode>
        <childnode refid="3740" relation="include">
        </childnode>
        <childnode refid="3744" relation="include">
        </childnode>
      </node>
      <node id="3744">
        <label>Utils/Macros.h</label>
        <link refid="_macros_8h_source"/>
      </node>
      <node id="3746">
        <label>vector</label>
      </node>
      <node id="3731">
        <label>Vulkan/VkPlatform.h</label>
        <link refid="_vk_platform_8h_source"/>
        <childnode refid="3732" relation="include">
        </childnode>
        <childnode refid="3733" relation="include">
        </childnode>
        <childnode refid="3745" relation="include">
        </childnode>
      </node>
      <node id="3738">
        <label>Array.h</label>
        <link refid="_array_8h_source"/>
        <childnode refid="3734" relation="include">
        </childnode>
        <childnode refid="3735" relation="include">
        </childnode>
        <childnode refid="3739" relation="include">
        </childnode>
        <childnode refid="3740" relation="include">
        </childnode>
      </node>
      <node id="3745">
        <label>Log/Log.h</label>
        <link refid="_log_8h_source"/>
        <childnode refid="3740" relation="include">
        </childnode>
        <childnode refid="3746" relation="include">
        </childnode>
      </node>
      <node id="3749">
        <label>Vulkan/VkMacros.h</label>
        <link refid="_vk_macros_8h_source"/>
        <childnode refid="3732" relation="include">
        </childnode>
        <childnode refid="3750" relation="include">
        </childnode>
        <childnode refid="3751" relation="include">
        </childnode>
        <childnode refid="3745" relation="include">
        </childnode>
      </node>
      <node id="3732">
        <label>vulkan/vulkan_core.h</label>
      </node>
      <node id="3741">
        <label>cstddef</label>
      </node>
      <node id="3730">
        <label>Source/Azura/RenderSystem/Src/Vulkan/Windows/VkWin32Platform.cpp</label>
        <link refid="_vk_win32_platform_8cpp"/>
        <childnode refid="3731" relation="include">
        </childnode>
        <childnode refid="3747" relation="include">
        </childnode>
        <childnode refid="3748" relation="include">
        </childnode>
        <childnode refid="3749" relation="include">
        </childnode>
      </node>
      <node id="3740">
        <label>Types.h</label>
        <link refid="_types_8h_source"/>
        <childnode refid="3741" relation="include">
        </childnode>
        <childnode refid="3742" relation="include">
        </childnode>
        <childnode refid="3743" relation="include">
        </childnode>
      </node>
      <node id="3735">
        <label>cstring</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_azura">Azura</innernamespace>
    <innernamespace refid="namespace_azura_1_1_vulkan">Azura::Vulkan</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;Vulkan/VkPlatform.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Windows.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vulkan/vulkan_win32.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Vulkan/VkMacros.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_azura" kindref="compound">Azura</ref><sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Vulkan<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal">VkSurfaceKHR<sp/>VkPlatform::CreateSurface(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>windowHandle,<sp/>VkInstance<sp/>instance,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Log&amp;<sp/>log_VulkanRenderSystem)<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/>VkWin32SurfaceCreateInfoKHR<sp/>createInfo<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/>createInfo.sType<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>VK_STRUCTURE_TYPE_WIN32_SURFACE_CREATE_INFO_KHR;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINTNEXTLINE(cppcoreguidelines-pro-type-reinterpret-cast)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>createInfo.hwnd<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">HWND*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(windowHandle);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>createInfo.hinstance<sp/>=<sp/>GetModuleHandle(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>CreateWin32SurfaceKHR<sp/>=</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINTNEXTLINE(cppcoreguidelines-pro-type-reinterpret-cast)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">PFN_vkCreateWin32SurfaceKHR</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(vkGetInstanceProcAddr(instance,<sp/></highlight><highlight class="stringliteral">&quot;vkCreateWin32SurfaceKHR&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>FAIL_IF(log_VulkanRenderSystem,<sp/>CreateWin32SurfaceKHR<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>find<sp/>PFN_vkCreateWin32SurfaceKHR&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>VkSurfaceKHR<sp/>surface;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>VERIFY_VK_OP(log_VulkanRenderSystem,<sp/>CreateWin32SurfaceKHR(instance,<sp/>&amp;createInfo,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;surface),<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>window<sp/>surface&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>surface;</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VkPlatform::GetInstanceExtensions(Containers::Vector&lt;const<sp/>char*&gt;&amp;<sp/>extensions)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>extensions.PushBack(VK_KHR_SURFACE);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>extensions.PushBack(</highlight><highlight class="stringliteral">&quot;VK_KHR_win32_surface&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BUILD_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>extensions.PushBack(VK_EXT_DEBUG_REPORT_EXTENSION_NAME);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Vulkan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Azura</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="Source/Azura/RenderSystem/Src/Vulkan/Windows/VkWin32Platform.cpp"/>
  </compounddef>
</doxygen>
