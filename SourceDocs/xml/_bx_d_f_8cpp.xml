<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="_bx_d_f_8cpp" kind="file" language="C++">
    <compoundname>BxDF.cpp</compoundname>
    <includes refid="_bx_d_f_8h" local="yes">BxDF.h</includes>
    <includes local="yes">../../Core/Constants.h</includes>
    <includes local="yes">../../Core/Utils.h</includes>
    <includes local="yes">../../Core/Warper.h</includes>
    <incdepgraph>
      <node id="5085">
        <label>mathfu/vector.h</label>
      </node>
      <node id="5079">
        <label>../../Core/AllocationDependent.h</label>
        <link refid="_allocation_dependent_8h_source"/>
      </node>
      <node id="5083">
        <label>string</label>
      </node>
      <node id="5088">
        <label>../../Core/Utils.h</label>
      </node>
      <node id="5080">
        <label>../../Core/Types.h</label>
        <link refid="_dibella_2_inc_2_core_2_types_8h_source"/>
        <childnode refid="5081" relation="include">
        </childnode>
        <childnode refid="5082" relation="include">
        </childnode>
        <childnode refid="5083" relation="include">
        </childnode>
        <childnode refid="5084" relation="include">
        </childnode>
        <childnode refid="5085" relation="include">
        </childnode>
      </node>
      <node id="5089">
        <label>../../Core/Warper.h</label>
      </node>
      <node id="5087">
        <label>../../Core/Constants.h</label>
      </node>
      <node id="5081">
        <label>ToolsCore.h</label>
      </node>
      <node id="5082">
        <label>cstddef</label>
      </node>
      <node id="5084">
        <label>mathfu/matrix.h</label>
      </node>
      <node id="5078">
        <label>BxDF.h</label>
        <link refid="_bx_d_f_8h_source"/>
        <childnode refid="5079" relation="include">
        </childnode>
        <childnode refid="5080" relation="include">
        </childnode>
        <childnode refid="5086" relation="include">
        </childnode>
      </node>
      <node id="5077">
        <label>Source/Dibella/Src/Materials/Primitives/BxDF.cpp</label>
        <link refid="_bx_d_f_8cpp"/>
        <childnode refid="5078" relation="include">
        </childnode>
        <childnode refid="5087" relation="include">
        </childnode>
        <childnode refid="5088" relation="include">
        </childnode>
        <childnode refid="5089" relation="include">
        </childnode>
      </node>
      <node id="5086">
        <label>BxDFType.h</label>
        <link refid="_bx_d_f_type_8h_source"/>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_dibella">Dibella</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;BxDF.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../Core/Constants.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../Core/Utils.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../Core/Warper.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_dibella" kindref="compound">Dibella</ref><sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal">BxDF::BxDF(Allocator*<sp/>allocator,<sp/>BxDFType<sp/>type)<sp/>:<sp/>AllocationDependent(allocator),<sp/>mType(type)<sp/>{}</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal">Color3f<sp/>BxDF::SampleF(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector3f&amp;<sp/>wo,<sp/>Vector3f*<sp/>wi,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Point2f&amp;<sp/>xi,<sp/>Float*<sp/>pdf,<sp/>BxDFType*<sp/>sampledType)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/>*wi<sp/>=<sp/>Warper::SquareToHemisphereUniform(xi);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Flip<sp/>the<sp/>WI.Z<sp/>if<sp/>we<sp/>are<sp/>in<sp/>the<sp/>opposite<sp/>hemisphere.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wo.z<sp/>&lt;<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>wi-&gt;z<sp/>*=<sp/>-1;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>*pdf<sp/>=<sp/>CalculatePDF(wo,<sp/>*wi);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CalculateF(wo,<sp/>*wi);</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>BxDF::CalculatePDF(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector3f&amp;<sp/>wo,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector3f&amp;<sp/>wi)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SameHemisphere(wo,<sp/>wi)<sp/>?<sp/>INV2_PI<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>BxDF::IsType(BxDFType<sp/>t)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(mType<sp/>&amp;<sp/>t)<sp/>==<sp/>mType;</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal">};<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Dibella</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="Source/Dibella/Src/Materials/Primitives/BxDF.cpp"/>
  </compounddef>
</doxygen>
