<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="_d3_d12_type_mapping_8cpp" kind="file" language="C++">
    <compoundname>D3D12TypeMapping.cpp</compoundname>
    <includes refid="_d3_d12_type_mapping_8h" local="yes">D3D12/D3D12TypeMapping.h</includes>
    <incdepgraph>
      <node id="2639">
        <label>Source/Azura/RenderSystem/Src/D3D12/D3D12TypeMapping.cpp</label>
        <link refid="_d3_d12_type_mapping_8cpp"/>
        <childnode refid="2640" relation="include">
        </childnode>
      </node>
      <node id="2646">
        <label>functional</label>
      </node>
      <node id="2655">
        <label>Generic/Constants.h</label>
        <link refid="_constants_8h_source"/>
        <childnode refid="2656" relation="include">
        </childnode>
        <childnode refid="2650" relation="include">
        </childnode>
      </node>
      <node id="2666">
        <label>windows.h</label>
      </node>
      <node id="2647">
        <label>iterator</label>
      </node>
      <node id="2652">
        <label>cstdint</label>
      </node>
      <node id="2667">
        <label>d3d12.h</label>
      </node>
      <node id="2640">
        <label>D3D12/D3D12TypeMapping.h</label>
        <link refid="_d3_d12_type_mapping_8h_source"/>
        <childnode refid="2641" relation="include">
        </childnode>
        <childnode refid="2642" relation="include">
        </childnode>
        <childnode refid="2657" relation="include">
        </childnode>
        <childnode refid="2665" relation="include">
        </childnode>
      </node>
      <node id="2644">
        <label>cassert</label>
      </node>
      <node id="2660">
        <label>boost/preprocessor/tuple/elem.hpp</label>
      </node>
      <node id="2670">
        <label>wrl.h</label>
      </node>
      <node id="2653">
        <label>string</label>
      </node>
      <node id="2669">
        <label>D3Dcompiler.h</label>
      </node>
      <node id="2664">
        <label>boost/container/small_vector.hpp</label>
      </node>
      <node id="2663">
        <label>Core/AssetLocation.h</label>
        <link refid="_asset_location_8h_source"/>
      </node>
      <node id="2661">
        <label>boost/detail/bitmask.hpp</label>
      </node>
      <node id="2649">
        <label>Memory/Allocator.h</label>
        <link refid="_allocator_8h_source"/>
        <childnode refid="2646" relation="include">
        </childnode>
        <childnode refid="2650" relation="include">
        </childnode>
        <childnode refid="2654" relation="include">
        </childnode>
      </node>
      <node id="2643">
        <label>Containers/Vector.h</label>
        <link refid="_vector_8h_source"/>
        <childnode refid="2644" relation="include">
        </childnode>
        <childnode refid="2645" relation="include">
        </childnode>
        <childnode refid="2646" relation="include">
        </childnode>
        <childnode refid="2647" relation="include">
        </childnode>
        <childnode refid="2648" relation="include">
        </childnode>
        <childnode refid="2649" relation="include">
        </childnode>
        <childnode refid="2650" relation="include">
        </childnode>
        <childnode refid="2654" relation="include">
        </childnode>
      </node>
      <node id="2654">
        <label>Utils/Macros.h</label>
        <link refid="_macros_8h_source"/>
      </node>
      <node id="2656">
        <label>tuple</label>
      </node>
      <node id="2641">
        <label>optional</label>
      </node>
      <node id="2642">
        <label>Generic/GenericTypes.h</label>
        <link refid="_azura_2_render_system_2_inc_2_generic_2_generic_types_8h_source"/>
        <childnode refid="2643" relation="include">
        </childnode>
        <childnode refid="2655" relation="include">
        </childnode>
        <childnode refid="2650" relation="include">
        </childnode>
        <childnode refid="2657" relation="include">
        </childnode>
        <childnode refid="2662" relation="include">
        </childnode>
        <childnode refid="2663" relation="include">
        </childnode>
        <childnode refid="2664" relation="include">
        </childnode>
        <childnode refid="2661" relation="include">
        </childnode>
      </node>
      <node id="2648">
        <label>Array.h</label>
        <link refid="_array_8h_source"/>
        <childnode refid="2644" relation="include">
        </childnode>
        <childnode refid="2645" relation="include">
        </childnode>
        <childnode refid="2649" relation="include">
        </childnode>
        <childnode refid="2650" relation="include">
        </childnode>
      </node>
      <node id="2668">
        <label>dxgi1_4.h</label>
      </node>
      <node id="2657">
        <label>Core/RawStorageFormat.h</label>
        <link refid="_raw_storage_format_8h_source"/>
        <childnode refid="2650" relation="include">
        </childnode>
        <childnode refid="2656" relation="include">
        </childnode>
        <childnode refid="2658" relation="include">
        </childnode>
        <childnode refid="2659" relation="include">
        </childnode>
        <childnode refid="2660" relation="include">
        </childnode>
        <childnode refid="2661" relation="include">
        </childnode>
      </node>
      <node id="2651">
        <label>cstddef</label>
      </node>
      <node id="2658">
        <label>boost/preprocessor/repetition/repeat.hpp</label>
      </node>
      <node id="2662">
        <label>Utils/Hash.h</label>
        <link refid="_hash_8h_source"/>
        <childnode refid="2650" relation="include">
        </childnode>
      </node>
      <node id="2650">
        <label>Types.h</label>
        <link refid="_types_8h_source"/>
        <childnode refid="2651" relation="include">
        </childnode>
        <childnode refid="2652" relation="include">
        </childnode>
        <childnode refid="2653" relation="include">
        </childnode>
      </node>
      <node id="2665">
        <label>D3D12Core.h</label>
        <link refid="_d3_d12_core_8h_source"/>
        <childnode refid="2666" relation="include">
        </childnode>
        <childnode refid="2667" relation="include">
        </childnode>
        <childnode refid="2668" relation="include">
        </childnode>
        <childnode refid="2669" relation="include">
        </childnode>
        <childnode refid="2670" relation="include">
        </childnode>
        <childnode refid="2671" relation="include">
        </childnode>
        <childnode refid="2642" relation="include">
        </childnode>
      </node>
      <node id="2645">
        <label>cstring</label>
      </node>
      <node id="2671">
        <label>shellapi.h</label>
      </node>
      <node id="2659">
        <label>boost/preprocessor/seq/for_each.hpp</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_azura">Azura</innernamespace>
    <innernamespace refid="namespace_azura_1_1_d3_d12">Azura::D3D12</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="_d3_d12_type_mapping_8cpp_1a70d7065d8db23b598fa922ed2b00139e" prot="public" static="no">
        <name>RAW_STORAGE_TO_DXGI_FORMAT_MAPPING</name>
        <param><defname>FUNC</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Azura/RenderSystem/Src/D3D12/D3D12TypeMapping.cpp" line="7" column="9" bodyfile="Source/Azura/RenderSystem/Src/D3D12/D3D12TypeMapping.cpp" bodystart="7" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_d3_d12_type_mapping_8cpp_1abb3ac7fc0602d547cf5735ba6c3cd1cc" prot="public" static="no">
        <name>BUFFER_USAGE_RATE_TO_INPUT_CLASSIFICATION</name>
        <param><defname>FUNC</defname></param>
        <initializer>FUNC(BufferUsageRate::PerVertex, D3D12_INPUT_CLASSIFICATION_PER_VERTEX_DATA)                                \
  FUNC(BufferUsageRate::PerInstance, D3D12_INPUT_CLASSIFICATION_PER_INSTANCE_DATA)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Azura/RenderSystem/Src/D3D12/D3D12TypeMapping.cpp" line="78" column="9" bodyfile="Source/Azura/RenderSystem/Src/D3D12/D3D12TypeMapping.cpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_d3_d12_type_mapping_8cpp_1abbfe55fab365628b0a4f95e5e951be4d" prot="public" static="no">
        <name>IMAGE_TYPE_TO_RESOURCE_DIMENSION</name>
        <param><defname>FUNC</defname></param>
        <initializer>FUNC(ImageType::Image1D, D3D12_RESOURCE_DIMENSION_TEXTURE1D)    \
  FUNC(ImageType::Image2D, D3D12_RESOURCE_DIMENSION_TEXTURE2D)    \
  FUNC(ImageType::Image3D, D3D12_RESOURCE_DIMENSION_TEXTURE3D)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Azura/RenderSystem/Src/D3D12/D3D12TypeMapping.cpp" line="82" column="9" bodyfile="Source/Azura/RenderSystem/Src/D3D12/D3D12TypeMapping.cpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_d3_d12_type_mapping_8cpp_1aff4159034438683d20c37270e97407b3" prot="public" static="no">
        <name>IMAGE_VIEW_TYPE_TO_SRV_DIMENSION</name>
        <param><defname>FUNC</defname></param>
        <initializer>FUNC(ImageViewType::ImageView1D, D3D12_SRV_DIMENSION_TEXTURE1D)                         \
  FUNC(ImageViewType::ImageView1DArray, D3D12_SRV_DIMENSION_TEXTURE1DARRAY)               \
  FUNC(ImageViewType::ImageView2D, D3D12_SRV_DIMENSION_TEXTURE2D)                         \
  FUNC(ImageViewType::ImageView2DArray, D3D12_SRV_DIMENSION_TEXTURE2DARRAY)               \
  FUNC(ImageViewType::ImageView3D, D3D12_SRV_DIMENSION_TEXTURE3D)                         \
  FUNC(ImageViewType::ImageViewCubeMap, D3D12_SRV_DIMENSION_TEXTURECUBE)                  \
  FUNC(ImageViewType::ImageViewCubeMapArray, D3D12_SRV_DIMENSION_TEXTURECUBEARRAY)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Azura/RenderSystem/Src/D3D12/D3D12TypeMapping.cpp" line="87" column="9" bodyfile="Source/Azura/RenderSystem/Src/D3D12/D3D12TypeMapping.cpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_d3_d12_type_mapping_8cpp_1a6e2198b750d92f0101e52e4507635bfb" prot="public" static="no">
        <name>IMAGE_VIEW_TYPE_TO_UAV_DIMENSION</name>
        <param><defname>FUNC</defname></param>
        <initializer>FUNC(ImageViewType::ImageView1D, D3D12_UAV_DIMENSION_TEXTURE1D)                         \
  FUNC(ImageViewType::ImageView1DArray, D3D12_UAV_DIMENSION_TEXTURE1DARRAY)               \
  FUNC(ImageViewType::ImageView2D, D3D12_UAV_DIMENSION_TEXTURE2D)                         \
  FUNC(ImageViewType::ImageView2DArray, D3D12_UAV_DIMENSION_TEXTURE2DARRAY)               \
  FUNC(ImageViewType::ImageView3D, D3D12_UAV_DIMENSION_TEXTURE3D)                         \
  FUNC(ImageViewType::ImageViewCubeMap, D3D12_UAV_DIMENSION_UNKNOWN)                      \
  FUNC(ImageViewType::ImageViewCubeMapArray, D3D12_UAV_DIMENSION_UNKNOWN)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Azura/RenderSystem/Src/D3D12/D3D12TypeMapping.cpp" line="96" column="9" bodyfile="Source/Azura/RenderSystem/Src/D3D12/D3D12TypeMapping.cpp" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_d3_d12_type_mapping_8cpp_1a1407448786aadbc5c4083d8cf82e157c" prot="public" static="no">
        <name>IMAGE_VIEW_TYPE_TO_DSV_DIMENSION</name>
        <param><defname>FUNC</defname></param>
        <initializer>FUNC(ImageViewType::ImageView1D, D3D12_DSV_DIMENSION_TEXTURE1D)                         \
  FUNC(ImageViewType::ImageView1DArray, D3D12_DSV_DIMENSION_TEXTURE1DARRAY)               \
  FUNC(ImageViewType::ImageView2D, D3D12_DSV_DIMENSION_TEXTURE2D)                         \
  FUNC(ImageViewType::ImageView2DArray, D3D12_DSV_DIMENSION_TEXTURE2DARRAY)               \
  FUNC(ImageViewType::ImageView3D, D3D12_DSV_DIMENSION_UNKNOWN)                         \
  FUNC(ImageViewType::ImageViewCubeMap, D3D12_DSV_DIMENSION_UNKNOWN)                  \
  FUNC(ImageViewType::ImageViewCubeMapArray, D3D12_DSV_DIMENSION_UNKNOWN)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Azura/RenderSystem/Src/D3D12/D3D12TypeMapping.cpp" line="105" column="9" bodyfile="Source/Azura/RenderSystem/Src/D3D12/D3D12TypeMapping.cpp" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_d3_d12_type_mapping_8cpp_1ab4c4fc8cfe44d49477aa26c5e9051c53" prot="public" static="no">
        <name>IMAGE_VIEW_TYPE_TO_RTV_DIMENSION</name>
        <param><defname>FUNC</defname></param>
        <initializer>FUNC(ImageViewType::ImageView1D, D3D12_RTV_DIMENSION_TEXTURE1D)                         \
  FUNC(ImageViewType::ImageView1DArray, D3D12_RTV_DIMENSION_TEXTURE1DARRAY)               \
  FUNC(ImageViewType::ImageView2D, D3D12_RTV_DIMENSION_TEXTURE2D)                         \
  FUNC(ImageViewType::ImageView2DArray, D3D12_RTV_DIMENSION_TEXTURE2DARRAY)               \
  FUNC(ImageViewType::ImageView3D, D3D12_RTV_DIMENSION_TEXTURE3D)                         \
  FUNC(ImageViewType::ImageViewCubeMap, D3D12_RTV_DIMENSION_UNKNOWN)                  \
  FUNC(ImageViewType::ImageViewCubeMapArray, D3D12_RTV_DIMENSION_UNKNOWN)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Azura/RenderSystem/Src/D3D12/D3D12TypeMapping.cpp" line="115" column="9" bodyfile="Source/Azura/RenderSystem/Src/D3D12/D3D12TypeMapping.cpp" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_d3_d12_type_mapping_8cpp_1a9adb2d548d266ae56c18507f83064d20" prot="public" static="no">
        <name>CULL_MODE_TO_D3D12_CULL_MODE_MAPPING</name>
        <param><defname>FUNC</defname></param>
        <initializer>FUNC(CullMode::None, D3D12_CULL_MODE_NONE)                                                                              \
  FUNC(CullMode::FrontBit, D3D12_CULL_MODE_FRONT)                                                                     \
  FUNC(CullMode::BackBit, D3D12_CULL_MODE_BACK)                                                                       \
  FUNC(CullMode::FrontAndBack, D3D12_CULL_MODE_NONE)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Azura/RenderSystem/Src/D3D12/D3D12TypeMapping.cpp" line="124" column="9" bodyfile="Source/Azura/RenderSystem/Src/D3D12/D3D12TypeMapping.cpp" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_d3_d12_type_mapping_8cpp_1a6bd07ce1eef01769f4adc9eb2bdd4cb5" prot="public" static="no">
        <name>TEXTURE_ADDRESS_MODE_TO_D3D12_TEXTURE_ADDRESS_MODE</name>
        <param><defname>FUNC</defname></param>
        <initializer>FUNC(TextureAddressMode::Wrap, D3D12_TEXTURE_ADDRESS_MODE_WRAP)                              \
  FUNC(TextureAddressMode::Mirror, D3D12_TEXTURE_ADDRESS_MODE_MIRROR)                          \
  FUNC(TextureAddressMode::Clamp, D3D12_TEXTURE_ADDRESS_MODE_CLAMP)                            \
  FUNC(TextureAddressMode::Border, D3D12_TEXTURE_ADDRESS_MODE_BORDER)                          \
  FUNC(TextureAddressMode::MirrorOnce, D3D12_TEXTURE_ADDRESS_MODE_MIRROR_ONCE)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Azura/RenderSystem/Src/D3D12/D3D12TypeMapping.cpp" line="130" column="9" bodyfile="Source/Azura/RenderSystem/Src/D3D12/D3D12TypeMapping.cpp" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_d3_d12_type_mapping_8cpp_1aea416c3abed2d0a5c22f368cdefe24fb" prot="public" static="no">
        <name>TEXTURE_FILTER_TO_D3D12_FILTER</name>
        <param><defname>FUNC</defname></param>
        <initializer>FUNC(TextureFilter::MinMagMipPoint, D3D12_FILTER_MIN_MAG_MIP_POINT)                                   \
  FUNC(TextureFilter::MinMagPoint_MipLinear, D3D12_FILTER_MIN_MAG_POINT_MIP_LINEAR)                     \
  FUNC(TextureFilter::MinPoint_MagLinear_MipPoint, D3D12_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT)         \
  FUNC(TextureFilter::MinPoint_MagMipLinear, D3D12_FILTER_MIN_POINT_MAG_MIP_LINEAR)                     \
  FUNC(TextureFilter::MinLinear_MagMipPoint, D3D12_FILTER_MIN_LINEAR_MAG_MIP_POINT)                     \
  FUNC(TextureFilter::MinLinear_MagPoint_MipLinear, D3D12_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR)       \
  FUNC(TextureFilter::MinMagLinear_MipPoint, D3D12_FILTER_MIN_MAG_LINEAR_MIP_POINT)                     \
  FUNC(TextureFilter::MinMagMipLinear, D3D12_FILTER_MIN_MAG_MIP_LINEAR)                                 \
  FUNC(TextureFilter::Anisotropic, D3D12_FILTER_ANISOTROPIC)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Azura/RenderSystem/Src/D3D12/D3D12TypeMapping.cpp" line="137" column="9" bodyfile="Source/Azura/RenderSystem/Src/D3D12/D3D12TypeMapping.cpp" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_d3_d12_type_mapping_8cpp_1a24e56d2ca10d240d2ed7adb56c9a1092" prot="public" static="no">
        <name>BLEND_OP_TO_D3D12_BLEND_OP</name>
        <param><defname>FUNC</defname></param>
        <initializer>FUNC(BlendOp::Add, D3D12_BLEND_OP_ADD)                       \
  FUNC(BlendOp::Subtract, D3D12_BLEND_OP_SUBTRACT)             \
  FUNC(BlendOp::ReverseSubtract, D3D12_BLEND_OP_REV_SUBTRACT)  \
  FUNC(BlendOp::Min, D3D12_BLEND_OP_MIN)                       \
  FUNC(BlendOp::Max, D3D12_BLEND_OP_MAX)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Azura/RenderSystem/Src/D3D12/D3D12TypeMapping.cpp" line="149" column="9" bodyfile="Source/Azura/RenderSystem/Src/D3D12/D3D12TypeMapping.cpp" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_d3_d12_type_mapping_8cpp_1ae994a3687768c9e3a41fa0bb1eb852cf" prot="public" static="no">
        <name>BLEND_OP_TO_D3D12_BLEND</name>
        <param><defname>FUNC</defname></param>
        <initializer>FUNC(BlendFactor::Zero, D3D12_BLEND_ZERO)                            \
  FUNC(BlendFactor::One, D3D12_BLEND_ONE)                              \
  FUNC(BlendFactor::SrcColor, D3D12_BLEND_SRC_COLOR)                   \
  FUNC(BlendFactor::OneMinusSrcColor, D3D12_BLEND_INV_SRC_COLOR)       \
  FUNC(BlendFactor::DstColor, D3D12_BLEND_DEST_COLOR)                  \
  FUNC(BlendFactor::OneMinusDstColor, D3D12_BLEND_INV_DEST_COLOR)      \
  FUNC(BlendFactor::SrcAlpha, D3D12_BLEND_SRC_ALPHA)                   \
  FUNC(BlendFactor::OneMinusSrcAlpha, D3D12_BLEND_INV_SRC_ALPHA)       \
  FUNC(BlendFactor::DstAlpha, D3D12_BLEND_DEST_ALPHA)                  \
  FUNC(BlendFactor::OneMinusDstAlpha, D3D12_BLEND_INV_DEST_ALPHA)      \
  FUNC(BlendFactor::ConstantColor, D3D12_BLEND_ZERO)                   \
  FUNC(BlendFactor::OneMinusConstantColor, D3D12_BLEND_ZERO)           \
  FUNC(BlendFactor::ConstantAlpha, D3D12_BLEND_ZERO)                   \
  FUNC(BlendFactor::OneMinusConstantAlpha, D3D12_BLEND_ZERO)           \
  FUNC(BlendFactor::SrcAlphaSaturate, D3D12_BLEND_ZERO)                \
  FUNC(BlendFactor::Src1Color, D3D12_BLEND_SRC1_COLOR)                 \
  FUNC(BlendFactor::OneMinusSrc1Color, D3D12_BLEND_INV_SRC1_COLOR)     \
  FUNC(BlendFactor::Src1Alpha, D3D12_BLEND_SRC1_ALPHA)                 \
  FUNC(BlendFactor::OneMinusSrc1Alpha, D3D12_BLEND_INV_SRC1_ALPHA)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Azura/RenderSystem/Src/D3D12/D3D12TypeMapping.cpp" line="156" column="9" bodyfile="Source/Azura/RenderSystem/Src/D3D12/D3D12TypeMapping.cpp" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_d3_d12_type_mapping_8cpp_1a4da618d75b1cb477e7e46cfef88b98d1" prot="public" static="no">
        <name>CREATE_MAPPER_CPP</name>
        <param><defname>FROM_FORMAT</defname></param>
        <param><defname>TO_FORMAT</defname></param>
        <param><defname>MAPPING_TABLE</defname></param>
        <param><defname>CASE_MAPPING_FUNC</defname></param>
        <initializer>CREATE_MAPPER_H(FROM_FORMAT, TO_FORMAT) {                                                                            \
    switch (inputFormat) { MAPPING_TABLE(CASE_MAPPING_FUNC) }                                                          \
    return std::nullopt;                                                                                               \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Azura/RenderSystem/Src/D3D12/D3D12TypeMapping.cpp" line="179" column="9" bodyfile="Source/Azura/RenderSystem/Src/D3D12/D3D12TypeMapping.cpp" bodystart="179" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;D3D12/D3D12TypeMapping.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_azura" kindref="compound">Azura</ref><sp/>{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">D3D12<sp/>{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RAW_STORAGE_TO_DXGI_FORMAT_MAPPING(FUNC)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="8"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::UNKNOWN,<sp/>DXGI_FORMAT_UNKNOWN)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="9"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::R32_UNORM,<sp/>DXGI_FORMAT_UNKNOWN)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="10"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::R32_SNORM,<sp/>DXGI_FORMAT_UNKNOWN)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::B8G8R8A8_UNORM,<sp/>DXGI_FORMAT_B8G8R8A8_UNORM)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::B8G8R8A8_SNORM,<sp/>DXGI_FORMAT_UNKNOWN)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="13"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::B8G8R8A8_USCALED,<sp/>DXGI_FORMAT_UNKNOWN)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="14"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::B8G8R8A8_SSCALED,<sp/>DXGI_FORMAT_UNKNOWN)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="15"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::B8G8R8A8_UINT,<sp/>DXGI_FORMAT_UNKNOWN)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="16"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::B8G8R8A8_SINT,<sp/>DXGI_FORMAT_UNKNOWN)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="17"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::B8G8R8A8_SRGB,<sp/>DXGI_FORMAT_UNKNOWN)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="18"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::R8G8B8_UNORM,<sp/>DXGI_FORMAT_UNKNOWN)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::R8G8B8A8_UNORM,<sp/>DXGI_FORMAT_R8G8B8A8_UNORM)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="20"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::R16_FLOAT,<sp/>DXGI_FORMAT_R16_FLOAT)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::R16_UINT,<sp/>DXGI_FORMAT_R16_UINT)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::R16_SINT,<sp/>DXGI_FORMAT_R16_SINT)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::R16_UNORM,<sp/>DXGI_FORMAT_R16_UNORM)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::R16_SNORM,<sp/>DXGI_FORMAT_R16_SNORM)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::R16_USCALED,<sp/>DXGI_FORMAT_UNKNOWN)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="26"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::R16_SSCALED,<sp/>DXGI_FORMAT_UNKNOWN)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::R32_FLOAT,<sp/>DXGI_FORMAT_R32_FLOAT)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::R32_UINT,<sp/>DXGI_FORMAT_R32_UINT)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::R32_SINT,<sp/>DXGI_FORMAT_R32_SINT)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::R16G16_FLOAT,<sp/>DXGI_FORMAT_R16G16_FLOAT)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::R16G16_UINT,<sp/>DXGI_FORMAT_R16G16_UINT)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::R16G16_SINT,<sp/>DXGI_FORMAT_R16G16_SINT)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::R16G16_UNORM,<sp/>DXGI_FORMAT_R16G16_UNORM)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::R16G16_SNORM,<sp/>DXGI_FORMAT_R16G16_SNORM)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::R16G16_USCALED,<sp/>DXGI_FORMAT_UNKNOWN)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::R16G16_SSCALED,<sp/>DXGI_FORMAT_UNKNOWN)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::R11G11B10_FLOAT,<sp/>DXGI_FORMAT_UNKNOWN)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::R16G16B16_FLOAT,<sp/>DXGI_FORMAT_UNKNOWN)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::R16G16B16_UINT,<sp/>DXGI_FORMAT_UNKNOWN)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::R16G16B16_SINT,<sp/>DXGI_FORMAT_UNKNOWN)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::R16G16B16_UNORM,<sp/>DXGI_FORMAT_UNKNOWN)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::R16G16B16_SNORM,<sp/>DXGI_FORMAT_UNKNOWN)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::R16G16B16_USCALED,<sp/>DXGI_FORMAT_UNKNOWN)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="44"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::R16G16B16_SSCALED,<sp/>DXGI_FORMAT_UNKNOWN)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::R64_FLOAT,<sp/>DXGI_FORMAT_UNKNOWN)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::R64_UINT,<sp/>DXGI_FORMAT_UNKNOWN)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::R64_SINT,<sp/>DXGI_FORMAT_UNKNOWN)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::R32G32_FLOAT,<sp/>DXGI_FORMAT_R32G32_FLOAT)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::R32G32_UINT,<sp/>DXGI_FORMAT_R32G32_UINT)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::R32G32_SINT,<sp/>DXGI_FORMAT_R32G32_SINT)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::R16G16B16A16_FLOAT,<sp/>DXGI_FORMAT_R16G16B16A16_FLOAT)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::R16G16B16A16_UINT,<sp/>DXGI_FORMAT_R16G16B16A16_UINT)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::R16G16B16A16_SINT,<sp/>DXGI_FORMAT_R16G16B16A16_SINT)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::R16G16B16A16_UNORM,<sp/>DXGI_FORMAT_R16G16B16A16_UNORM)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::R16G16B16A16_SNORM,<sp/>DXGI_FORMAT_R16G16B16A16_SNORM)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::R16G16B16A16_USCALED,<sp/>DXGI_FORMAT_UNKNOWN)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::R16G16B16A16_SSCALED,<sp/>DXGI_FORMAT_UNKNOWN)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::R32G32B32_FLOAT,<sp/>DXGI_FORMAT_R32G32B32_FLOAT)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::R32G32B32_UINT,<sp/>DXGI_FORMAT_R32G32B32_UINT)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::R32G32B32_SINT,<sp/>DXGI_FORMAT_R32G32B32_SINT)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::R64G64_FLOAT,<sp/>DXGI_FORMAT_UNKNOWN)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::R64G64_UINT,<sp/>DXGI_FORMAT_UNKNOWN)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::R64G64_SINT,<sp/>DXGI_FORMAT_UNKNOWN)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::R32G32B32A32_FLOAT,<sp/>DXGI_FORMAT_R32G32B32A32_FLOAT)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="65"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::R32G32B32A32_UINT,<sp/>DXGI_FORMAT_R32G32B32A32_UINT)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::R32G32B32A32_SINT,<sp/>DXGI_FORMAT_R32G32B32A32_SINT)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::R64G64B64_FLOAT,<sp/>DXGI_FORMAT_UNKNOWN)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="68"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::R64G64B64_UINT,<sp/>DXGI_FORMAT_UNKNOWN)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="69"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::R64G64B64_SINT,<sp/>DXGI_FORMAT_UNKNOWN)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="70"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::R64G64B64A64_FLOAT,<sp/>DXGI_FORMAT_UNKNOWN)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="71"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::R64G64B64A64_UINT,<sp/>DXGI_FORMAT_UNKNOWN)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="72"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::R64G64B64A64_SINT,<sp/>DXGI_FORMAT_UNKNOWN)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="73"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::D24_UNORM_S8_UINT,<sp/>DXGI_FORMAT_D24_UNORM_S8_UINT)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="74"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::D32_FLOAT_S8X24_UINT,<sp/>DXGI_FORMAT_UNKNOWN)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="75"><highlight class="preprocessor"><sp/><sp/>FUNC(RawStorageFormat::D32_FLOAT,<sp/>DXGI_FORMAT_D32_FLOAT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BUFFER_USAGE_RATE_TO_INPUT_CLASSIFICATION(FUNC)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="79"><highlight class="preprocessor"><sp/><sp/>FUNC(BufferUsageRate::PerVertex,<sp/>D3D12_INPUT_CLASSIFICATION_PER_VERTEX_DATA)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="80"><highlight class="preprocessor"><sp/><sp/>FUNC(BufferUsageRate::PerInstance,<sp/>D3D12_INPUT_CLASSIFICATION_PER_INSTANCE_DATA)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMAGE_TYPE_TO_RESOURCE_DIMENSION(FUNC)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="83"><highlight class="preprocessor"><sp/><sp/>FUNC(ImageType::Image1D,<sp/>D3D12_RESOURCE_DIMENSION_TEXTURE1D)<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="84"><highlight class="preprocessor"><sp/><sp/>FUNC(ImageType::Image2D,<sp/>D3D12_RESOURCE_DIMENSION_TEXTURE2D)<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="85"><highlight class="preprocessor"><sp/><sp/>FUNC(ImageType::Image3D,<sp/>D3D12_RESOURCE_DIMENSION_TEXTURE3D)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMAGE_VIEW_TYPE_TO_SRV_DIMENSION(FUNC)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="88"><highlight class="preprocessor"><sp/><sp/>FUNC(ImageViewType::ImageView1D,<sp/>D3D12_SRV_DIMENSION_TEXTURE1D)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="89"><highlight class="preprocessor"><sp/><sp/>FUNC(ImageViewType::ImageView1DArray,<sp/>D3D12_SRV_DIMENSION_TEXTURE1DARRAY)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="90"><highlight class="preprocessor"><sp/><sp/>FUNC(ImageViewType::ImageView2D,<sp/>D3D12_SRV_DIMENSION_TEXTURE2D)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="91"><highlight class="preprocessor"><sp/><sp/>FUNC(ImageViewType::ImageView2DArray,<sp/>D3D12_SRV_DIMENSION_TEXTURE2DARRAY)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="92"><highlight class="preprocessor"><sp/><sp/>FUNC(ImageViewType::ImageView3D,<sp/>D3D12_SRV_DIMENSION_TEXTURE3D)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="93"><highlight class="preprocessor"><sp/><sp/>FUNC(ImageViewType::ImageViewCubeMap,<sp/>D3D12_SRV_DIMENSION_TEXTURECUBE)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="94"><highlight class="preprocessor"><sp/><sp/>FUNC(ImageViewType::ImageViewCubeMapArray,<sp/>D3D12_SRV_DIMENSION_TEXTURECUBEARRAY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMAGE_VIEW_TYPE_TO_UAV_DIMENSION(FUNC)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="97"><highlight class="preprocessor"><sp/><sp/>FUNC(ImageViewType::ImageView1D,<sp/>D3D12_UAV_DIMENSION_TEXTURE1D)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="98"><highlight class="preprocessor"><sp/><sp/>FUNC(ImageViewType::ImageView1DArray,<sp/>D3D12_UAV_DIMENSION_TEXTURE1DARRAY)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="99"><highlight class="preprocessor"><sp/><sp/>FUNC(ImageViewType::ImageView2D,<sp/>D3D12_UAV_DIMENSION_TEXTURE2D)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="100"><highlight class="preprocessor"><sp/><sp/>FUNC(ImageViewType::ImageView2DArray,<sp/>D3D12_UAV_DIMENSION_TEXTURE2DARRAY)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="101"><highlight class="preprocessor"><sp/><sp/>FUNC(ImageViewType::ImageView3D,<sp/>D3D12_UAV_DIMENSION_TEXTURE3D)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="102"><highlight class="preprocessor"><sp/><sp/>FUNC(ImageViewType::ImageViewCubeMap,<sp/>D3D12_UAV_DIMENSION_UNKNOWN)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="103"><highlight class="preprocessor"><sp/><sp/>FUNC(ImageViewType::ImageViewCubeMapArray,<sp/>D3D12_UAV_DIMENSION_UNKNOWN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMAGE_VIEW_TYPE_TO_DSV_DIMENSION(FUNC)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="106"><highlight class="preprocessor"><sp/><sp/>FUNC(ImageViewType::ImageView1D,<sp/>D3D12_DSV_DIMENSION_TEXTURE1D)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="107"><highlight class="preprocessor"><sp/><sp/>FUNC(ImageViewType::ImageView1DArray,<sp/>D3D12_DSV_DIMENSION_TEXTURE1DARRAY)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="108"><highlight class="preprocessor"><sp/><sp/>FUNC(ImageViewType::ImageView2D,<sp/>D3D12_DSV_DIMENSION_TEXTURE2D)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="109"><highlight class="preprocessor"><sp/><sp/>FUNC(ImageViewType::ImageView2DArray,<sp/>D3D12_DSV_DIMENSION_TEXTURE2DARRAY)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="110"><highlight class="preprocessor"><sp/><sp/>FUNC(ImageViewType::ImageView3D,<sp/>D3D12_DSV_DIMENSION_UNKNOWN)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="111"><highlight class="preprocessor"><sp/><sp/>FUNC(ImageViewType::ImageViewCubeMap,<sp/>D3D12_DSV_DIMENSION_UNKNOWN)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="112"><highlight class="preprocessor"><sp/><sp/>FUNC(ImageViewType::ImageViewCubeMapArray,<sp/>D3D12_DSV_DIMENSION_UNKNOWN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMAGE_VIEW_TYPE_TO_RTV_DIMENSION(FUNC)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="116"><highlight class="preprocessor"><sp/><sp/>FUNC(ImageViewType::ImageView1D,<sp/>D3D12_RTV_DIMENSION_TEXTURE1D)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="117"><highlight class="preprocessor"><sp/><sp/>FUNC(ImageViewType::ImageView1DArray,<sp/>D3D12_RTV_DIMENSION_TEXTURE1DARRAY)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="118"><highlight class="preprocessor"><sp/><sp/>FUNC(ImageViewType::ImageView2D,<sp/>D3D12_RTV_DIMENSION_TEXTURE2D)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="119"><highlight class="preprocessor"><sp/><sp/>FUNC(ImageViewType::ImageView2DArray,<sp/>D3D12_RTV_DIMENSION_TEXTURE2DARRAY)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="120"><highlight class="preprocessor"><sp/><sp/>FUNC(ImageViewType::ImageView3D,<sp/>D3D12_RTV_DIMENSION_TEXTURE3D)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="121"><highlight class="preprocessor"><sp/><sp/>FUNC(ImageViewType::ImageViewCubeMap,<sp/>D3D12_RTV_DIMENSION_UNKNOWN)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="122"><highlight class="preprocessor"><sp/><sp/>FUNC(ImageViewType::ImageViewCubeMapArray,<sp/>D3D12_RTV_DIMENSION_UNKNOWN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CULL_MODE_TO_D3D12_CULL_MODE_MAPPING(FUNC)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="125"><highlight class="preprocessor"><sp/><sp/>FUNC(CullMode::None,<sp/>D3D12_CULL_MODE_NONE)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="126"><highlight class="preprocessor"><sp/><sp/>FUNC(CullMode::FrontBit,<sp/>D3D12_CULL_MODE_FRONT)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="127"><highlight class="preprocessor"><sp/><sp/>FUNC(CullMode::BackBit,<sp/>D3D12_CULL_MODE_BACK)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="128"><highlight class="preprocessor"><sp/><sp/>FUNC(CullMode::FrontAndBack,<sp/>D3D12_CULL_MODE_NONE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TEXTURE_ADDRESS_MODE_TO_D3D12_TEXTURE_ADDRESS_MODE(FUNC)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="131"><highlight class="preprocessor"><sp/><sp/>FUNC(TextureAddressMode::Wrap,<sp/>D3D12_TEXTURE_ADDRESS_MODE_WRAP)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="132"><highlight class="preprocessor"><sp/><sp/>FUNC(TextureAddressMode::Mirror,<sp/>D3D12_TEXTURE_ADDRESS_MODE_MIRROR)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="133"><highlight class="preprocessor"><sp/><sp/>FUNC(TextureAddressMode::Clamp,<sp/>D3D12_TEXTURE_ADDRESS_MODE_CLAMP)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="134"><highlight class="preprocessor"><sp/><sp/>FUNC(TextureAddressMode::Border,<sp/>D3D12_TEXTURE_ADDRESS_MODE_BORDER)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="135"><highlight class="preprocessor"><sp/><sp/>FUNC(TextureAddressMode::MirrorOnce,<sp/>D3D12_TEXTURE_ADDRESS_MODE_MIRROR_ONCE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TEXTURE_FILTER_TO_D3D12_FILTER(FUNC)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="138"><highlight class="preprocessor"><sp/><sp/>FUNC(TextureFilter::MinMagMipPoint,<sp/>D3D12_FILTER_MIN_MAG_MIP_POINT)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="139"><highlight class="preprocessor"><sp/><sp/>FUNC(TextureFilter::MinMagPoint_MipLinear,<sp/>D3D12_FILTER_MIN_MAG_POINT_MIP_LINEAR)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="140"><highlight class="preprocessor"><sp/><sp/>FUNC(TextureFilter::MinPoint_MagLinear_MipPoint,<sp/>D3D12_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="141"><highlight class="preprocessor"><sp/><sp/>FUNC(TextureFilter::MinPoint_MagMipLinear,<sp/>D3D12_FILTER_MIN_POINT_MAG_MIP_LINEAR)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="142"><highlight class="preprocessor"><sp/><sp/>FUNC(TextureFilter::MinLinear_MagMipPoint,<sp/>D3D12_FILTER_MIN_LINEAR_MAG_MIP_POINT)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="143"><highlight class="preprocessor"><sp/><sp/>FUNC(TextureFilter::MinLinear_MagPoint_MipLinear,<sp/>D3D12_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="144"><highlight class="preprocessor"><sp/><sp/>FUNC(TextureFilter::MinMagLinear_MipPoint,<sp/>D3D12_FILTER_MIN_MAG_LINEAR_MIP_POINT)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="145"><highlight class="preprocessor"><sp/><sp/>FUNC(TextureFilter::MinMagMipLinear,<sp/>D3D12_FILTER_MIN_MAG_MIP_LINEAR)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="146"><highlight class="preprocessor"><sp/><sp/>FUNC(TextureFilter::Anisotropic,<sp/>D3D12_FILTER_ANISOTROPIC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BLEND_OP_TO_D3D12_BLEND_OP(FUNC)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="150"><highlight class="preprocessor"><sp/><sp/>FUNC(BlendOp::Add,<sp/>D3D12_BLEND_OP_ADD)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="151"><highlight class="preprocessor"><sp/><sp/>FUNC(BlendOp::Subtract,<sp/>D3D12_BLEND_OP_SUBTRACT)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="152"><highlight class="preprocessor"><sp/><sp/>FUNC(BlendOp::ReverseSubtract,<sp/>D3D12_BLEND_OP_REV_SUBTRACT)<sp/><sp/>\</highlight></codeline>
<codeline lineno="153"><highlight class="preprocessor"><sp/><sp/>FUNC(BlendOp::Min,<sp/>D3D12_BLEND_OP_MIN)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="154"><highlight class="preprocessor"><sp/><sp/>FUNC(BlendOp::Max,<sp/>D3D12_BLEND_OP_MAX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BLEND_OP_TO_D3D12_BLEND(FUNC)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="157"><highlight class="preprocessor"><sp/><sp/>FUNC(BlendFactor::Zero,<sp/>D3D12_BLEND_ZERO)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="158"><highlight class="preprocessor"><sp/><sp/>FUNC(BlendFactor::One,<sp/>D3D12_BLEND_ONE)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="159"><highlight class="preprocessor"><sp/><sp/>FUNC(BlendFactor::SrcColor,<sp/>D3D12_BLEND_SRC_COLOR)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="160"><highlight class="preprocessor"><sp/><sp/>FUNC(BlendFactor::OneMinusSrcColor,<sp/>D3D12_BLEND_INV_SRC_COLOR)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="161"><highlight class="preprocessor"><sp/><sp/>FUNC(BlendFactor::DstColor,<sp/>D3D12_BLEND_DEST_COLOR)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="162"><highlight class="preprocessor"><sp/><sp/>FUNC(BlendFactor::OneMinusDstColor,<sp/>D3D12_BLEND_INV_DEST_COLOR)<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="163"><highlight class="preprocessor"><sp/><sp/>FUNC(BlendFactor::SrcAlpha,<sp/>D3D12_BLEND_SRC_ALPHA)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="164"><highlight class="preprocessor"><sp/><sp/>FUNC(BlendFactor::OneMinusSrcAlpha,<sp/>D3D12_BLEND_INV_SRC_ALPHA)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="165"><highlight class="preprocessor"><sp/><sp/>FUNC(BlendFactor::DstAlpha,<sp/>D3D12_BLEND_DEST_ALPHA)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="166"><highlight class="preprocessor"><sp/><sp/>FUNC(BlendFactor::OneMinusDstAlpha,<sp/>D3D12_BLEND_INV_DEST_ALPHA)<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="167"><highlight class="preprocessor"><sp/><sp/>FUNC(BlendFactor::ConstantColor,<sp/>D3D12_BLEND_ZERO)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="168"><highlight class="preprocessor"><sp/><sp/>FUNC(BlendFactor::OneMinusConstantColor,<sp/>D3D12_BLEND_ZERO)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="169"><highlight class="preprocessor"><sp/><sp/>FUNC(BlendFactor::ConstantAlpha,<sp/>D3D12_BLEND_ZERO)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="170"><highlight class="preprocessor"><sp/><sp/>FUNC(BlendFactor::OneMinusConstantAlpha,<sp/>D3D12_BLEND_ZERO)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="171"><highlight class="preprocessor"><sp/><sp/>FUNC(BlendFactor::SrcAlphaSaturate,<sp/>D3D12_BLEND_ZERO)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="172"><highlight class="preprocessor"><sp/><sp/>FUNC(BlendFactor::Src1Color,<sp/>D3D12_BLEND_SRC1_COLOR)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="173"><highlight class="preprocessor"><sp/><sp/>FUNC(BlendFactor::OneMinusSrc1Color,<sp/>D3D12_BLEND_INV_SRC1_COLOR)<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="174"><highlight class="preprocessor"><sp/><sp/>FUNC(BlendFactor::Src1Alpha,<sp/>D3D12_BLEND_SRC1_ALPHA)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="175"><highlight class="preprocessor"><sp/><sp/>FUNC(BlendFactor::OneMinusSrc1Alpha,<sp/>D3D12_BLEND_INV_SRC1_ALPHA)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CREATE_MAPPER_CPP(FROM_FORMAT,<sp/>TO_FORMAT,<sp/>MAPPING_TABLE,<sp/>CASE_MAPPING_FUNC)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="180"><highlight class="preprocessor"><sp/><sp/>CREATE_MAPPER_H(FROM_FORMAT,<sp/>TO_FORMAT)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="181"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>switch<sp/>(inputFormat)<sp/>{<sp/>MAPPING_TABLE(CASE_MAPPING_FUNC)<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="182"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>std::nullopt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="183"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal">CREATE_MAPPER_CPP(RawStorageFormat,<sp/>DXGI_FORMAT,<sp/>RAW_STORAGE_TO_DXGI_FORMAT_MAPPING,<sp/>FORWARD_MAPPING)</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal">CREATE_MAPPER_CPP(BufferUsageRate,<sp/>D3D12_INPUT_CLASSIFICATION,<sp/>BUFFER_USAGE_RATE_TO_INPUT_CLASSIFICATION,<sp/>FORWARD_MAPPING)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal">CREATE_MAPPER_CPP(ImageType,<sp/>D3D12_RESOURCE_DIMENSION,<sp/>IMAGE_TYPE_TO_RESOURCE_DIMENSION,<sp/>FORWARD_MAPPING)</highlight></codeline>
<codeline lineno="190"><highlight class="normal">CREATE_MAPPER_CPP(ImageViewType,<sp/>D3D12_SRV_DIMENSION,<sp/>IMAGE_VIEW_TYPE_TO_SRV_DIMENSION,<sp/>FORWARD_MAPPING)</highlight></codeline>
<codeline lineno="191"><highlight class="normal">CREATE_MAPPER_CPP(ImageViewType,<sp/>D3D12_UAV_DIMENSION,<sp/>IMAGE_VIEW_TYPE_TO_UAV_DIMENSION,<sp/>FORWARD_MAPPING)</highlight></codeline>
<codeline lineno="192"><highlight class="normal">CREATE_MAPPER_CPP(ImageViewType,<sp/>D3D12_DSV_DIMENSION,<sp/>IMAGE_VIEW_TYPE_TO_DSV_DIMENSION,<sp/>FORWARD_MAPPING)</highlight></codeline>
<codeline lineno="193"><highlight class="normal">CREATE_MAPPER_CPP(ImageViewType,<sp/>D3D12_RTV_DIMENSION,<sp/>IMAGE_VIEW_TYPE_TO_RTV_DIMENSION,<sp/>FORWARD_MAPPING)</highlight></codeline>
<codeline lineno="194"><highlight class="normal">CREATE_MAPPER_CPP(CullMode,<sp/>D3D12_CULL_MODE,<sp/>CULL_MODE_TO_D3D12_CULL_MODE_MAPPING,<sp/>FORWARD_MAPPING)</highlight></codeline>
<codeline lineno="195"><highlight class="normal">CREATE_MAPPER_CPP(TextureAddressMode,<sp/>D3D12_TEXTURE_ADDRESS_MODE,<sp/>TEXTURE_ADDRESS_MODE_TO_D3D12_TEXTURE_ADDRESS_MODE,<sp/>FORWARD_MAPPING)</highlight></codeline>
<codeline lineno="196"><highlight class="normal">CREATE_MAPPER_CPP(TextureFilter,<sp/>D3D12_FILTER,<sp/>TEXTURE_FILTER_TO_D3D12_FILTER,<sp/>FORWARD_MAPPING)</highlight></codeline>
<codeline lineno="197"><highlight class="normal">CREATE_MAPPER_CPP(BlendOp,<sp/>D3D12_BLEND_OP,<sp/>BLEND_OP_TO_D3D12_BLEND_OP,<sp/>FORWARD_MAPPING)</highlight></codeline>
<codeline lineno="198"><highlight class="normal">CREATE_MAPPER_CPP(BlendFactor,<sp/>D3D12_BLEND,<sp/>BLEND_OP_TO_D3D12_BLEND,<sp/>FORWARD_MAPPING)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>D3D12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Azura</highlight></codeline>
    </programlisting>
    <location file="Source/Azura/RenderSystem/Src/D3D12/D3D12TypeMapping.cpp"/>
  </compounddef>
</doxygen>
