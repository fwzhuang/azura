<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="class_azura_1_1_math_1_1_plane" kind="class" language="C++" prot="public" final="yes">
    <compoundname>Azura::Math::Plane</compoundname>
    <basecompoundref refid="class_azura_1_1_math_1_1_geometry" prot="public" virt="non-virtual">Azura::Math::Geometry</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_azura_1_1_math_1_1_plane_1afc6cde73125b662266575c15db00c6f1" prot="private" static="no" mutable="no">
        <type>std::vector&lt; Vector4f &gt;</type>
        <definition>std::vector&lt;Vector4f&gt; Azura::Math::Plane::m_vertices</definition>
        <argsstring></argsstring>
        <name>m_vertices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Math/Inc/Math/Plane.h" line="40" column="1" bodyfile="Source/Math/Inc/Math/Plane.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_azura_1_1_math_1_1_plane_1a53fdf481ebb8bad72fe8c67f591bea7d" prot="private" static="no" mutable="no">
        <type>std::vector&lt; Vector2f &gt;</type>
        <definition>std::vector&lt;Vector2f&gt; Azura::Math::Plane::m_uv</definition>
        <argsstring></argsstring>
        <name>m_uv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Math/Inc/Math/Plane.h" line="41" column="1" bodyfile="Source/Math/Inc/Math/Plane.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_azura_1_1_math_1_1_plane_1a2d630f2cdd106805d316fd9cb799deb0" prot="private" static="no" mutable="no">
        <type>std::vector&lt; Vector3f &gt;</type>
        <definition>std::vector&lt;Vector3f&gt; Azura::Math::Plane::m_normals</definition>
        <argsstring></argsstring>
        <name>m_normals</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Math/Inc/Math/Plane.h" line="42" column="1" bodyfile="Source/Math/Inc/Math/Plane.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_azura_1_1_math_1_1_plane_1ade6460a426e0fcc5dec2029b31af2919" prot="private" static="no" mutable="no">
        <type>std::vector&lt; Vector3u &gt;</type>
        <definition>std::vector&lt;Vector3u&gt; Azura::Math::Plane::m_triangles</definition>
        <argsstring></argsstring>
        <name>m_triangles</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Math/Inc/Math/Plane.h" line="43" column="1" bodyfile="Source/Math/Inc/Math/Plane.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_azura_1_1_math_1_1_plane_1a386cce1769e2417796e4e40f8242a2ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Azura::Math::Plane::Plane</definition>
        <argsstring>(const Vector2f &amp;boundMin, const Vector2f &amp;boundMax)</argsstring>
        <name>Plane</name>
        <param>
          <type>const Vector2f &amp;</type>
          <declname>boundMin</declname>
        </param>
        <param>
          <type>const Vector2f &amp;</type>
          <declname>boundMax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Math/Inc/Math/Plane.h" line="12" column="1" bodyfile="Source/Math/Src/Plane.cpp" bodystart="13" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_math_1_1_plane_1a1c52208462dde2519af37b967ecb7a26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Azura::Math::Plane::Plane</definition>
        <argsstring>(const Vector2f &amp;boundMin, const Vector2f &amp;boundMax, const Vector2u &amp;subDivisions, const Vector2u &amp;uvScale)</argsstring>
        <name>Plane</name>
        <param>
          <type>const Vector2f &amp;</type>
          <declname>boundMin</declname>
        </param>
        <param>
          <type>const Vector2f &amp;</type>
          <declname>boundMax</declname>
        </param>
        <param>
          <type>const Vector2u &amp;</type>
          <declname>subDivisions</declname>
        </param>
        <param>
          <type>const Vector2u &amp;</type>
          <declname>uvScale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Math/Inc/Math/Plane.h" line="13" column="1" bodyfile="Source/Math/Src/Plane.cpp" bodystart="17" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_math_1_1_plane_1a5c8e1e885c4a5ee3ffb1069d992efbd7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>U32</type>
        <definition>U32 Azura::Math::Plane::VertexDataSize</definition>
        <argsstring>() const override</argsstring>
        <name>VertexDataSize</name>
        <reimplements refid="class_azura_1_1_math_1_1_geometry_1ac054e7a5a660c7faac630cff3ee91b86">VertexDataSize</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Math/Inc/Math/Plane.h" line="15" column="1" bodyfile="Source/Math/Src/Plane.cpp" bodystart="54" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_math_1_1_plane_1a10ac399801a00cdeb02f131d0696e2b9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>U32</type>
        <definition>U32 Azura::Math::Plane::IndexDataSize</definition>
        <argsstring>() const override</argsstring>
        <name>IndexDataSize</name>
        <reimplements refid="class_azura_1_1_math_1_1_geometry_1aaf9593bfa903f9df23aefb3db971fc03">IndexDataSize</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Math/Inc/Math/Plane.h" line="16" column="1" bodyfile="Source/Math/Src/Plane.cpp" bodystart="58" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_math_1_1_plane_1a7be1f7c7d2276c45db4df4c85d374d42" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>U32</type>
        <definition>U32 Azura::Math::Plane::UVDataSize</definition>
        <argsstring>() const override</argsstring>
        <name>UVDataSize</name>
        <reimplements refid="class_azura_1_1_math_1_1_geometry_1a812a50d6a44b12d6e3697d04a879c1d8">UVDataSize</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Math/Inc/Math/Plane.h" line="17" column="1" bodyfile="Source/Math/Src/Plane.cpp" bodystart="62" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_math_1_1_plane_1a25052f1f66e9174a0cb9f0751b5a62ce" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const U8 *</type>
        <definition>const U8 * Azura::Math::Plane::VertexData</definition>
        <argsstring>() const override</argsstring>
        <name>VertexData</name>
        <reimplements refid="class_azura_1_1_math_1_1_geometry_1a81e23486f503335f688d6b9a8b3f3511">VertexData</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Math/Inc/Math/Plane.h" line="19" column="1" bodyfile="Source/Math/Src/Plane.cpp" bodystart="70" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_math_1_1_plane_1a90fdfe29f0921e8782f38bf1d9bee9cf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const U8 *</type>
        <definition>const U8 * Azura::Math::Plane::IndexData</definition>
        <argsstring>() const override</argsstring>
        <name>IndexData</name>
        <reimplements refid="class_azura_1_1_math_1_1_geometry_1a82e486e4c83e77c7a367a31cc8019223">IndexData</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Math/Inc/Math/Plane.h" line="20" column="1" bodyfile="Source/Math/Src/Plane.cpp" bodystart="75" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_math_1_1_plane_1a0a07b866d842477a696ab2d2ca061d4e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const U8 *</type>
        <definition>const U8 * Azura::Math::Plane::UVData</definition>
        <argsstring>() const override</argsstring>
        <name>UVData</name>
        <reimplements refid="class_azura_1_1_math_1_1_geometry_1aaef0eabbb1cc1269c20309ca3eac81b8">UVData</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Math/Inc/Math/Plane.h" line="21" column="1" bodyfile="Source/Math/Src/Plane.cpp" bodystart="80" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_math_1_1_plane_1a6187804a6ba199278e960eb59df4a566" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>RawStorageFormat</type>
        <definition>RawStorageFormat Azura::Math::Plane::GetVertexFormat</definition>
        <argsstring>() const override</argsstring>
        <name>GetVertexFormat</name>
        <reimplements refid="class_azura_1_1_math_1_1_geometry_1aff7277c8d60b3b04e75a97238de299a4">GetVertexFormat</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Math/Inc/Math/Plane.h" line="22" column="1" bodyfile="Source/Math/Src/Plane.cpp" bodystart="90" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_math_1_1_plane_1a87a3f1b0921472c23aebeedf8cc5de94" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>RawStorageFormat</type>
        <definition>RawStorageFormat Azura::Math::Plane::GetIndexFormat</definition>
        <argsstring>() const override</argsstring>
        <name>GetIndexFormat</name>
        <reimplements refid="class_azura_1_1_math_1_1_geometry_1a3646f53090427c4f34d71f632bf59ff0">GetIndexFormat</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Math/Inc/Math/Plane.h" line="23" column="1" bodyfile="Source/Math/Src/Plane.cpp" bodystart="94" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_math_1_1_plane_1abcefad16303464335c0c6c96f1284126" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>U32</type>
        <definition>U32 Azura::Math::Plane::GetVertexCount</definition>
        <argsstring>() const override</argsstring>
        <name>GetVertexCount</name>
        <reimplements refid="class_azura_1_1_math_1_1_geometry_1ae114b9fd7f187249ce2c5c19fa3396a8">GetVertexCount</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Math/Inc/Math/Plane.h" line="24" column="1" bodyfile="Source/Math/Src/Plane.cpp" bodystart="106" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_math_1_1_plane_1a5d3dc9c0e694568dffc254538cc89756" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>U32</type>
        <definition>U32 Azura::Math::Plane::GetIndexCount</definition>
        <argsstring>() const override</argsstring>
        <name>GetIndexCount</name>
        <reimplements refid="class_azura_1_1_math_1_1_geometry_1af6a4f5bd5d7b7479cfe37629a60b9f87">GetIndexCount</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Math/Inc/Math/Plane.h" line="25" column="1" bodyfile="Source/Math/Src/Plane.cpp" bodystart="110" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_math_1_1_plane_1a5f3c4f93551dedde2dac8095afdad5ad" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>U32</type>
        <definition>U32 Azura::Math::Plane::TotalDataSize</definition>
        <argsstring>() const override</argsstring>
        <name>TotalDataSize</name>
        <reimplements refid="class_azura_1_1_math_1_1_geometry_1a149b71e3fb0c73440c46b07482acf76f">TotalDataSize</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Math/Inc/Math/Plane.h" line="26" column="1" bodyfile="Source/Math/Src/Plane.cpp" bodystart="114" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_math_1_1_plane_1ab7bcb99779984e6e0810c52fb5fdec95" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; Vector4f &gt; &amp;</type>
        <definition>const std::vector&lt; Vector4f &gt; &amp; Azura::Math::Plane::GetVertices</definition>
        <argsstring>() const</argsstring>
        <name>GetVertices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Math/Inc/Math/Plane.h" line="28" column="1" bodyfile="Source/Math/Src/Plane.cpp" bodystart="118" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_math_1_1_plane_1a6bdbe9c9b57d43fe524148589ea21cf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; Vector4f &gt; &amp;</type>
        <definition>std::vector&lt; Vector4f &gt; &amp; Azura::Math::Plane::GetVertices</definition>
        <argsstring>()</argsstring>
        <name>GetVertices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Math/Inc/Math/Plane.h" line="29" column="1" bodyfile="Source/Math/Src/Plane.cpp" bodystart="122" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_math_1_1_plane_1a0b6a251f8c2458df317d4dd14084db12" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; Vector3f &gt; &amp;</type>
        <definition>const std::vector&lt; Vector3f &gt; &amp; Azura::Math::Plane::GetNormals</definition>
        <argsstring>() const</argsstring>
        <name>GetNormals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Math/Inc/Math/Plane.h" line="31" column="1" bodyfile="Source/Math/Src/Plane.cpp" bodystart="126" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_math_1_1_plane_1a7ecada2727c3ae1cf1932497cc64f978" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; Vector3f &gt; &amp;</type>
        <definition>std::vector&lt; Vector3f &gt; &amp; Azura::Math::Plane::GetNormals</definition>
        <argsstring>()</argsstring>
        <name>GetNormals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Math/Inc/Math/Plane.h" line="32" column="1" bodyfile="Source/Math/Src/Plane.cpp" bodystart="130" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_math_1_1_plane_1aff525608680842d337fab4d95381d251" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>U32</type>
        <definition>U32 Azura::Math::Plane::NormalDataSize</definition>
        <argsstring>() const override</argsstring>
        <name>NormalDataSize</name>
        <reimplements refid="class_azura_1_1_math_1_1_geometry_1a77e056714cf8fde1d7c15d4f7b01e84a">NormalDataSize</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Math/Inc/Math/Plane.h" line="34" column="1" bodyfile="Source/Math/Src/Plane.cpp" bodystart="66" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_math_1_1_plane_1aaac856a44bc6eaacc3ad37c7e677b74f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const U8 *</type>
        <definition>const U8 * Azura::Math::Plane::NormalData</definition>
        <argsstring>() const override</argsstring>
        <name>NormalData</name>
        <reimplements refid="class_azura_1_1_math_1_1_geometry_1ad3a024bf9d28a6d3d230eeac7d6aa490">NormalData</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Math/Inc/Math/Plane.h" line="35" column="1" bodyfile="Source/Math/Src/Plane.cpp" bodystart="85" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_math_1_1_plane_1ab290cfee76a7bc0bf08028b433f52aa8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>RawStorageFormat</type>
        <definition>RawStorageFormat Azura::Math::Plane::GetNormalFormat</definition>
        <argsstring>() const override</argsstring>
        <name>GetNormalFormat</name>
        <reimplements refid="class_azura_1_1_math_1_1_geometry_1a9d33a51d7ddf0c70953e2152be361a4c">GetNormalFormat</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Math/Inc/Math/Plane.h" line="36" column="1" bodyfile="Source/Math/Src/Plane.cpp" bodystart="98" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_math_1_1_plane_1a00a6fead9b9c8a6243fc4aa3c4e6a390" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>RawStorageFormat</type>
        <definition>RawStorageFormat Azura::Math::Plane::GetUVFormat</definition>
        <argsstring>() const override</argsstring>
        <name>GetUVFormat</name>
        <reimplements refid="class_azura_1_1_math_1_1_geometry_1ad689616ffa31f5bdfcfa50daf5bdc7be">GetUVFormat</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Math/Inc/Math/Plane.h" line="37" column="1" bodyfile="Source/Math/Src/Plane.cpp" bodystart="102" bodyend="104"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="319">
        <label>Azura::Math::Plane</label>
        <link refid="class_azura_1_1_math_1_1_plane"/>
        <childnode refid="320" relation="public-inheritance">
        </childnode>
      </node>
      <node id="320">
        <label>Azura::Math::Geometry</label>
        <link refid="class_azura_1_1_math_1_1_geometry"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="321">
        <label>Azura::Math::Plane</label>
        <link refid="class_azura_1_1_math_1_1_plane"/>
        <childnode refid="322" relation="public-inheritance">
        </childnode>
      </node>
      <node id="322">
        <label>Azura::Math::Geometry</label>
        <link refid="class_azura_1_1_math_1_1_geometry"/>
      </node>
    </collaborationgraph>
    <location file="Source/Math/Inc/Math/Plane.h" line="10" column="1" bodyfile="Source/Math/Inc/Math/Plane.h" bodystart="10" bodyend="44"/>
    <listofallmembers>
      <member refid="class_azura_1_1_math_1_1_geometry_1a7ff397714deef6a88c8e4edddc0ba032" prot="public" virt="non-virtual"><scope>Azura::Math::Plane</scope><name>Geometry</name></member>
      <member refid="class_azura_1_1_math_1_1_geometry_1abd1cd8e142652b4dfd80378a52f45e47" prot="public" virt="non-virtual"><scope>Azura::Math::Plane</scope><name>Geometry</name></member>
      <member refid="class_azura_1_1_math_1_1_geometry_1ac6d5eb1dbfcfce2d84d5f4fe54640922" prot="public" virt="non-virtual"><scope>Azura::Math::Plane</scope><name>Geometry</name></member>
      <member refid="class_azura_1_1_math_1_1_plane_1a5d3dc9c0e694568dffc254538cc89756" prot="public" virt="virtual"><scope>Azura::Math::Plane</scope><name>GetIndexCount</name></member>
      <member refid="class_azura_1_1_math_1_1_plane_1a87a3f1b0921472c23aebeedf8cc5de94" prot="public" virt="virtual"><scope>Azura::Math::Plane</scope><name>GetIndexFormat</name></member>
      <member refid="class_azura_1_1_math_1_1_plane_1ab290cfee76a7bc0bf08028b433f52aa8" prot="public" virt="virtual"><scope>Azura::Math::Plane</scope><name>GetNormalFormat</name></member>
      <member refid="class_azura_1_1_math_1_1_plane_1a0b6a251f8c2458df317d4dd14084db12" prot="public" virt="non-virtual"><scope>Azura::Math::Plane</scope><name>GetNormals</name></member>
      <member refid="class_azura_1_1_math_1_1_plane_1a7ecada2727c3ae1cf1932497cc64f978" prot="public" virt="non-virtual"><scope>Azura::Math::Plane</scope><name>GetNormals</name></member>
      <member refid="class_azura_1_1_math_1_1_plane_1a00a6fead9b9c8a6243fc4aa3c4e6a390" prot="public" virt="virtual"><scope>Azura::Math::Plane</scope><name>GetUVFormat</name></member>
      <member refid="class_azura_1_1_math_1_1_plane_1abcefad16303464335c0c6c96f1284126" prot="public" virt="virtual"><scope>Azura::Math::Plane</scope><name>GetVertexCount</name></member>
      <member refid="class_azura_1_1_math_1_1_plane_1a6187804a6ba199278e960eb59df4a566" prot="public" virt="virtual"><scope>Azura::Math::Plane</scope><name>GetVertexFormat</name></member>
      <member refid="class_azura_1_1_math_1_1_plane_1ab7bcb99779984e6e0810c52fb5fdec95" prot="public" virt="non-virtual"><scope>Azura::Math::Plane</scope><name>GetVertices</name></member>
      <member refid="class_azura_1_1_math_1_1_plane_1a6bdbe9c9b57d43fe524148589ea21cf3" prot="public" virt="non-virtual"><scope>Azura::Math::Plane</scope><name>GetVertices</name></member>
      <member refid="class_azura_1_1_math_1_1_plane_1a90fdfe29f0921e8782f38bf1d9bee9cf" prot="public" virt="virtual"><scope>Azura::Math::Plane</scope><name>IndexData</name></member>
      <member refid="class_azura_1_1_math_1_1_plane_1a10ac399801a00cdeb02f131d0696e2b9" prot="public" virt="virtual"><scope>Azura::Math::Plane</scope><name>IndexDataSize</name></member>
      <member refid="class_azura_1_1_math_1_1_plane_1a2d630f2cdd106805d316fd9cb799deb0" prot="private" virt="non-virtual"><scope>Azura::Math::Plane</scope><name>m_normals</name></member>
      <member refid="class_azura_1_1_math_1_1_plane_1ade6460a426e0fcc5dec2029b31af2919" prot="private" virt="non-virtual"><scope>Azura::Math::Plane</scope><name>m_triangles</name></member>
      <member refid="class_azura_1_1_math_1_1_plane_1a53fdf481ebb8bad72fe8c67f591bea7d" prot="private" virt="non-virtual"><scope>Azura::Math::Plane</scope><name>m_uv</name></member>
      <member refid="class_azura_1_1_math_1_1_plane_1afc6cde73125b662266575c15db00c6f1" prot="private" virt="non-virtual"><scope>Azura::Math::Plane</scope><name>m_vertices</name></member>
      <member refid="class_azura_1_1_math_1_1_plane_1aaac856a44bc6eaacc3ad37c7e677b74f" prot="public" virt="virtual"><scope>Azura::Math::Plane</scope><name>NormalData</name></member>
      <member refid="class_azura_1_1_math_1_1_plane_1aff525608680842d337fab4d95381d251" prot="public" virt="virtual"><scope>Azura::Math::Plane</scope><name>NormalDataSize</name></member>
      <member refid="class_azura_1_1_math_1_1_geometry_1a1f4182094f19c0f3e4d3a249707f34e9" prot="public" virt="non-virtual"><scope>Azura::Math::Plane</scope><name>operator=</name></member>
      <member refid="class_azura_1_1_math_1_1_geometry_1a37a28a7b74fc5abc68f231c9d3af8c72" prot="public" virt="non-virtual"><scope>Azura::Math::Plane</scope><name>operator=</name></member>
      <member refid="class_azura_1_1_math_1_1_plane_1a386cce1769e2417796e4e40f8242a2ee" prot="public" virt="non-virtual"><scope>Azura::Math::Plane</scope><name>Plane</name></member>
      <member refid="class_azura_1_1_math_1_1_plane_1a1c52208462dde2519af37b967ecb7a26" prot="public" virt="non-virtual"><scope>Azura::Math::Plane</scope><name>Plane</name></member>
      <member refid="class_azura_1_1_math_1_1_plane_1a5f3c4f93551dedde2dac8095afdad5ad" prot="public" virt="virtual"><scope>Azura::Math::Plane</scope><name>TotalDataSize</name></member>
      <member refid="class_azura_1_1_math_1_1_plane_1a0a07b866d842477a696ab2d2ca061d4e" prot="public" virt="virtual"><scope>Azura::Math::Plane</scope><name>UVData</name></member>
      <member refid="class_azura_1_1_math_1_1_plane_1a7be1f7c7d2276c45db4df4c85d374d42" prot="public" virt="virtual"><scope>Azura::Math::Plane</scope><name>UVDataSize</name></member>
      <member refid="class_azura_1_1_math_1_1_plane_1a25052f1f66e9174a0cb9f0751b5a62ce" prot="public" virt="virtual"><scope>Azura::Math::Plane</scope><name>VertexData</name></member>
      <member refid="class_azura_1_1_math_1_1_plane_1a5c8e1e885c4a5ee3ffb1069d992efbd7" prot="public" virt="virtual"><scope>Azura::Math::Plane</scope><name>VertexDataSize</name></member>
      <member refid="class_azura_1_1_math_1_1_geometry_1ae50195fe0fa7af9125260c39de331fdf" prot="public" virt="virtual"><scope>Azura::Math::Plane</scope><name>~Geometry</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
