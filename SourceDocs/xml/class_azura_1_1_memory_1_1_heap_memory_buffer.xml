<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="class_azura_1_1_memory_1_1_heap_memory_buffer" kind="class" language="C++" prot="public" final="yes">
    <compoundname>Azura::Memory::HeapMemoryBuffer</compoundname>
    <basecompoundref refid="class_azura_1_1_memory_1_1_memory_buffer" prot="public" virt="non-virtual">Azura::Memory::MemoryBuffer</basecompoundref>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_azura_1_1_memory_1_1_heap_memory_buffer_1aa645880a4c13da5027a53c22d4a63b13" prot="private" static="no">
        <type>U8</type>
        <definition>using Azura::Memory::HeapMemoryBuffer::Byte =  U8</definition>
        <argsstring></argsstring>
        <name>Byte</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Common/Inc/Memory/HeapMemoryBuffer.h" line="9" column="1" bodyfile="Source/Common/Inc/Memory/HeapMemoryBuffer.h" bodystart="9" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_azura_1_1_memory_1_1_heap_memory_buffer_1aa0b8442cd96e9a78156dd669c124f3dc" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Azura::Memory::HeapMemoryBuffer::m_isAllocationAligned</definition>
        <argsstring></argsstring>
        <name>m_isAllocationAligned</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Common/Inc/Memory/HeapMemoryBuffer.h" line="43" column="1" bodyfile="Source/Common/Inc/Memory/HeapMemoryBuffer.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_azura_1_1_memory_1_1_heap_memory_buffer_1a86b677a49ca2b29500cca9f62cfc1a72" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>Azura::Memory::HeapMemoryBuffer::HeapMemoryBuffer</definition>
        <argsstring>(U32 blockSize)</argsstring>
        <name>HeapMemoryBuffer</name>
        <param>
          <type>U32</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Allocate a Block on the Heap for Usage. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of Memory Block to allocate </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Common/Inc/Memory/HeapMemoryBuffer.h" line="16" column="1" bodyfile="Source/Common/Src/Memory/HeapMemoryBuffer.cpp" bodystart="9" bodyend="11"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_memory_1_1_heap_memory_buffer_1a8e387f4c6a829c11968fd7b93f680a2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Azura::Memory::HeapMemoryBuffer::HeapMemoryBuffer</definition>
        <argsstring>(U32 blockSize, U32 alignment)</argsstring>
        <name>HeapMemoryBuffer</name>
        <param>
          <type>U32</type>
          <declname>blockSize</declname>
        </param>
        <param>
          <type>U32</type>
          <declname>alignment</declname>
        </param>
        <briefdescription>
<para>Allocate a Aligned Block on the Heap for Usage. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of Memory Block to allocate </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>alignment</parametername>
</parameternamelist>
<parameterdescription>
<para>Starting Alignment for Block </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Common/Inc/Memory/HeapMemoryBuffer.h" line="23" column="1" bodyfile="Source/Common/Src/Memory/HeapMemoryBuffer.cpp" bodystart="13" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_memory_1_1_heap_memory_buffer_1a9e2b18a4e3a9899bf166ef8fd35a9304" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Azura::Memory::HeapMemoryBuffer::~HeapMemoryBuffer</definition>
        <argsstring>()</argsstring>
        <name>~HeapMemoryBuffer</name>
        <briefdescription>
<para>Destroys the Heap Allocated Memory. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Common/Inc/Memory/HeapMemoryBuffer.h" line="28" column="1" bodyfile="Source/Common/Src/Memory/HeapMemoryBuffer.cpp" bodystart="19" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_memory_1_1_heap_memory_buffer_1a00361b3f9d60e4d08c1366660db3ecc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Azura::Memory::HeapMemoryBuffer::HeapMemoryBuffer</definition>
        <argsstring>(const HeapMemoryBuffer &amp;other)=delete</argsstring>
        <name>HeapMemoryBuffer</name>
        <param>
          <type>const <ref refid="class_azura_1_1_memory_1_1_heap_memory_buffer" kindref="compound">HeapMemoryBuffer</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Common/Inc/Memory/HeapMemoryBuffer.h" line="31" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_memory_1_1_heap_memory_buffer_1aa6cb5166a8c708dbc31db61bd524b4e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_azura_1_1_memory_1_1_heap_memory_buffer" kindref="compound">HeapMemoryBuffer</ref> &amp;</type>
        <definition>HeapMemoryBuffer&amp; Azura::Memory::HeapMemoryBuffer::operator=</definition>
        <argsstring>(const HeapMemoryBuffer &amp;other)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_azura_1_1_memory_1_1_heap_memory_buffer" kindref="compound">HeapMemoryBuffer</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Common/Inc/Memory/HeapMemoryBuffer.h" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_memory_1_1_heap_memory_buffer_1ab735059509a3d3eb0bbbd042305b274f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Azura::Memory::HeapMemoryBuffer::HeapMemoryBuffer</definition>
        <argsstring>(HeapMemoryBuffer &amp;&amp;other) noexcept=default</argsstring>
        <name>HeapMemoryBuffer</name>
        <param>
          <type><ref refid="class_azura_1_1_memory_1_1_heap_memory_buffer" kindref="compound">HeapMemoryBuffer</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Common/Inc/Memory/HeapMemoryBuffer.h" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_memory_1_1_heap_memory_buffer_1a437fc0d5f82b9aed2990141dd2d0358d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_azura_1_1_memory_1_1_heap_memory_buffer" kindref="compound">HeapMemoryBuffer</ref> &amp;</type>
        <definition>HeapMemoryBuffer&amp; Azura::Memory::HeapMemoryBuffer::operator=</definition>
        <argsstring>(HeapMemoryBuffer &amp;&amp;other) noexcept=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="class_azura_1_1_memory_1_1_heap_memory_buffer" kindref="compound">HeapMemoryBuffer</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Common/Inc/Memory/HeapMemoryBuffer.h" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_memory_1_1_heap_memory_buffer_1a8d4a8f946ef488e06c88540fef31f772" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void *</type>
        <definition>void * Azura::Memory::HeapMemoryBuffer::Allocate</definition>
        <argsstring>(U32 size) override</argsstring>
        <name>Allocate</name>
        <reimplements refid="class_azura_1_1_memory_1_1_memory_buffer_1a935667d928738bd604f6087229a13396">Allocate</reimplements>
        <param>
          <type>U32</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Common/Inc/Memory/HeapMemoryBuffer.h" line="38" column="1" bodyfile="Source/Common/Src/Memory/HeapMemoryBuffer.cpp" bodystart="34" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_memory_1_1_heap_memory_buffer_1ac92d39dfd4c38dd6b7f81f4ee0cddf6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Azura::Memory::HeapMemoryBuffer::Deallocate</definition>
        <argsstring>(void *address) override</argsstring>
        <name>Deallocate</name>
        <reimplements refid="class_azura_1_1_memory_1_1_memory_buffer_1a8dcb91c18e45529d50cfb501d1345833">Deallocate</reimplements>
        <param>
          <type>void *</type>
          <declname>address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Common/Inc/Memory/HeapMemoryBuffer.h" line="39" column="1" bodyfile="Source/Common/Src/Memory/HeapMemoryBuffer.cpp" bodystart="41" bodyend="43"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_azura_1_1_memory_1_1_heap_memory_buffer_1af6e5b09f3cccb80c8e1b754724654122" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UPTR</type>
        <definition>UPTR Azura::Memory::HeapMemoryBuffer::AllocateRaw</definition>
        <argsstring>(U32 size)</argsstring>
        <name>AllocateRaw</name>
        <param>
          <type>U32</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Common/Inc/Memory/HeapMemoryBuffer.h" line="42" column="1" bodyfile="Source/Common/Src/Memory/HeapMemoryBuffer.cpp" bodystart="45" bodyend="53"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="241">
        <label>Azura::Memory::MemoryBuffer</label>
        <link refid="class_azura_1_1_memory_1_1_memory_buffer"/>
      </node>
      <node id="240">
        <label>Azura::Memory::HeapMemoryBuffer</label>
        <link refid="class_azura_1_1_memory_1_1_heap_memory_buffer"/>
        <childnode refid="241" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="243">
        <label>Azura::Memory::MemoryBuffer</label>
        <link refid="class_azura_1_1_memory_1_1_memory_buffer"/>
      </node>
      <node id="242">
        <label>Azura::Memory::HeapMemoryBuffer</label>
        <link refid="class_azura_1_1_memory_1_1_heap_memory_buffer"/>
        <childnode refid="243" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="Source/Common/Inc/Memory/HeapMemoryBuffer.h" line="8" column="1" bodyfile="Source/Common/Inc/Memory/HeapMemoryBuffer.h" bodystart="8" bodyend="44"/>
    <listofallmembers>
      <member refid="class_azura_1_1_memory_1_1_heap_memory_buffer_1a8d4a8f946ef488e06c88540fef31f772" prot="public" virt="virtual"><scope>Azura::Memory::HeapMemoryBuffer</scope><name>Allocate</name></member>
      <member refid="class_azura_1_1_memory_1_1_heap_memory_buffer_1af6e5b09f3cccb80c8e1b754724654122" prot="private" virt="non-virtual"><scope>Azura::Memory::HeapMemoryBuffer</scope><name>AllocateRaw</name></member>
      <member refid="class_azura_1_1_memory_1_1_heap_memory_buffer_1aa645880a4c13da5027a53c22d4a63b13" prot="private" virt="non-virtual"><scope>Azura::Memory::HeapMemoryBuffer</scope><name>Byte</name></member>
      <member refid="class_azura_1_1_memory_1_1_heap_memory_buffer_1ac92d39dfd4c38dd6b7f81f4ee0cddf6d" prot="public" virt="virtual"><scope>Azura::Memory::HeapMemoryBuffer</scope><name>Deallocate</name></member>
      <member refid="class_azura_1_1_memory_1_1_heap_memory_buffer_1a86b677a49ca2b29500cca9f62cfc1a72" prot="public" virt="non-virtual"><scope>Azura::Memory::HeapMemoryBuffer</scope><name>HeapMemoryBuffer</name></member>
      <member refid="class_azura_1_1_memory_1_1_heap_memory_buffer_1a8e387f4c6a829c11968fd7b93f680a2a" prot="public" virt="non-virtual"><scope>Azura::Memory::HeapMemoryBuffer</scope><name>HeapMemoryBuffer</name></member>
      <member refid="class_azura_1_1_memory_1_1_heap_memory_buffer_1a00361b3f9d60e4d08c1366660db3ecc6" prot="public" virt="non-virtual"><scope>Azura::Memory::HeapMemoryBuffer</scope><name>HeapMemoryBuffer</name></member>
      <member refid="class_azura_1_1_memory_1_1_heap_memory_buffer_1ab735059509a3d3eb0bbbd042305b274f" prot="public" virt="non-virtual"><scope>Azura::Memory::HeapMemoryBuffer</scope><name>HeapMemoryBuffer</name></member>
      <member refid="class_azura_1_1_memory_1_1_memory_buffer_1ac38b3863bc067031d1ebbee9ad4244c7" prot="protected" virt="non-virtual"><scope>Azura::Memory::HeapMemoryBuffer</scope><name>m_currentPosition</name></member>
      <member refid="class_azura_1_1_memory_1_1_heap_memory_buffer_1aa0b8442cd96e9a78156dd669c124f3dc" prot="private" virt="non-virtual"><scope>Azura::Memory::HeapMemoryBuffer</scope><name>m_isAllocationAligned</name></member>
      <member refid="class_azura_1_1_memory_1_1_memory_buffer_1aeb35b2e5e532ef4b0bb44213dc2bc32e" prot="protected" virt="non-virtual"><scope>Azura::Memory::HeapMemoryBuffer</scope><name>m_memoryBlock</name></member>
      <member refid="class_azura_1_1_memory_1_1_memory_buffer_1aa8344c7f79dc35e5e4e56fcded5db1f5" prot="protected" virt="non-virtual"><scope>Azura::Memory::HeapMemoryBuffer</scope><name>m_size</name></member>
      <member refid="class_azura_1_1_memory_1_1_memory_buffer_1a2107e3d534cb2173b91ebd0b02b7cf1b" prot="public" virt="non-virtual"><scope>Azura::Memory::HeapMemoryBuffer</scope><name>MemoryBuffer</name></member>
      <member refid="class_azura_1_1_memory_1_1_memory_buffer_1a126b73d468aeed82ccd2ebca1d99b44f" prot="public" virt="non-virtual"><scope>Azura::Memory::HeapMemoryBuffer</scope><name>MemoryBuffer</name></member>
      <member refid="class_azura_1_1_memory_1_1_memory_buffer_1ae592bf9de8bb82748a29800807afba55" prot="public" virt="non-virtual"><scope>Azura::Memory::HeapMemoryBuffer</scope><name>MemoryBuffer</name></member>
      <member refid="class_azura_1_1_memory_1_1_memory_buffer_1ae8ff4261854c8c32e52adae4dd00b35b" prot="public" virt="non-virtual"><scope>Azura::Memory::HeapMemoryBuffer</scope><name>MemoryBuffer</name></member>
      <member refid="class_azura_1_1_memory_1_1_memory_buffer_1a9ee5f08674543e04f76dd1a8c9f37714" prot="public" virt="non-virtual"><scope>Azura::Memory::HeapMemoryBuffer</scope><name>MemoryBuffer</name></member>
      <member refid="class_azura_1_1_memory_1_1_heap_memory_buffer_1aa6cb5166a8c708dbc31db61bd524b4e1" prot="public" virt="non-virtual"><scope>Azura::Memory::HeapMemoryBuffer</scope><name>operator=</name></member>
      <member refid="class_azura_1_1_memory_1_1_heap_memory_buffer_1a437fc0d5f82b9aed2990141dd2d0358d" prot="public" virt="non-virtual"><scope>Azura::Memory::HeapMemoryBuffer</scope><name>operator=</name></member>
      <member refid="class_azura_1_1_memory_1_1_memory_buffer_1acf1033a54da648b987b3e94b79a76444" prot="public" virt="non-virtual" ambiguityscope="Azura::Memory::MemoryBuffer::"><scope>Azura::Memory::HeapMemoryBuffer</scope><name>operator=</name></member>
      <member refid="class_azura_1_1_memory_1_1_memory_buffer_1a2be9ceadac3a0bcd12b836a82f6f9efc" prot="public" virt="non-virtual" ambiguityscope="Azura::Memory::MemoryBuffer::"><scope>Azura::Memory::HeapMemoryBuffer</scope><name>operator=</name></member>
      <member refid="class_azura_1_1_memory_1_1_heap_memory_buffer_1a9e2b18a4e3a9899bf166ef8fd35a9304" prot="public" virt="non-virtual"><scope>Azura::Memory::HeapMemoryBuffer</scope><name>~HeapMemoryBuffer</name></member>
      <member refid="class_azura_1_1_memory_1_1_memory_buffer_1ac57184a3ed195b257daab76f4e1ee2b9" prot="public" virt="virtual"><scope>Azura::Memory::HeapMemoryBuffer</scope><name>~MemoryBuffer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
