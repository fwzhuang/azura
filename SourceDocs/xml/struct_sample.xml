<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="struct_sample" kind="struct" language="C++" prot="public">
    <compoundname>Sample</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_sample_1a6e19b18a5f538fce9a64ea6e8f9e538b" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int Sample::arg1</definition>
        <argsstring></argsstring>
        <name>arg1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Common/Test/MonotonicAllocator_test.cpp" line="7" column="1" bodyfile="Source/Common/Test/MonotonicAllocator_test.cpp" bodystart="7" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_sample_1aef02c11206efe3bd808b6ae748db2dd5" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Sample::arg2</definition>
        <argsstring></argsstring>
        <name>arg2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Common/Test/MonotonicAllocator_test.cpp" line="8" column="1" bodyfile="Source/Common/Test/MonotonicAllocator_test.cpp" bodystart="8" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_sample_1a48a4cf559a1ff65b7d4776c262236e27" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Sample::Sample</definition>
        <argsstring>()</argsstring>
        <name>Sample</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Common/Test/MonotonicAllocator_test.cpp" line="10" column="1" bodyfile="Source/Common/Test/MonotonicAllocator_test.cpp" bodystart="10" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="struct_sample_1a48a4cf559a1ff65b7d4776c262236e27" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Sample::Sample</definition>
        <argsstring>()</argsstring>
        <name>Sample</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Common/Test/RangeAllocator_test.cpp" line="11" column="1" bodyfile="Source/Common/Test/RangeAllocator_test.cpp" bodystart="11" bodyend="14"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="Source/Common/Test/MonotonicAllocator_test.cpp" line="6" column="1" bodyfile="Source/Common/Test/MonotonicAllocator_test.cpp" bodystart="6" bodyend="14"/>
    <listofallmembers>
      <member refid="struct_sample_1a6e19b18a5f538fce9a64ea6e8f9e538b" prot="public" virt="non-virtual"><scope>Sample</scope><name>arg1</name></member>
      <member refid="struct_sample_1aef02c11206efe3bd808b6ae748db2dd5" prot="public" virt="non-virtual"><scope>Sample</scope><name>arg2</name></member>
      <member refid="struct_sample_1a48a4cf559a1ff65b7d4776c262236e27" prot="public" virt="non-virtual"><scope>Sample</scope><name>Sample</name></member>
      <member refid="struct_sample_1a48a4cf559a1ff65b7d4776c262236e27" prot="public" virt="non-virtual"><scope>Sample</scope><name>Sample</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
