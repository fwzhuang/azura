<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="_window_8cpp" kind="file" language="C++">
    <compoundname>Window.cpp</compoundname>
    <includes refid="_window_8h" local="yes">Generic/Window.h</includes>
    <includes local="no">utility</includes>
    <incdepgraph>
      <node id="3002">
        <label>functional</label>
      </node>
      <node id="3015">
        <label>Generic/Constants.h</label>
        <link refid="_constants_8h_source"/>
        <childnode refid="3016" relation="include">
        </childnode>
        <childnode refid="3010" relation="include">
        </childnode>
      </node>
      <node id="3025">
        <label>Renderer.h</label>
        <link refid="_renderer_8h_source"/>
        <childnode refid="3015" relation="include">
        </childnode>
        <childnode refid="3004" relation="include">
        </childnode>
        <childnode refid="3026" relation="include">
        </childnode>
        <childnode refid="3003" relation="include">
        </childnode>
        <childnode refid="3017" relation="include">
        </childnode>
        <childnode refid="3027" relation="include">
        </childnode>
      </node>
      <node id="3000">
        <label>Source/Azura/RenderSystem/Src/Generic/Window.cpp</label>
        <link refid="_window_8cpp"/>
        <childnode refid="3001" relation="include">
        </childnode>
        <childnode refid="3031" relation="include">
        </childnode>
      </node>
      <node id="3007">
        <label>iterator</label>
      </node>
      <node id="3012">
        <label>cstdint</label>
      </node>
      <node id="3005">
        <label>cassert</label>
      </node>
      <node id="3020">
        <label>boost/preprocessor/tuple/elem.hpp</label>
      </node>
      <node id="3013">
        <label>string</label>
      </node>
      <node id="3028">
        <label>Core/Events.h</label>
        <link refid="_events_8h_source"/>
      </node>
      <node id="3026">
        <label>Drawable.h</label>
        <link refid="_drawable_8h_source"/>
        <childnode refid="3004" relation="include">
        </childnode>
        <childnode refid="3003" relation="include">
        </childnode>
        <childnode refid="3010" relation="include">
        </childnode>
        <childnode refid="3017" relation="include">
        </childnode>
      </node>
      <node id="3024">
        <label>boost/container/small_vector.hpp</label>
      </node>
      <node id="3023">
        <label>Core/AssetLocation.h</label>
        <link refid="_asset_location_8h_source"/>
      </node>
      <node id="3021">
        <label>boost/detail/bitmask.hpp</label>
      </node>
      <node id="3009">
        <label>Memory/Allocator.h</label>
        <link refid="_allocator_8h_source"/>
        <childnode refid="3002" relation="include">
        </childnode>
        <childnode refid="3010" relation="include">
        </childnode>
        <childnode refid="3014" relation="include">
        </childnode>
      </node>
      <node id="3004">
        <label>Containers/Vector.h</label>
        <link refid="_vector_8h_source"/>
        <childnode refid="3005" relation="include">
        </childnode>
        <childnode refid="3006" relation="include">
        </childnode>
        <childnode refid="3002" relation="include">
        </childnode>
        <childnode refid="3007" relation="include">
        </childnode>
        <childnode refid="3008" relation="include">
        </childnode>
        <childnode refid="3009" relation="include">
        </childnode>
        <childnode refid="3010" relation="include">
        </childnode>
        <childnode refid="3014" relation="include">
        </childnode>
      </node>
      <node id="3014">
        <label>Utils/Macros.h</label>
        <link refid="_macros_8h_source"/>
      </node>
      <node id="3016">
        <label>tuple</label>
      </node>
      <node id="3027">
        <label>ComputePool.h</label>
        <link refid="_compute_pool_8h_source"/>
        <childnode refid="3004" relation="include">
        </childnode>
        <childnode refid="3003" relation="include">
        </childnode>
        <childnode refid="3010" relation="include">
        </childnode>
      </node>
      <node id="3003">
        <label>GenericTypes.h</label>
        <link refid="_azura_2_render_system_2_inc_2_generic_2_generic_types_8h_source"/>
        <childnode refid="3004" relation="include">
        </childnode>
        <childnode refid="3015" relation="include">
        </childnode>
        <childnode refid="3010" relation="include">
        </childnode>
        <childnode refid="3017" relation="include">
        </childnode>
        <childnode refid="3022" relation="include">
        </childnode>
        <childnode refid="3023" relation="include">
        </childnode>
        <childnode refid="3024" relation="include">
        </childnode>
        <childnode refid="3021" relation="include">
        </childnode>
      </node>
      <node id="3030">
        <label>vector</label>
      </node>
      <node id="3001">
        <label>Generic/Window.h</label>
        <link refid="_window_8h_source"/>
        <childnode refid="3002" relation="include">
        </childnode>
        <childnode refid="3003" relation="include">
        </childnode>
        <childnode refid="3010" relation="include">
        </childnode>
        <childnode refid="3025" relation="include">
        </childnode>
        <childnode refid="3028" relation="include">
        </childnode>
        <childnode refid="3029" relation="include">
        </childnode>
      </node>
      <node id="3008">
        <label>Array.h</label>
        <link refid="_array_8h_source"/>
        <childnode refid="3005" relation="include">
        </childnode>
        <childnode refid="3006" relation="include">
        </childnode>
        <childnode refid="3009" relation="include">
        </childnode>
        <childnode refid="3010" relation="include">
        </childnode>
      </node>
      <node id="3031">
        <label>utility</label>
      </node>
      <node id="3029">
        <label>Log/Log.h</label>
        <link refid="_log_8h_source"/>
        <childnode refid="3010" relation="include">
        </childnode>
        <childnode refid="3030" relation="include">
        </childnode>
      </node>
      <node id="3017">
        <label>Core/RawStorageFormat.h</label>
        <link refid="_raw_storage_format_8h_source"/>
        <childnode refid="3010" relation="include">
        </childnode>
        <childnode refid="3016" relation="include">
        </childnode>
        <childnode refid="3018" relation="include">
        </childnode>
        <childnode refid="3019" relation="include">
        </childnode>
        <childnode refid="3020" relation="include">
        </childnode>
        <childnode refid="3021" relation="include">
        </childnode>
      </node>
      <node id="3011">
        <label>cstddef</label>
      </node>
      <node id="3018">
        <label>boost/preprocessor/repetition/repeat.hpp</label>
      </node>
      <node id="3022">
        <label>Utils/Hash.h</label>
        <link refid="_hash_8h_source"/>
        <childnode refid="3010" relation="include">
        </childnode>
      </node>
      <node id="3010">
        <label>Types.h</label>
        <link refid="_types_8h_source"/>
        <childnode refid="3011" relation="include">
        </childnode>
        <childnode refid="3012" relation="include">
        </childnode>
        <childnode refid="3013" relation="include">
        </childnode>
      </node>
      <node id="3006">
        <label>cstring</label>
      </node>
      <node id="3019">
        <label>boost/preprocessor/seq/for_each.hpp</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_azura">Azura</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;Generic/Window.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_azura" kindref="compound">Azura</ref><sp/>{</highlight></codeline>
<codeline lineno="5"><highlight class="normal">Window::Window(String<sp/>title,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>U32<sp/>width,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>U32<sp/>height)</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/>:<sp/>log_Window(std::move(Log(</highlight><highlight class="stringliteral">&quot;Window&quot;</highlight><highlight class="normal">))),</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>m_midWidth(width<sp/>/<sp/>2.0f),</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>m_midHeight(height<sp/>/<sp/>2.0f),</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>m_rate(UpdateRate::RateUnlocked),</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>m_width(width),</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>m_height(height),</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>m_title(std::move(title)),</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>p_windowResource(nullptr)<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Window::SetUpdateCallback(std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)&gt;<sp/>eventUpdate)<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>p_updateFunc<sp/>=<sp/>eventUpdate;</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Window::SetMouseEventCallback(std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(MouseEvent)&gt;<sp/>eventFunc)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>p_mouseEventFunc<sp/>=<sp/>eventFunc;</highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Window::SetKeyEventCallback(std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(KeyEvent)&gt;<sp/>eventFunc)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>p_keyEventFunc<sp/>=<sp/>eventFunc;</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal">ViewportDimensions<sp/>Window::GetViewport()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>ViewportDimensions<sp/>dimension{};</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>dimension.m_x<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>dimension.m_y<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>dimension.m_width<sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(m_width);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>dimension.m_height<sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(m_height);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>dimension.m_minDepth<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>dimension.m_maxDepth<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dimension;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Window::SetUpdateRate(UpdateRate<sp/>rate)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>m_rate<sp/>=<sp/>rate;</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">SwapChainRequirements<sp/>Window::GetSwapChainRequirements()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>SwapChainRequirements<sp/>requirement;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>requirement.m_colorSpace<sp/><sp/><sp/><sp/><sp/>=<sp/>ColorSpace::SRGB;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>requirement.m_format<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RawStorageFormat::B8G8R8A8_UNORM;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>requirement.m_depthFormat<sp/><sp/><sp/><sp/>=<sp/>RawStorageFormat::D32_FLOAT;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>requirement.m_extent<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Bounds2D(m_width,<sp/>m_height);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>requirement.m_framesInFlight<sp/>=<sp/>2u;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>requirement;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal">U32<sp/>Window::GetWidth()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_width;</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal">U32<sp/>Window::GetHeight()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_height;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>Window::GetHandle()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_windowResource;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Window::SetHandle(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>window)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>p_windowResource<sp/>=<sp/>window;</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>Window::GetTitle()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_title.c_str();</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Window::CallUpdateFunction(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>timeDelta)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>p_updateFunc(timeDelta);</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Window::CallMouseEventFunction(MouseEvent<sp/>e)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p_mouseEventFunc)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>p_mouseEventFunc(e);</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Window::CallKeyEventFunction(KeyEvent<sp/>e)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p_keyEventFunc)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>p_keyEventFunc(e);</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Azura</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="Source/Azura/RenderSystem/Src/Generic/Window.cpp"/>
  </compounddef>
</doxygen>
