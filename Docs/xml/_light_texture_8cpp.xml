<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="_light_texture_8cpp" kind="file" language="C++">
    <compoundname>LightTexture.cpp</compoundname>
    <includes refid="_light_texture_8h" local="yes">App/LightTexture.h</includes>
    <incdepgraph>
      <node id="7044">
        <label>D3D12/D3D12TextureManager.h</label>
        <link refid="_d3_d12_texture_manager_8h_source"/>
        <childnode refid="7045" relation="include">
        </childnode>
      </node>
      <node id="7039">
        <label>Math/Core.h</label>
        <link refid="_core_8h_source"/>
        <childnode refid="7040" relation="include">
        </childnode>
        <childnode refid="7029" relation="include">
        </childnode>
      </node>
      <node id="7033">
        <label>functional</label>
      </node>
      <node id="7042">
        <label>GLTFSDK/Document.h</label>
      </node>
      <node id="7034">
        <label>iterator</label>
      </node>
      <node id="7057">
        <label>Utils/Hash.h</label>
        <link refid="_hash_8h_source"/>
        <childnode refid="7029" relation="include">
        </childnode>
      </node>
      <node id="7041">
        <label>AssetManager/GLTFLoader.h</label>
        <link refid="_g_l_t_f_loader_8h_source"/>
        <childnode refid="7029" relation="include">
        </childnode>
        <childnode refid="7042" relation="include">
        </childnode>
        <childnode refid="7043" relation="include">
        </childnode>
      </node>
      <node id="7052">
        <label>Core/RawStorageFormat.h</label>
        <link refid="_raw_storage_format_8h_source"/>
        <childnode refid="7029" relation="include">
        </childnode>
        <childnode refid="7051" relation="include">
        </childnode>
        <childnode refid="7053" relation="include">
        </childnode>
        <childnode refid="7054" relation="include">
        </childnode>
        <childnode refid="7055" relation="include">
        </childnode>
        <childnode refid="7056" relation="include">
        </childnode>
      </node>
      <node id="7047">
        <label>MemoryBuffer.h</label>
        <link refid="_memory_buffer_8h_source"/>
        <childnode refid="7029" relation="include">
        </childnode>
      </node>
      <node id="7036">
        <label>Memory/Allocator.h</label>
        <link refid="_allocator_8h_source"/>
        <childnode refid="7033" relation="include">
        </childnode>
        <childnode refid="7029" relation="include">
        </childnode>
        <childnode refid="7037" relation="include">
        </childnode>
      </node>
      <node id="7058">
        <label>Core/AssetLocation.h</label>
        <link refid="_asset_location_8h_source"/>
      </node>
      <node id="7031">
        <label>cassert</label>
      </node>
      <node id="7055">
        <label>boost/preprocessor/tuple/elem.hpp</label>
      </node>
      <node id="7049">
        <label>GenericTypes.h</label>
        <link refid="_azura_2_render_system_2_inc_2_generic_2_generic_types_8h_source"/>
        <childnode refid="7030" relation="include">
        </childnode>
        <childnode refid="7050" relation="include">
        </childnode>
        <childnode refid="7029" relation="include">
        </childnode>
        <childnode refid="7052" relation="include">
        </childnode>
        <childnode refid="7057" relation="include">
        </childnode>
        <childnode refid="7058" relation="include">
        </childnode>
        <childnode refid="7059" relation="include">
        </childnode>
        <childnode refid="7056" relation="include">
        </childnode>
      </node>
      <node id="7046">
        <label>Memory/HeapMemoryBuffer.h</label>
        <link refid="_heap_memory_buffer_8h_source"/>
        <childnode refid="7047" relation="include">
        </childnode>
        <childnode refid="7029" relation="include">
        </childnode>
      </node>
      <node id="7027">
        <label>Source/Samples/2_DeferredRenderer/Src/LightTexture.cpp</label>
        <link refid="_light_texture_8cpp"/>
        <childnode refid="7028" relation="include">
        </childnode>
      </node>
      <node id="7037">
        <label>Utils/Macros.h</label>
        <link refid="_macros_8h_source"/>
      </node>
      <node id="7028">
        <label>App/LightTexture.h</label>
        <link refid="_light_texture_8h_source"/>
        <childnode refid="7029" relation="include">
        </childnode>
        <childnode refid="7030" relation="include">
        </childnode>
        <childnode refid="7038" relation="include">
        </childnode>
        <childnode refid="7044" relation="include">
        </childnode>
      </node>
      <node id="7059">
        <label>boost/container/small_vector.hpp</label>
      </node>
      <node id="7050">
        <label>Generic/Constants.h</label>
        <link refid="_azura_2_render_system_2_inc_2_generic_2_constants_8h_source"/>
        <childnode refid="7051" relation="include">
        </childnode>
        <childnode refid="7029" relation="include">
        </childnode>
      </node>
      <node id="7056">
        <label>boost/detail/bitmask.hpp</label>
      </node>
      <node id="7038">
        <label>App/Common.h</label>
        <link refid="_samples_22___deferred_renderer_2_inc_2_app_2_common_8h_source"/>
        <childnode refid="7039" relation="include">
        </childnode>
        <childnode refid="7041" relation="include">
        </childnode>
      </node>
      <node id="7051">
        <label>tuple</label>
      </node>
      <node id="7035">
        <label>Array.h</label>
        <link refid="_array_8h_source"/>
        <childnode refid="7031" relation="include">
        </childnode>
        <childnode refid="7032" relation="include">
        </childnode>
        <childnode refid="7036" relation="include">
        </childnode>
        <childnode refid="7029" relation="include">
        </childnode>
      </node>
      <node id="7048">
        <label>Memory/MonotonicAllocator.h</label>
        <link refid="_monotonic_allocator_8h_source"/>
        <childnode refid="7036" relation="include">
        </childnode>
        <childnode refid="7029" relation="include">
        </childnode>
      </node>
      <node id="7061">
        <label>vector</label>
      </node>
      <node id="7030">
        <label>Containers/Vector.h</label>
        <link refid="_vector_8h_source"/>
        <childnode refid="7031" relation="include">
        </childnode>
        <childnode refid="7032" relation="include">
        </childnode>
        <childnode refid="7033" relation="include">
        </childnode>
        <childnode refid="7034" relation="include">
        </childnode>
        <childnode refid="7035" relation="include">
        </childnode>
        <childnode refid="7036" relation="include">
        </childnode>
        <childnode refid="7029" relation="include">
        </childnode>
        <childnode refid="7037" relation="include">
        </childnode>
      </node>
      <node id="7060">
        <label>Log/Log.h</label>
        <link refid="_log_8h_source"/>
        <childnode refid="7029" relation="include">
        </childnode>
        <childnode refid="7061" relation="include">
        </childnode>
      </node>
      <node id="7053">
        <label>boost/preprocessor/repetition/repeat.hpp</label>
      </node>
      <node id="7029">
        <label>Types.h</label>
      </node>
      <node id="7043">
        <label>GLTFSDK/GLTFResourceReader.h</label>
      </node>
      <node id="7040">
        <label>mathfu/matrix.h</label>
      </node>
      <node id="7045">
        <label>Generic/TextureManager.h</label>
        <link refid="_texture_manager_8h_source"/>
        <childnode refid="7029" relation="include">
        </childnode>
        <childnode refid="7046" relation="include">
        </childnode>
        <childnode refid="7048" relation="include">
        </childnode>
        <childnode refid="7030" relation="include">
        </childnode>
        <childnode refid="7049" relation="include">
        </childnode>
        <childnode refid="7060" relation="include">
        </childnode>
      </node>
      <node id="7032">
        <label>cstring</label>
      </node>
      <node id="7054">
        <label>boost/preprocessor/seq/for_each.hpp</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_azura">Azura</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;App/LightTexture.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_azura" kindref="compound">Azura</ref><sp/>{</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal">LightTexture::LightTexture(U32<sp/>numLights,<sp/>U32<sp/>componentsPerLight,<sp/>Memory::Allocator&amp;<sp/>allocator)</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/>:<sp/>m_buffer(allocator),</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>m_numLights(numLights),</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pixelsPerLight(U32(std::ceil(componentsPerLight<sp/>/<sp/>4.0f)))<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/>m_buffer.Resize(m_numLights<sp/>*<sp/>m_pixelsPerLight<sp/>*<sp/>4);</highlight></codeline>
<codeline lineno="10"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LightTexture::Fill(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Containers::Vector&lt;PointLight&gt;&amp;<sp/>lights)<sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/>U32<sp/>idx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>U32<sp/>rowWidth<sp/>=<sp/>m_numLights<sp/>*<sp/>4;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>light<sp/>:<sp/>lights)<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>m_buffer[idx<sp/>+<sp/>0]<sp/>=<sp/>light.m_position[0];</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>m_buffer[idx<sp/>+<sp/>1]<sp/>=<sp/>light.m_position[1];</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>m_buffer[idx<sp/>+<sp/>2]<sp/>=<sp/>light.m_position[2];</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>m_buffer[idx<sp/>+<sp/>3]<sp/>=<sp/>light.m_radius;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>m_buffer[rowWidth<sp/>+<sp/>idx<sp/>+<sp/>0]<sp/>=<sp/>light.m_color[0];</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>m_buffer[rowWidth<sp/>+<sp/>idx<sp/>+<sp/>1]<sp/>=<sp/>light.m_color[1];</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>m_buffer[rowWidth<sp/>+<sp/>idx<sp/>+<sp/>2]<sp/>=<sp/>light.m_color[2];</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>m_buffer[rowWidth<sp/>+<sp/>idx<sp/>+<sp/>3]<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>idx<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>U8*<sp/>LightTexture::GetBuffer()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">U8*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(m_buffer.<ref refid="class_azura_1_1_containers_1_1_vector_1a6e3fd44d2821bb97f170b6e5443ec57e" kindref="member">Data</ref>());<sp/></highlight><highlight class="comment">//<sp/>NOLINT(cppcoreguidelines-pro-type-reinterpret-cast)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">U32<sp/>LightTexture::GetSize()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_buffer.GetMaxSize()<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(float);</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal">TextureDesc<sp/>LightTexture::GetTextureDesc()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>TextureDesc<sp/>desc<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>desc.m_format<sp/>=<sp/>RawStorageFormat::R32G32B32A32_FLOAT;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>desc.m_arrayLayers<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>desc.m_mipLevels<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>desc.m_bounds.m_width<sp/>=<sp/>m_numLights;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>desc.m_bounds.m_height<sp/>=<sp/>m_pixelsPerLight;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>desc.m_bounds.m_depth<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>desc.m_type<sp/>=<sp/>ImageType::Image2D;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>desc.m_size<sp/>=<sp/>GetSize();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>desc;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Azura</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="Source/Samples/2_DeferredRenderer/Src/LightTexture.cpp"/>
  </compounddef>
</doxygen>
