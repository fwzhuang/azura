<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="_vk_scoped_image_8cpp" kind="file" language="C++">
    <compoundname>VkScopedImage.cpp</compoundname>
    <includes local="no">utility</includes>
    <includes refid="_vk_scoped_image_8h" local="yes">Vulkan/VkScopedImage.h</includes>
    <includes refid="_vk_type_mapping_8h" local="yes">Vulkan/VkTypeMapping.h</includes>
    <includes refid="_vk_texture_manager_8h" local="yes">Vulkan/VkTextureManager.h</includes>
    <includes refid="_vk_core_8h" local="yes">Vulkan/VkCore.h</includes>
    <includes refid="_vk_macros_8h" local="yes">Vulkan/VkMacros.h</includes>
    <includes refid="_memory_factory_8h" local="yes">Memory/MemoryFactory.h</includes>
    <incdepgraph>
      <node id="3232">
        <label>functional</label>
      </node>
      <node id="3237">
        <label>iterator</label>
      </node>
      <node id="3247">
        <label>Utils/Hash.h</label>
        <link refid="_hash_8h_source"/>
        <childnode refid="3224" relation="include">
        </childnode>
      </node>
      <node id="3262">
        <label>Memory/MemoryFactory.h</label>
        <link refid="_memory_factory_8h_source"/>
        <childnode refid="3263" relation="include">
        </childnode>
        <childnode refid="3228" relation="include">
        </childnode>
        <childnode refid="3224" relation="include">
        </childnode>
      </node>
      <node id="3253">
        <label>Generic/Renderer.h</label>
        <link refid="_renderer_8h_source"/>
        <childnode refid="3240" relation="include">
        </childnode>
        <childnode refid="3234" relation="include">
        </childnode>
        <childnode refid="3254" relation="include">
        </childnode>
        <childnode refid="3239" relation="include">
        </childnode>
        <childnode refid="3242" relation="include">
        </childnode>
        <childnode refid="3255" relation="include">
        </childnode>
      </node>
      <node id="3242">
        <label>Core/RawStorageFormat.h</label>
        <link refid="_raw_storage_format_8h_source"/>
        <childnode refid="3224" relation="include">
        </childnode>
        <childnode refid="3241" relation="include">
        </childnode>
        <childnode refid="3243" relation="include">
        </childnode>
        <childnode refid="3244" relation="include">
        </childnode>
        <childnode refid="3245" relation="include">
        </childnode>
        <childnode refid="3246" relation="include">
        </childnode>
      </node>
      <node id="3222">
        <label>Vulkan/VkScopedImage.h</label>
        <link refid="_vk_scoped_image_8h_source"/>
        <childnode refid="3223" relation="include">
        </childnode>
        <childnode refid="3224" relation="include">
        </childnode>
        <childnode refid="3225" relation="include">
        </childnode>
        <childnode refid="3227" relation="include">
        </childnode>
      </node>
      <node id="3229">
        <label>MemoryBuffer.h</label>
        <link refid="_memory_buffer_8h_source"/>
        <childnode refid="3224" relation="include">
        </childnode>
      </node>
      <node id="3231">
        <label>Allocator.h</label>
        <link refid="_allocator_8h_source"/>
        <childnode refid="3232" relation="include">
        </childnode>
        <childnode refid="3224" relation="include">
        </childnode>
        <childnode refid="3233" relation="include">
        </childnode>
      </node>
      <node id="3248">
        <label>Core/AssetLocation.h</label>
        <link refid="_asset_location_8h_source"/>
      </node>
      <node id="3235">
        <label>cassert</label>
      </node>
      <node id="3245">
        <label>boost/preprocessor/tuple/elem.hpp</label>
      </node>
      <node id="3260">
        <label>stdexcept</label>
      </node>
      <node id="3239">
        <label>GenericTypes.h</label>
        <link refid="_azura_2_render_system_2_inc_2_generic_2_generic_types_8h_source"/>
        <childnode refid="3234" relation="include">
        </childnode>
        <childnode refid="3240" relation="include">
        </childnode>
        <childnode refid="3224" relation="include">
        </childnode>
        <childnode refid="3242" relation="include">
        </childnode>
        <childnode refid="3247" relation="include">
        </childnode>
        <childnode refid="3248" relation="include">
        </childnode>
        <childnode refid="3249" relation="include">
        </childnode>
        <childnode refid="3246" relation="include">
        </childnode>
      </node>
      <node id="3228">
        <label>Memory/HeapMemoryBuffer.h</label>
        <link refid="_heap_memory_buffer_8h_source"/>
        <childnode refid="3229" relation="include">
        </childnode>
        <childnode refid="3224" relation="include">
        </childnode>
      </node>
      <node id="3252">
        <label>Vulkan/VkTextureManager.h</label>
        <link refid="_vk_texture_manager_8h_source"/>
        <childnode refid="3227" relation="include">
        </childnode>
        <childnode refid="3223" relation="include">
        </childnode>
        <childnode refid="3253" relation="include">
        </childnode>
      </node>
      <node id="3263">
        <label>Memory/StackMemoryBuffer.h</label>
        <link refid="_stack_memory_buffer_8h_source"/>
        <childnode refid="3235" relation="include">
        </childnode>
        <childnode refid="3229" relation="include">
        </childnode>
        <childnode refid="3224" relation="include">
        </childnode>
        <childnode refid="3233" relation="include">
        </childnode>
      </node>
      <node id="3233">
        <label>Utils/Macros.h</label>
        <link refid="_macros_8h_source"/>
      </node>
      <node id="3249">
        <label>boost/container/small_vector.hpp</label>
      </node>
      <node id="3240">
        <label>Generic/Constants.h</label>
        <link refid="_azura_2_render_system_2_inc_2_generic_2_constants_8h_source"/>
        <childnode refid="3241" relation="include">
        </childnode>
        <childnode refid="3224" relation="include">
        </childnode>
      </node>
      <node id="3246">
        <label>boost/detail/bitmask.hpp</label>
      </node>
      <node id="3241">
        <label>tuple</label>
      </node>
      <node id="3238">
        <label>Array.h</label>
        <link refid="_array_8h_source"/>
        <childnode refid="3235" relation="include">
        </childnode>
        <childnode refid="3236" relation="include">
        </childnode>
        <childnode refid="3231" relation="include">
        </childnode>
        <childnode refid="3224" relation="include">
        </childnode>
      </node>
      <node id="3251">
        <label>optional</label>
      </node>
      <node id="3230">
        <label>Memory/MonotonicAllocator.h</label>
        <link refid="_monotonic_allocator_8h_source"/>
        <childnode refid="3231" relation="include">
        </childnode>
        <childnode refid="3224" relation="include">
        </childnode>
      </node>
      <node id="3226">
        <label>vector</label>
      </node>
      <node id="3234">
        <label>Containers/Vector.h</label>
        <link refid="_vector_8h_source"/>
        <childnode refid="3235" relation="include">
        </childnode>
        <childnode refid="3236" relation="include">
        </childnode>
        <childnode refid="3232" relation="include">
        </childnode>
        <childnode refid="3237" relation="include">
        </childnode>
        <childnode refid="3238" relation="include">
        </childnode>
        <childnode refid="3231" relation="include">
        </childnode>
        <childnode refid="3224" relation="include">
        </childnode>
        <childnode refid="3233" relation="include">
        </childnode>
      </node>
      <node id="3225">
        <label>Log/Log.h</label>
        <link refid="_log_8h_source"/>
        <childnode refid="3224" relation="include">
        </childnode>
        <childnode refid="3226" relation="include">
        </childnode>
      </node>
      <node id="3221">
        <label>utility</label>
      </node>
      <node id="3258">
        <label>array</label>
      </node>
      <node id="3254">
        <label>Drawable.h</label>
        <link refid="_drawable_8h_source"/>
        <childnode refid="3234" relation="include">
        </childnode>
        <childnode refid="3239" relation="include">
        </childnode>
        <childnode refid="3224" relation="include">
        </childnode>
        <childnode refid="3242" relation="include">
        </childnode>
      </node>
      <node id="3256">
        <label>Vulkan/VkCore.h</label>
        <link refid="_vk_core_8h_source"/>
        <childnode refid="3223" relation="include">
        </childnode>
        <childnode refid="3234" relation="include">
        </childnode>
        <childnode refid="3253" relation="include">
        </childnode>
        <childnode refid="3224" relation="include">
        </childnode>
        <childnode refid="3257" relation="include">
        </childnode>
        <childnode refid="3225" relation="include">
        </childnode>
      </node>
      <node id="3261">
        <label>VkDebug.h</label>
        <link refid="_vk_debug_8h_source"/>
        <childnode refid="3223" relation="include">
        </childnode>
      </node>
      <node id="3223">
        <label>vulkan/vulkan_core.h</label>
      </node>
      <node id="3243">
        <label>boost/preprocessor/repetition/repeat.hpp</label>
      </node>
      <node id="3224">
        <label>Types.h</label>
      </node>
      <node id="3220">
        <label>Source/Azura/RenderSystem/Src/Vulkan/VkScopedImage.cpp</label>
        <link refid="_vk_scoped_image_8cpp"/>
        <childnode refid="3221" relation="include">
        </childnode>
        <childnode refid="3222" relation="include">
        </childnode>
        <childnode refid="3250" relation="include">
        </childnode>
        <childnode refid="3252" relation="include">
        </childnode>
        <childnode refid="3256" relation="include">
        </childnode>
        <childnode refid="3259" relation="include">
        </childnode>
        <childnode refid="3262" relation="include">
        </childnode>
      </node>
      <node id="3259">
        <label>Vulkan/VkMacros.h</label>
        <link refid="_vk_macros_8h_source"/>
        <childnode refid="3223" relation="include">
        </childnode>
        <childnode refid="3260" relation="include">
        </childnode>
        <childnode refid="3261" relation="include">
        </childnode>
        <childnode refid="3225" relation="include">
        </childnode>
      </node>
      <node id="3255">
        <label>ComputePool.h</label>
        <link refid="_compute_pool_8h_source"/>
        <childnode refid="3234" relation="include">
        </childnode>
        <childnode refid="3239" relation="include">
        </childnode>
        <childnode refid="3224" relation="include">
        </childnode>
      </node>
      <node id="3250">
        <label>Vulkan/VkTypeMapping.h</label>
        <link refid="_vk_type_mapping_8h_source"/>
        <childnode refid="3223" relation="include">
        </childnode>
        <childnode refid="3251" relation="include">
        </childnode>
        <childnode refid="3239" relation="include">
        </childnode>
        <childnode refid="3242" relation="include">
        </childnode>
      </node>
      <node id="3227">
        <label>Generic/TextureManager.h</label>
        <link refid="_texture_manager_8h_source"/>
        <childnode refid="3224" relation="include">
        </childnode>
        <childnode refid="3228" relation="include">
        </childnode>
        <childnode refid="3230" relation="include">
        </childnode>
        <childnode refid="3234" relation="include">
        </childnode>
        <childnode refid="3239" relation="include">
        </childnode>
        <childnode refid="3225" relation="include">
        </childnode>
      </node>
      <node id="3236">
        <label>cstring</label>
      </node>
      <node id="3244">
        <label>boost/preprocessor/seq/for_each.hpp</label>
      </node>
      <node id="3257">
        <label>VkTypes.h</label>
        <link refid="_vk_types_8h_source"/>
        <childnode refid="3223" relation="include">
        </childnode>
        <childnode refid="3258" relation="include">
        </childnode>
        <childnode refid="3226" relation="include">
        </childnode>
        <childnode refid="3234" relation="include">
        </childnode>
        <childnode refid="3224" relation="include">
        </childnode>
        <childnode refid="3222" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_azura">Azura</innernamespace>
    <innernamespace refid="namespace_azura_1_1_vulkan">Azura::Vulkan</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Vulkan/VkScopedImage.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Vulkan/VkTypeMapping.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Vulkan/VkTextureManager.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Vulkan/VkCore.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Vulkan/VkMacros.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Memory/MemoryFactory.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_azura" kindref="compound">Azura</ref><sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Vulkan<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal">VkScopedImage::VkScopedImage(VkDevice<sp/>device,</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TextureDesc&amp;<sp/>textureDesc,</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VkImageUsageFlags<sp/>usage,</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VkPhysicalDeviceMemoryProperties&amp;<sp/>physicalDeviceMemoryProperties,</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Log<sp/>logger)</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>:<sp/>m_device(device),</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>m_desc(textureDesc),</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>log_VulkanRenderSystem(std::move(logger))<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>Create(m_device,<sp/>textureDesc,<sp/>usage,<sp/>physicalDeviceMemoryProperties);</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal">VkScopedImage::VkScopedImage(VkDevice<sp/>device,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TextureDesc&amp;<sp/>textureDesc,<sp/>VkImage<sp/>image,<sp/>Log<sp/>logger)<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>:<sp/>m_device(device),</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>m_image(image),</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>m_desc(textureDesc),</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>log_VulkanRenderSystem(std::move(logger))<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal">VkScopedImage::VkScopedImage(Log<sp/>logger)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>:<sp/>m_device(),</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>log_VulkanRenderSystem(std::move(logger))<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VkScopedImage::Create(VkDevice<sp/>device,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TextureDesc&amp;<sp/>textureDesc,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VkImageUsageFlags<sp/>usage,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VkPhysicalDeviceMemoryProperties&amp;<sp/>physicalDeviceMemoryProperties)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>m_device<sp/>=<sp/>device;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>m_desc<sp/>=<sp/>textureDesc;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>m_image<sp/>=<sp/>VkCore::CreateImage(device,<sp/>textureDesc.m_format,<sp/>textureDesc.m_type,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{textureDesc.m_bounds.m_width,<sp/>textureDesc.m_bounds.m_height},</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>textureDesc.m_bounds.m_depth,<sp/>textureDesc.m_arrayLayers,<sp/>textureDesc.m_mipLevels,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VK_IMAGE_TILING_OPTIMAL,<sp/>usage,<sp/>log_VulkanRenderSystem);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>VkMemoryRequirements<sp/>memRequirements;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>vkGetImageMemoryRequirements(m_device,<sp/>m_image,<sp/>&amp;memRequirements);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>VkMemoryAllocateInfo<sp/>allocInfo<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>allocInfo.sType<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>allocInfo.allocationSize<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>memRequirements.size;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>allocInfo.memoryTypeIndex<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>VkCore::FindMemoryType(memRequirements.memoryTypeBits,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>physicalDeviceMemoryProperties);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>VERIFY_VK_OP(log_VulkanRenderSystem,<sp/>vkAllocateMemory(m_device,<sp/>&amp;allocInfo,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;m_memory),</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>allocate<sp/>memory<sp/>for<sp/>image<sp/>texture&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>vkBindImageMemory(m_device,<sp/>m_image,<sp/>m_memory,<sp/>0);</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal">VkImage<sp/>VkScopedImage::Real()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_image;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">VkImageView<sp/>VkScopedImage::View()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_imageView;</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal">VkDeviceMemory<sp/>VkScopedImage::Memory()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_memory;</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal">VkFormat<sp/>VkScopedImage::GetRealFormat()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>vkFormat<sp/>=<sp/>ToVkFormat(GetFormat());</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>VERIFY_OPT(log_VulkanRenderSystem,<sp/>vkFormat,<sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>VkFormat&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vkFormat.value();</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal">RawStorageFormat<sp/>VkScopedImage::GetFormat()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_desc.m_format;</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VkScopedImage::CleanUp()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>vkDestroyImage(m_device,<sp/>m_image,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>vkFreeMemory(m_device,<sp/>m_memory,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>vkDestroyImageView(m_device,<sp/>m_imageView,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VkScopedImage::TransitionLayout(VkCommandBuffer<sp/>commandBuffer,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImageTransition<sp/>oldTransition,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImageTransition<sp/>newTransition)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>flagBits<sp/>=<sp/>int(VK_IMAGE_ASPECT_COLOR_BIT);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HasDepthComponent(m_desc.m_format))</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>flagBits<sp/>=<sp/>int(VK_IMAGE_ASPECT_DEPTH_BIT);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HasStencilComponent(m_desc.m_format))</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>flagBits<sp/>=<sp/>flagBits<sp/>|<sp/>VK_IMAGE_ASPECT_STENCIL_BIT;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VkImageSubresourceRange<sp/>resourceRange<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>VkImageAspectFlags(flagBits),<sp/>0,<sp/>m_desc.m_mipLevels,<sp/>0,<sp/>m_desc.m_arrayLayers</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>VkCore::TransitionImageLayout(commandBuffer,<sp/>m_image,<sp/>oldTransition.m_accessMask,<sp/>newTransition.m_accessMask,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oldTransition.m_layout,<sp/>newTransition.m_layout,<sp/>oldTransition.m_stageMask,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newTransition.m_stageMask,<sp/>resourceRange);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VkScopedImage::CopyFromBuffer(VkCommandBuffer<sp/>commandBuffer,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TextureBufferInfo&amp;<sp/>bufferInfo,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VkBuffer<sp/>buffer)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>flagBits<sp/>=<sp/>int(VK_IMAGE_ASPECT_COLOR_BIT);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HasDepthComponent(m_desc.m_format))</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>flagBits<sp/>=<sp/>int(VK_IMAGE_ASPECT_DEPTH_BIT);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HasStencilComponent(m_desc.m_format))</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>flagBits<sp/>=<sp/>flagBits<sp/>|<sp/>VK_IMAGE_ASPECT_STENCIL_BIT;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>U32<sp/>currentWidth<sp/><sp/>=<sp/>m_desc.m_bounds.m_width;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>U32<sp/>currentHeight<sp/>=<sp/>m_desc.m_bounds.m_height;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>U32<sp/>currentDepth<sp/><sp/>=<sp/>m_desc.m_bounds.m_depth;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>VkBufferImageCopy<sp/>region<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>region.bufferOffset<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>bufferInfo.m_offset;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>region.bufferRowLength<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>region.bufferImageHeight<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>region.imageSubresource.aspectMask<sp/><sp/><sp/><sp/><sp/>=<sp/>flagBits;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>region.imageSubresource.mipLevel<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>region.imageSubresource.baseArrayLayer<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>region.imageSubresource.layerCount<sp/><sp/><sp/><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>region.imageOffset<sp/>=<sp/>{0,<sp/>0,<sp/>0};</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>region.imageExtent<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>currentWidth,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>currentHeight,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>currentDepth</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>vkCmdCopyBufferToImage(</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commandBuffer,</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_image,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;region);</highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VkScopedImage::CreateImageView(ImageViewType<sp/>imageView)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>vkImageView<sp/>=<sp/>ToVkImageViewType(imageView);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>VERIFY_OPT(log_VulkanRenderSystem,<sp/>vkImageView,<sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>VkImageViewType&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>vkFormat<sp/>=<sp/>ToVkFormat(m_desc.m_format);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>VERIFY_OPT(log_VulkanRenderSystem,<sp/>vkFormat,<sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>VkFormat&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>flagBits<sp/>=<sp/>int(VK_IMAGE_ASPECT_COLOR_BIT);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HasDepthComponent(m_desc.m_format))</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>flagBits<sp/>=<sp/>int(VK_IMAGE_ASPECT_DEPTH_BIT);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HasStencilComponent(m_desc.m_format))</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>flagBits<sp/>=<sp/>flagBits<sp/>|<sp/>VK_IMAGE_ASPECT_STENCIL_BIT;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>VkImageViewCreateInfo<sp/>viewInfo<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>viewInfo.sType<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>viewInfo.image<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>m_image;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>viewInfo.viewType<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>vkImageView.value();</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>viewInfo.format<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>vkFormat.value();</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>viewInfo.subresourceRange.aspectMask<sp/><sp/><sp/><sp/><sp/>=<sp/>flagBits;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>viewInfo.subresourceRange.baseMipLevel<sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>viewInfo.subresourceRange.levelCount<sp/><sp/><sp/><sp/><sp/>=<sp/>m_desc.m_mipLevels;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>viewInfo.subresourceRange.baseArrayLayer<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>viewInfo.subresourceRange.layerCount<sp/><sp/><sp/><sp/><sp/>=<sp/>m_desc.m_arrayLayers;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>VERIFY_VK_OP(log_VulkanRenderSystem,<sp/>vkCreateImageView(m_device,<sp/>&amp;viewInfo,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;m_imageView),</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>texture<sp/>image<sp/>view&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="196"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Vulkan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Azura</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="Source/Azura/RenderSystem/Src/Vulkan/VkScopedImage.cpp"/>
  </compounddef>
</doxygen>
