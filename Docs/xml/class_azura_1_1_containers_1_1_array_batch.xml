<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="class_azura_1_1_containers_1_1_array_batch" kind="class" language="C++" prot="public">
    <compoundname>Azura::Containers::ArrayBatch</compoundname>
    <templateparamlist>
      <param>
        <type>U32</type>
        <declname>NumElements</declname>
        <defname>NumElements</defname>
      </param>
      <param>
        <type>typename...</type>
        <declname>BatchProperties</declname>
        <defname>BatchProperties</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_azura_1_1_containers_1_1_array_batch_1a8330c47464e490fe7d5d1b4f544773c0" prot="private" static="no">
        <templateparamlist>
          <param>
            <type>U32</type>
            <declname>Index</declname>
            <defname>Index</defname>
          </param>
        </templateparamlist>
        <type>typename <ref refid="struct_azura_1_1_containers_1_1_impl_1_1_get" kindref="compound">Impl::Get</ref>&lt; Index, BatchProperties... &gt;::Type</type>
        <definition>using Azura::Containers::ArrayBatch&lt; NumElements, BatchProperties &gt;::Type =  typename Impl::Get&lt;Index, BatchProperties...&gt;::Type</definition>
        <argsstring></argsstring>
        <name>Type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/ArrayBatch.h" line="33" column="1" bodyfile="Source/Containers/Inc/Containers/ArrayBatch.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_azura_1_1_containers_1_1_array_batch_1a8d9ec867aa69682745bb5260de82a443" prot="private" static="no" mutable="no">
        <type>std::tuple&lt; <ref refid="class_azura_1_1_containers_1_1_array" kindref="compound">Array</ref>&lt; BatchProperties, NumElements &gt;... &gt;</type>
        <definition>std::tuple&lt;Array&lt;BatchProperties, NumElements&gt;...&gt; Azura::Containers::ArrayBatch&lt; NumElements, BatchProperties &gt;::mData</definition>
        <argsstring></argsstring>
        <name>mData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/ArrayBatch.h" line="45" column="1" bodyfile="Source/Containers/Inc/Containers/ArrayBatch.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_azura_1_1_containers_1_1_array_batch_1a1ac5748313e25c5dde239a245be7a441" prot="private" static="no" mutable="no">
        <type>SizeType</type>
        <definition>SizeType Azura::Containers::ArrayBatch&lt; NumElements, BatchProperties &gt;::mElements</definition>
        <argsstring></argsstring>
        <name>mElements</name>
        <initializer>{NumElements}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/ArrayBatch.h" line="46" column="1" bodyfile="Source/Containers/Inc/Containers/ArrayBatch.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_array_batch_1a313e4ceae31eed79d60f675d7efa9324" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>Azura::Containers::ArrayBatch&lt; NumElements, BatchProperties &gt;::ArrayBatch</definition>
        <argsstring>(Memory::Allocator &amp;alloc)</argsstring>
        <name>ArrayBatch</name>
        <param>
          <type><ref refid="class_azura_1_1_memory_1_1_allocator" kindref="compound">Memory::Allocator</ref> &amp;</type>
          <declname>alloc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/ArrayBatch.h" line="36" column="1" bodyfile="Source/Containers/Inc/Containers/ArrayBatch.h" bodystart="50" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_array_batch_1a74c2b1615af2a23603fb1558181c1cfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>U32</type>
            <declname>Index</declname>
            <defname>Index</defname>
          </param>
        </templateparamlist>
        <type><ref refid="class_azura_1_1_containers_1_1_array" kindref="compound">Array</ref>&lt; Type&lt; Index &gt;, NumElements &gt; &amp;</type>
        <definition>Array&lt;Type&lt;Index&gt;, NumElements&gt;&amp; Azura::Containers::ArrayBatch&lt; NumElements, BatchProperties &gt;::Get</definition>
        <argsstring>()</argsstring>
        <name>Get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/ArrayBatch.h" line="39" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_array_batch_1a99cdc35ab94a3db843771a7db65126c9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>U32</type>
            <declname>Index</declname>
            <defname>Index</defname>
          </param>
        </templateparamlist>
        <type>const <ref refid="class_azura_1_1_containers_1_1_array" kindref="compound">Array</ref>&lt; Type&lt; Index &gt;, NumElements &gt; &amp;</type>
        <definition>const Array&lt;Type&lt;Index&gt;, NumElements&gt;&amp; Azura::Containers::ArrayBatch&lt; NumElements, BatchProperties &gt;::Get</definition>
        <argsstring>() const</argsstring>
        <name>Get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/ArrayBatch.h" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_array_batch_1a72f3ffcdcee4d9db50496b3bbbfd3042" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>U32</type>
            <declname>Index</declname>
            <defname>Index</defname>
          </param>
        </templateparamlist>
        <type><ref refid="class_azura_1_1_containers_1_1_array" kindref="compound">Array</ref>&lt; typename <ref refid="struct_azura_1_1_containers_1_1_impl_1_1_get" kindref="compound">Impl::Get</ref>&lt; Index, BatchProperties... &gt;::Type, NumElements &gt; &amp;</type>
        <definition>Array&lt;typename Impl::Get&lt;Index, BatchProperties...&gt;::Type, NumElements&gt;&amp; Azura::Containers::ArrayBatch&lt; NumElements, BatchProperties &gt;::Get</definition>
        <argsstring>()</argsstring>
        <name>Get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/ArrayBatch.h" line="56" column="1" bodyfile="Source/Containers/Inc/Containers/ArrayBatch.h" bodystart="56" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_array_batch_1ae2401c94bfd82b731f79553982d8bdb1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>U32</type>
            <declname>Index</declname>
            <defname>Index</defname>
          </param>
        </templateparamlist>
        <type>const <ref refid="class_azura_1_1_containers_1_1_array" kindref="compound">Array</ref>&lt; typename <ref refid="struct_azura_1_1_containers_1_1_impl_1_1_get" kindref="compound">Impl::Get</ref>&lt; Index, BatchProperties... &gt;::Type, NumElements &gt; &amp;</type>
        <definition>const Array&lt;typename Impl::Get&lt;Index, BatchProperties...&gt;::Type, NumElements&gt;&amp; Azura::Containers::ArrayBatch&lt; NumElements, BatchProperties &gt;::Get</definition>
        <argsstring>() const</argsstring>
        <name>Get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/ArrayBatch.h" line="63" column="1" bodyfile="Source/Containers/Inc/Containers/ArrayBatch.h" bodystart="63" bodyend="65"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="Source/Containers/Inc/Containers/ArrayBatch.h" line="31" column="1" bodyfile="Source/Containers/Inc/Containers/ArrayBatch.h" bodystart="31" bodyend="47"/>
    <listofallmembers>
      <member refid="class_azura_1_1_containers_1_1_array_batch_1a313e4ceae31eed79d60f675d7efa9324" prot="public" virt="non-virtual"><scope>Azura::Containers::ArrayBatch</scope><name>ArrayBatch</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_batch_1a74c2b1615af2a23603fb1558181c1cfa" prot="public" virt="non-virtual"><scope>Azura::Containers::ArrayBatch</scope><name>Get</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_batch_1a99cdc35ab94a3db843771a7db65126c9" prot="public" virt="non-virtual"><scope>Azura::Containers::ArrayBatch</scope><name>Get</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_batch_1a72f3ffcdcee4d9db50496b3bbbfd3042" prot="public" virt="non-virtual"><scope>Azura::Containers::ArrayBatch</scope><name>Get</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_batch_1ae2401c94bfd82b731f79553982d8bdb1" prot="public" virt="non-virtual"><scope>Azura::Containers::ArrayBatch</scope><name>Get</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_batch_1a8d9ec867aa69682745bb5260de82a443" prot="private" virt="non-virtual"><scope>Azura::Containers::ArrayBatch</scope><name>mData</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_batch_1a1ac5748313e25c5dde239a245be7a441" prot="private" virt="non-virtual"><scope>Azura::Containers::ArrayBatch</scope><name>mElements</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_batch_1a8330c47464e490fe7d5d1b4f544773c0" prot="private" virt="non-virtual"><scope>Azura::Containers::ArrayBatch</scope><name>Type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
