<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="class_azura_1_1_containers_1_1_array" kind="class" language="C++" prot="public">
    <compoundname>Azura::Containers::Array</compoundname>
    <innerclass refid="class_azura_1_1_containers_1_1_array_1_1_iterator" prot="public">Azura::Containers::Array::Iterator</innerclass>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>Type</declname>
        <defname>Type</defname>
      </param>
      <param>
        <type>U32</type>
        <declname>MaxSize</declname>
        <defname>MaxSize</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_azura_1_1_containers_1_1_array_1a693238e93d05f239de801e2df97b8504" prot="private" static="no" mutable="no">
        <type>U32</type>
        <definition>U32 Azura::Containers::Array&lt; Type, MaxSize &gt;::m_size</definition>
        <argsstring></argsstring>
        <name>m_size</name>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Array.h" line="222" column="1" bodyfile="Source/Containers/Inc/Containers/Array.h" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_azura_1_1_containers_1_1_array_1a5669fda0305de6c503dc3a85b28a8bc9" prot="private" static="no" mutable="no">
        <type>U32</type>
        <definition>U32 Azura::Containers::Array&lt; Type, MaxSize &gt;::m_maxSize</definition>
        <argsstring></argsstring>
        <name>m_maxSize</name>
        <initializer>{MaxSize}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Array.h" line="223" column="1" bodyfile="Source/Containers/Inc/Containers/Array.h" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_azura_1_1_containers_1_1_array_1ab943f2529275a86698d57bd3f4e64447" prot="private" static="no" mutable="no">
        <type><ref refid="class_azura_1_1_memory_1_1_allocator" kindref="compound">Memory::Allocator</ref> &amp;</type>
        <definition>Memory::Allocator&amp; Azura::Containers::Array&lt; Type, MaxSize &gt;::m_allocator</definition>
        <argsstring></argsstring>
        <name>m_allocator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Array.h" line="224" column="1" bodyfile="Source/Containers/Inc/Containers/Array.h" bodystart="224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_azura_1_1_containers_1_1_array_1afdc121a53477b84431ad1e6c892cc11a" prot="private" static="no" mutable="no">
        <type>Memory::UniqueArrayPtr&lt; Type &gt;</type>
        <definition>Memory::UniqueArrayPtr&lt;Type&gt; Azura::Containers::Array&lt; Type, MaxSize &gt;::m_base</definition>
        <argsstring></argsstring>
        <name>m_base</name>
        <initializer>{nullptr}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Array.h" line="225" column="1" bodyfile="Source/Containers/Inc/Containers/Array.h" bodystart="225" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_array_1ab2ab8c5a382f700869bbf3ceff0835b6" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>Azura::Containers::Array&lt; Type, MaxSize &gt;::Array</definition>
        <argsstring>(Memory::Allocator &amp;alloc)</argsstring>
        <name>Array</name>
        <param>
          <type><ref refid="class_azura_1_1_memory_1_1_allocator" kindref="compound">Memory::Allocator</ref> &amp;</type>
          <declname>alloc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Array.h" line="17" column="1" bodyfile="Source/Containers/Inc/Containers/Array.h" bodystart="234" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_array_1a66eea2be11ba6fa2377453484fff393c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Azura::Containers::Array&lt; Type, MaxSize &gt;::~Array</definition>
        <argsstring>()</argsstring>
        <name>~Array</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Array.h" line="19" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_array_1a935982492eb9ae02a694158461feab49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Azura::Containers::Array&lt; Type, MaxSize &gt;::Array</definition>
        <argsstring>(const Array &amp;other)</argsstring>
        <name>Array</name>
        <param>
          <type>const <ref refid="class_azura_1_1_containers_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Array.h" line="22" column="1" bodyfile="Source/Containers/Inc/Containers/Array.h" bodystart="243" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_array_1a43bb1e4487f385f0c90461fc0ea448b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Azura::Containers::Array&lt; Type, MaxSize &gt;::Array</definition>
        <argsstring>(Array &amp;&amp;other) noexcept</argsstring>
        <name>Array</name>
        <param>
          <type><ref refid="class_azura_1_1_containers_1_1_array" kindref="compound">Array</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Array.h" line="25" column="1" bodyfile="Source/Containers/Inc/Containers/Array.h" bodystart="253" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_array_1a0b456460eb9794fb1b7715ef06227c42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_azura_1_1_containers_1_1_array" kindref="compound">Array</ref> &amp;</type>
        <definition>Array&lt; Type, MaxSize &gt; &amp; Azura::Containers::Array&lt; Type, MaxSize &gt;::operator=</definition>
        <argsstring>(const Array &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_azura_1_1_containers_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Array.h" line="27" column="1" bodyfile="Source/Containers/Inc/Containers/Array.h" bodystart="262" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_array_1aa51530366e5f8877c361ecb3a6113d38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_azura_1_1_containers_1_1_array" kindref="compound">Array</ref> &amp;</type>
        <definition>Array&lt; Type, MaxSize &gt; &amp; Azura::Containers::Array&lt; Type, MaxSize &gt;::operator=</definition>
        <argsstring>(Array &amp;&amp;other) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="class_azura_1_1_containers_1_1_array" kindref="compound">Array</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Array.h" line="28" column="1" bodyfile="Source/Containers/Inc/Containers/Array.h" bodystart="281" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_array_1a2ba41cb0847f98adc56d52a84935fc1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Azura::Containers::Array&lt; Type, MaxSize &gt;::PushBack</definition>
        <argsstring>(const Type &amp;data)</argsstring>
        <name>PushBack</name>
        <param>
          <type>const Type &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Appends data to the end of the array. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to push </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Array.h" line="34" column="1" bodyfile="Source/Containers/Inc/Containers/Array.h" bodystart="295" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_array_1a09bff62fce6b350e7e09b6c237f65258" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Type</type>
        <definition>Type Azura::Containers::Array&lt; Type, MaxSize &gt;::Pop</definition>
        <argsstring>()</argsstring>
        <name>Pop</name>
        <briefdescription>
<para>Removes the last element in the array array. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Element that was popped </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Array.h" line="40" column="1" bodyfile="Source/Containers/Inc/Containers/Array.h" bodystart="303" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_array_1aedce5aff495e80bebe1ec5cf44e2052e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Azura::Containers::Array&lt; Type, MaxSize &gt;::FindFirst</definition>
        <argsstring>(const Type &amp;data)</argsstring>
        <name>FindFirst</name>
        <param>
          <type>const Type &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Searches for the data in the <ref refid="class_azura_1_1_containers_1_1_array" kindref="compound">Array</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to search for </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Index if Found, else -1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Array.h" line="47" column="1" bodyfile="Source/Containers/Inc/Containers/Array.h" bodystart="313" bodyend="324"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_array_1a62009e8ab3e0a69edcfe3c018e41cab1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Azura::Containers::Array&lt; Type, MaxSize &gt;::Remove</definition>
        <argsstring>(const Type &amp;data)</argsstring>
        <name>Remove</name>
        <param>
          <type>const Type &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Searches for the given data in the array and removes it. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to Search for and Remove </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Array.h" line="53" column="1" bodyfile="Source/Containers/Inc/Containers/Array.h" bodystart="327" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_array_1ac0126bd751769fc11c80b99f6b6a1d39" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Azura::Containers::Array&lt; Type, MaxSize &gt;::IsEmpty</definition>
        <argsstring>() const</argsstring>
        <name>IsEmpty</name>
        <briefdescription>
<para>Checks if the container is empty. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if empty </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Array.h" line="59" column="1" bodyfile="Source/Containers/Inc/Containers/Array.h" bodystart="340" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_array_1a72ac4554c6c84656569ed04ce6d5f94d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Azura::Containers::Array&lt; Type, MaxSize &gt;::InsertAt</definition>
        <argsstring>(U32 idx, const Type &amp;data)</argsstring>
        <name>InsertAt</name>
        <param>
          <type>U32</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>const Type &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Inserts the supplied data at the index. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Target Index </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to insert </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Array.h" line="66" column="1" bodyfile="Source/Containers/Inc/Containers/Array.h" bodystart="345" bodyend="353"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_array_1aa7eedeeb10012bc14f5f213f44097bb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Type &amp;</type>
        <definition>Type &amp; Azura::Containers::Array&lt; Type, MaxSize &gt;::operator[]</definition>
        <argsstring>(U32 idx)</argsstring>
        <name>operator[]</name>
        <param>
          <type>U32</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Array.h" line="68" column="1" bodyfile="Source/Containers/Inc/Containers/Array.h" bodystart="356" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_array_1a96a8d69c15ab92dbaaadb406adf61d99" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Type &amp;</type>
        <definition>Type &amp; Azura::Containers::Array&lt; Type, MaxSize &gt;::operator[]</definition>
        <argsstring>(U32 idx) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>U32</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Array.h" line="69" column="1" bodyfile="Source/Containers/Inc/Containers/Array.h" bodystart="362" bodyend="365"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_array_1a27e609174c9a9563f6f186d723e1ee65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Type *</type>
        <definition>Type * Azura::Containers::Array&lt; Type, MaxSize &gt;::Data</definition>
        <argsstring>()</argsstring>
        <name>Data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Array.h" line="70" column="1" bodyfile="Source/Containers/Inc/Containers/Array.h" bodystart="368" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_array_1acde5c7767d4e50b48721a3f595004529" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>U32</type>
        <definition>U32 Azura::Containers::Array&lt; Type, MaxSize &gt;::GetSize</definition>
        <argsstring>() const</argsstring>
        <name>GetSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Array.h" line="72" column="1" bodyfile="Source/Containers/Inc/Containers/Array.h" bodystart="72" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_array_1a633323a95b06d9f80f431b51a0875213" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>U32</type>
        <definition>U32 Azura::Containers::Array&lt; Type, MaxSize &gt;::GetMaxSize</definition>
        <argsstring>() const</argsstring>
        <name>GetMaxSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Array.h" line="75" column="1" bodyfile="Source/Containers/Inc/Containers/Array.h" bodystart="75" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_array_1a8999510e1a643c608c1805c28e01186e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_azura_1_1_containers_1_1_array_1_1_iterator" kindref="compound">Iterator</ref></type>
        <definition>Array&lt; Type, MaxSize &gt;::Iterator Azura::Containers::Array&lt; Type, MaxSize &gt;::Begin</definition>
        <argsstring>() const</argsstring>
        <name>Begin</name>
        <briefdescription>
<para>Returns an <ref refid="class_azura_1_1_containers_1_1_array_1_1_iterator" kindref="compound">Iterator</ref> pointing to the beginning of the array. This is similar to begin() of a std::array. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="class_azura_1_1_containers_1_1_array_1_1_iterator" kindref="compound">Iterator</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Array.h" line="204" column="1" bodyfile="Source/Containers/Inc/Containers/Array.h" bodystart="373" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_array_1a72784503a762fe27bf765863e9881a23" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_azura_1_1_containers_1_1_array_1_1_iterator" kindref="compound">Iterator</ref></type>
        <definition>Array&lt; Type, MaxSize &gt;::Iterator Azura::Containers::Array&lt; Type, MaxSize &gt;::End</definition>
        <argsstring>() const</argsstring>
        <name>End</name>
        <briefdescription>
<para>Returns an <ref refid="class_azura_1_1_containers_1_1_array_1_1_iterator" kindref="compound">Iterator</ref> pointing to the end of the array. This is similar to end() of a std::array. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="class_azura_1_1_containers_1_1_array_1_1_iterator" kindref="compound">Iterator</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Array.h" line="210" column="1" bodyfile="Source/Containers/Inc/Containers/Array.h" bodystart="378" bodyend="380"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="Source/Containers/Inc/Containers/Array.h" line="13" column="1" bodyfile="Source/Containers/Inc/Containers/Array.h" bodystart="13" bodyend="226"/>
    <listofallmembers>
      <member refid="class_azura_1_1_containers_1_1_array_1ab2ab8c5a382f700869bbf3ceff0835b6" prot="public" virt="non-virtual"><scope>Azura::Containers::Array</scope><name>Array</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_1a935982492eb9ae02a694158461feab49" prot="public" virt="non-virtual"><scope>Azura::Containers::Array</scope><name>Array</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_1a43bb1e4487f385f0c90461fc0ea448b0" prot="public" virt="non-virtual"><scope>Azura::Containers::Array</scope><name>Array</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_1a8999510e1a643c608c1805c28e01186e" prot="public" virt="non-virtual"><scope>Azura::Containers::Array</scope><name>Begin</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_1a27e609174c9a9563f6f186d723e1ee65" prot="public" virt="non-virtual"><scope>Azura::Containers::Array</scope><name>Data</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_1a72784503a762fe27bf765863e9881a23" prot="public" virt="non-virtual"><scope>Azura::Containers::Array</scope><name>End</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_1aedce5aff495e80bebe1ec5cf44e2052e" prot="public" virt="non-virtual"><scope>Azura::Containers::Array</scope><name>FindFirst</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_1a633323a95b06d9f80f431b51a0875213" prot="public" virt="non-virtual"><scope>Azura::Containers::Array</scope><name>GetMaxSize</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_1acde5c7767d4e50b48721a3f595004529" prot="public" virt="non-virtual"><scope>Azura::Containers::Array</scope><name>GetSize</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_1a72ac4554c6c84656569ed04ce6d5f94d" prot="public" virt="non-virtual"><scope>Azura::Containers::Array</scope><name>InsertAt</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_1ac0126bd751769fc11c80b99f6b6a1d39" prot="public" virt="non-virtual"><scope>Azura::Containers::Array</scope><name>IsEmpty</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_1ab943f2529275a86698d57bd3f4e64447" prot="private" virt="non-virtual"><scope>Azura::Containers::Array</scope><name>m_allocator</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_1afdc121a53477b84431ad1e6c892cc11a" prot="private" virt="non-virtual"><scope>Azura::Containers::Array</scope><name>m_base</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_1a5669fda0305de6c503dc3a85b28a8bc9" prot="private" virt="non-virtual"><scope>Azura::Containers::Array</scope><name>m_maxSize</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_1a693238e93d05f239de801e2df97b8504" prot="private" virt="non-virtual"><scope>Azura::Containers::Array</scope><name>m_size</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_1a0b456460eb9794fb1b7715ef06227c42" prot="public" virt="non-virtual"><scope>Azura::Containers::Array</scope><name>operator=</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_1aa51530366e5f8877c361ecb3a6113d38" prot="public" virt="non-virtual"><scope>Azura::Containers::Array</scope><name>operator=</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_1aa7eedeeb10012bc14f5f213f44097bb1" prot="public" virt="non-virtual"><scope>Azura::Containers::Array</scope><name>operator[]</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_1a96a8d69c15ab92dbaaadb406adf61d99" prot="public" virt="non-virtual"><scope>Azura::Containers::Array</scope><name>operator[]</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_1a09bff62fce6b350e7e09b6c237f65258" prot="public" virt="non-virtual"><scope>Azura::Containers::Array</scope><name>Pop</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_1a2ba41cb0847f98adc56d52a84935fc1d" prot="public" virt="non-virtual"><scope>Azura::Containers::Array</scope><name>PushBack</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_1a62009e8ab3e0a69edcfe3c018e41cab1" prot="public" virt="non-virtual"><scope>Azura::Containers::Array</scope><name>Remove</name></member>
      <member refid="class_azura_1_1_containers_1_1_array_1a66eea2be11ba6fa2377453484fff393c" prot="public" virt="non-virtual"><scope>Azura::Containers::Array</scope><name>~Array</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
