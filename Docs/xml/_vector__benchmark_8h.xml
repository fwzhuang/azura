<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="_vector__benchmark_8h" kind="file" language="C++">
    <compoundname>Vector_benchmark.h</compoundname>
    <includes local="no">benchmark/benchmark.h</includes>
    <includes refid="_memory_factory_8h" local="yes">Memory/MemoryFactory.h</includes>
    <includes refid="_monotonic_allocator_8h" local="yes">Memory/MonotonicAllocator.h</includes>
    <includedby refid="_vector__benchmark_8cpp" local="yes">Source/Containers/Benchmark/Vector_benchmark.cpp</includedby>
    <incdepgraph>
      <node id="4468">
        <label>functional</label>
      </node>
      <node id="4459">
        <label>Memory/MemoryFactory.h</label>
        <link refid="_memory_factory_8h_source"/>
        <childnode refid="4460" relation="include">
        </childnode>
        <childnode refid="4465" relation="include">
        </childnode>
        <childnode refid="4463" relation="include">
        </childnode>
      </node>
      <node id="4457">
        <label>Source/Containers/Benchmark/Vector_benchmark.h</label>
        <link refid="_vector__benchmark_8h"/>
        <childnode refid="4458" relation="include">
        </childnode>
        <childnode refid="4459" relation="include">
        </childnode>
        <childnode refid="4466" relation="include">
        </childnode>
      </node>
      <node id="4462">
        <label>MemoryBuffer.h</label>
        <link refid="_memory_buffer_8h_source"/>
        <childnode refid="4463" relation="include">
        </childnode>
      </node>
      <node id="4467">
        <label>Allocator.h</label>
        <link refid="_allocator_8h_source"/>
        <childnode refid="4468" relation="include">
        </childnode>
        <childnode refid="4463" relation="include">
        </childnode>
        <childnode refid="4464" relation="include">
        </childnode>
      </node>
      <node id="4461">
        <label>cassert</label>
      </node>
      <node id="4465">
        <label>Memory/HeapMemoryBuffer.h</label>
        <link refid="_heap_memory_buffer_8h_source"/>
        <childnode refid="4462" relation="include">
        </childnode>
        <childnode refid="4463" relation="include">
        </childnode>
      </node>
      <node id="4460">
        <label>Memory/StackMemoryBuffer.h</label>
        <link refid="_stack_memory_buffer_8h_source"/>
        <childnode refid="4461" relation="include">
        </childnode>
        <childnode refid="4462" relation="include">
        </childnode>
        <childnode refid="4463" relation="include">
        </childnode>
        <childnode refid="4464" relation="include">
        </childnode>
      </node>
      <node id="4464">
        <label>Utils/Macros.h</label>
        <link refid="_macros_8h_source"/>
      </node>
      <node id="4458">
        <label>benchmark/benchmark.h</label>
      </node>
      <node id="4466">
        <label>Memory/MonotonicAllocator.h</label>
        <link refid="_monotonic_allocator_8h_source"/>
        <childnode refid="4467" relation="include">
        </childnode>
        <childnode refid="4463" relation="include">
        </childnode>
      </node>
      <node id="4463">
        <label>Types.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_vector_benchmark_fixture" prot="public">VectorBenchmarkFixture</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;benchmark/benchmark.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Memory/MemoryFactory.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Memory/MonotonicAllocator.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_vector_benchmark_fixture" kindref="compound">VectorBenchmarkFixture</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>benchmark::Fixture</highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><ref refid="class_vector_benchmark_fixture" kindref="compound">VectorBenchmarkFixture</ref>()</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>buffer(<ref refid="namespace_azura" kindref="compound">Azura</ref>::Memory::HeapMemoryBuffer(0x8000000)),</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>alloc(<ref refid="namespace_azura" kindref="compound">Azura</ref>::Memory::MonotonicAllocator(buffer,<sp/>0x8000000))<sp/>{}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TearDown(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>benchmark::State&amp;)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="16"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>alloc.<ref refid="class_azura_1_1_memory_1_1_monotonic_allocator_1a5c31a835742876a7e041b6f46df17aa1" kindref="member">Reset</ref>();</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><ref refid="class_azura_1_1_memory_1_1_heap_memory_buffer" kindref="compound">Azura::Memory::HeapMemoryBuffer</ref><sp/>buffer;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><ref refid="class_azura_1_1_memory_1_1_monotonic_allocator" kindref="compound">Azura::Memory::MonotonicAllocator</ref><sp/>alloc;</highlight></codeline>
<codeline lineno="23"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="Source/Containers/Benchmark/Vector_benchmark.h"/>
  </compounddef>
</doxygen>
