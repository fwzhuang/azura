<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="_plane_8h" kind="file" language="C++">
    <compoundname>Plane.h</compoundname>
    <includes refid="_core_8h" local="yes">Math/Core.h</includes>
    <includes refid="_geometry_8h" local="yes">Math/Geometry.h</includes>
    <includes local="no">vector</includes>
    <includedby refid="_plane_8cpp" local="yes">Source/Math/Src/Plane.cpp</includedby>
    <includedby refid="0___test_zone_2_inc_2_test_zone_2_app_renderer_8h" local="yes">Source/Samples/0_TestZone/Inc/TestZone/AppRenderer.h</includedby>
    <includedby refid="_app_renderer_8_cloth_8cpp" local="yes">Source/Samples/0_TestZone/Src/AppRenderer.Cloth.cpp</includedby>
    <includedby refid="0___test_zone_2_src_2_app_renderer_8cpp" local="yes">Source/Samples/0_TestZone/Src/AppRenderer.cpp</includedby>
    <includedby refid="3___cloth_sim_2_src_2_app_renderer_8cpp" local="yes">Source/Samples/3_ClothSim/Src/AppRenderer.cpp</includedby>
    <incdepgraph>
      <node id="5307">
        <label>Math/Core.h</label>
        <link refid="_core_8h_source"/>
        <childnode refid="5308" relation="include">
        </childnode>
        <childnode refid="5309" relation="include">
        </childnode>
      </node>
      <node id="5311">
        <label>Core/RawStorageFormat.h</label>
        <link refid="_raw_storage_format_8h_source"/>
        <childnode refid="5309" relation="include">
        </childnode>
        <childnode refid="5312" relation="include">
        </childnode>
        <childnode refid="5313" relation="include">
        </childnode>
        <childnode refid="5314" relation="include">
        </childnode>
        <childnode refid="5315" relation="include">
        </childnode>
        <childnode refid="5316" relation="include">
        </childnode>
      </node>
      <node id="5315">
        <label>boost/preprocessor/tuple/elem.hpp</label>
      </node>
      <node id="5316">
        <label>boost/detail/bitmask.hpp</label>
      </node>
      <node id="5312">
        <label>tuple</label>
      </node>
      <node id="5317">
        <label>vector</label>
      </node>
      <node id="5310">
        <label>Math/Geometry.h</label>
        <link refid="_geometry_8h_source"/>
        <childnode refid="5309" relation="include">
        </childnode>
        <childnode refid="5311" relation="include">
        </childnode>
      </node>
      <node id="5313">
        <label>boost/preprocessor/repetition/repeat.hpp</label>
      </node>
      <node id="5309">
        <label>Types.h</label>
      </node>
      <node id="5308">
        <label>mathfu/matrix.h</label>
      </node>
      <node id="5306">
        <label>Source/Math/Inc/Math/Plane.h</label>
        <link refid="_plane_8h"/>
        <childnode refid="5307" relation="include">
        </childnode>
        <childnode refid="5310" relation="include">
        </childnode>
        <childnode refid="5317" relation="include">
        </childnode>
      </node>
      <node id="5314">
        <label>boost/preprocessor/seq/for_each.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="5319">
        <label>Source/Samples/0_TestZone/Inc/TestZone/AppRenderer.h</label>
        <link refid="0___test_zone_2_inc_2_test_zone_2_app_renderer_8h_source"/>
      </node>
      <node id="5318">
        <label>Source/Math/Inc/Math/Plane.h</label>
        <link refid="_plane_8h"/>
        <childnode refid="5319" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_azura_1_1_math_1_1_plane" prot="public">Azura::Math::Plane</innerclass>
    <innernamespace refid="namespace_azura">Azura</innernamespace>
    <innernamespace refid="namespace_azura_1_1_math">Azura::Math</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Math/Core.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Math/Geometry.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_azura" kindref="compound">Azura</ref><sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Math<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="class_azura_1_1_math_1_1_plane" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_azura_1_1_math_1_1_plane" kindref="compound">Plane</ref><sp/>final<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_azura_1_1_math_1_1_geometry" kindref="compound">Geometry</ref><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><ref refid="class_azura_1_1_math_1_1_plane" kindref="compound">Plane</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector2f&amp;<sp/>boundMin<sp/>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector2f&amp;<sp/>boundMax);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><ref refid="class_azura_1_1_math_1_1_plane" kindref="compound">Plane</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector2f&amp;<sp/>boundMin<sp/>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector2f&amp;<sp/>boundMax,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector2u&amp;<sp/>subDivisions,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector2u&amp;<sp/>uvScale);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/>U32<sp/>VertexDataSize()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>U32<sp/>IndexDataSize()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>U32<sp/>UVDataSize()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>U8*<sp/>VertexData()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>U8*<sp/>IndexData()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>U8*<sp/>UVData()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>RawStorageFormat<sp/>GetVertexFormat()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>RawStorageFormat<sp/>GetIndexFormat()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>U32<sp/>GetVertexCount()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>U32<sp/>GetIndexCount()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>U32<sp/>TotalDataSize()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Vector4f&gt;&amp;<sp/>GetVertices()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>std::vector&lt;Vector4f&gt;&amp;<sp/>GetVertices();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Vector3f&gt;&amp;<sp/>GetNormals()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>std::vector&lt;Vector3f&gt;&amp;<sp/>GetNormals();</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>U32<sp/>NormalDataSize()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>U8*<sp/>NormalData()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>RawStorageFormat<sp/>GetNormalFormat()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>RawStorageFormat<sp/>GetUVFormat()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>std::vector&lt;Vector4f&gt;<sp/>m_vertices;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>std::vector&lt;Vector2f&gt;<sp/>m_uv;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>std::vector&lt;Vector3f&gt;<sp/>m_normals{};</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>std::vector&lt;Vector3u&gt;<sp/>m_triangles;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">};</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Math</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Azura</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="Source/Math/Inc/Math/Plane.h"/>
  </compounddef>
</doxygen>
