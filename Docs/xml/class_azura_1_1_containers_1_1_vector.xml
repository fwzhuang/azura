<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="class_azura_1_1_containers_1_1_vector" kind="class" language="C++" prot="public">
    <compoundname>Azura::Containers::Vector</compoundname>
    <innerclass refid="class_azura_1_1_containers_1_1_vector_1_1_iterator" prot="public">Azura::Containers::Vector::Iterator</innerclass>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>Type</declname>
        <defname>Type</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_azura_1_1_containers_1_1_vector_1a6faabc30c68ff3ead2705cd513dc116b" prot="private" static="no" mutable="no">
        <type>U32</type>
        <definition>U32 Azura::Containers::Vector&lt; Type &gt;::m_size</definition>
        <argsstring></argsstring>
        <name>m_size</name>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Vector.h" line="296" column="1" bodyfile="Source/Containers/Inc/Containers/Vector.h" bodystart="296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_azura_1_1_containers_1_1_vector_1adfb996e85aa768c6d82678f2c4b1adb2" prot="private" static="no" mutable="no">
        <type>U32</type>
        <definition>U32 Azura::Containers::Vector&lt; Type &gt;::m_maxSize</definition>
        <argsstring></argsstring>
        <name>m_maxSize</name>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Vector.h" line="297" column="1" bodyfile="Source/Containers/Inc/Containers/Vector.h" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_azura_1_1_containers_1_1_vector_1a3da37d3d227c645f49efda73324c3be0" prot="private" static="no" mutable="no">
        <type>std::reference_wrapper&lt; <ref refid="class_azura_1_1_memory_1_1_allocator" kindref="compound">Memory::Allocator</ref> &gt;</type>
        <definition>std::reference_wrapper&lt;Memory::Allocator&gt; Azura::Containers::Vector&lt; Type &gt;::m_allocator</definition>
        <argsstring></argsstring>
        <name>m_allocator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Vector.h" line="298" column="1" bodyfile="Source/Containers/Inc/Containers/Vector.h" bodystart="298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_azura_1_1_containers_1_1_vector_1af9bdce2aa7ada2b8671fba58550bc685" prot="private" static="no" mutable="no">
        <type>Memory::UniqueArrayPtr&lt; Type &gt;</type>
        <definition>Memory::UniqueArrayPtr&lt;Type&gt; Azura::Containers::Vector&lt; Type &gt;::m_base</definition>
        <argsstring></argsstring>
        <name>m_base</name>
        <initializer>{nullptr}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Vector.h" line="299" column="1" bodyfile="Source/Containers/Inc/Containers/Vector.h" bodystart="299" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_vector_1a1501bebfe27b34397ade56d274261d60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Azura::Containers::Vector&lt; Type &gt;::Vector</definition>
        <argsstring>()=default</argsstring>
        <name>Vector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Vector.h" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_vector_1a6f3debb85587cf01eef9bddcb14c58fb" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>Azura::Containers::Vector&lt; Type &gt;::Vector</definition>
        <argsstring>(Memory::Allocator &amp;alloc)</argsstring>
        <name>Vector</name>
        <param>
          <type><ref refid="class_azura_1_1_memory_1_1_allocator" kindref="compound">Memory::Allocator</ref> &amp;</type>
          <declname>alloc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Vector.h" line="36" column="1" bodyfile="Source/Containers/Inc/Containers/Vector.h" bodystart="303" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_vector_1a57b086de3f62679d082a086300138636" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Azura::Containers::Vector&lt; Type &gt;::Vector</definition>
        <argsstring>(UINT maxSize, Memory::Allocator &amp;alloc)</argsstring>
        <name>Vector</name>
        <param>
          <type>UINT</type>
          <declname>maxSize</declname>
        </param>
        <param>
          <type><ref refid="class_azura_1_1_memory_1_1_allocator" kindref="compound">Memory::Allocator</ref> &amp;</type>
          <declname>alloc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Vector.h" line="38" column="1" bodyfile="Source/Containers/Inc/Containers/Vector.h" bodystart="308" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_vector_1af816fc5ac5a9e5060f6c88cb4e8beaa3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Azura::Containers::Vector&lt; Type &gt;::Vector</definition>
        <argsstring>(UINT currentSize, UINT maxSize, Memory::Allocator &amp;alloc)</argsstring>
        <name>Vector</name>
        <param>
          <type>UINT</type>
          <declname>currentSize</declname>
        </param>
        <param>
          <type>UINT</type>
          <declname>maxSize</declname>
        </param>
        <param>
          <type><ref refid="class_azura_1_1_memory_1_1_allocator" kindref="compound">Memory::Allocator</ref> &amp;</type>
          <declname>alloc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Vector.h" line="40" column="1" bodyfile="Source/Containers/Inc/Containers/Vector.h" bodystart="315" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_vector_1a791c8721cacac5dd785a45a98e45d4a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Azura::Containers::Vector&lt; Type &gt;::Vector</definition>
        <argsstring>(const std::initializer_list&lt; Type &gt; &amp;list, Memory::Allocator &amp;alloc)</argsstring>
        <name>Vector</name>
        <param>
          <type>const std::initializer_list&lt; Type &gt; &amp;</type>
          <declname>list</declname>
        </param>
        <param>
          <type><ref refid="class_azura_1_1_memory_1_1_allocator" kindref="compound">Memory::Allocator</ref> &amp;</type>
          <declname>alloc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Vector.h" line="43" column="1" bodyfile="Source/Containers/Inc/Containers/Vector.h" bodystart="324" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_vector_1a11574d6d332a04eccebcc4f0255275b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>Azura::Containers::Vector&lt; Type &gt;::Vector</definition>
        <argsstring>(ContainerExtent extent, Memory::Allocator &amp;alloc, Args &amp;&amp;... args)</argsstring>
        <name>Vector</name>
        <param>
          <type><ref refid="struct_azura_1_1_containers_1_1_container_extent" kindref="compound">ContainerExtent</ref></type>
          <declname>extent</declname>
        </param>
        <param>
          <type><ref refid="class_azura_1_1_memory_1_1_allocator" kindref="compound">Memory::Allocator</ref> &amp;</type>
          <declname>alloc</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Vector.h" line="46" column="1" bodyfile="Source/Containers/Inc/Containers/Vector.h" bodystart="344" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_vector_1a81495c5eec68f60da33123073cdde942" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Azura::Containers::Vector&lt; Type &gt;::~Vector</definition>
        <argsstring>()</argsstring>
        <name>~Vector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Vector.h" line="48" column="1" bodyfile="Source/Containers/Inc/Containers/Vector.h" bodystart="357" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_vector_1a3b25f7177d538d7bb646ceb5fa46f30c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Azura::Containers::Vector&lt; Type &gt;::Vector</definition>
        <argsstring>(const Vector &amp;other)</argsstring>
        <name>Vector</name>
        <param>
          <type>const <ref refid="class_azura_1_1_containers_1_1_vector" kindref="compound">Vector</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Vector.h" line="51" column="1" bodyfile="Source/Containers/Inc/Containers/Vector.h" bodystart="365" bodyend="381"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_vector_1afa47d6fd1b56460466a5b15a1030c439" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Azura::Containers::Vector&lt; Type &gt;::Vector</definition>
        <argsstring>(const Vector &amp;other, Memory::Allocator &amp;alloc)</argsstring>
        <name>Vector</name>
        <param>
          <type>const <ref refid="class_azura_1_1_containers_1_1_vector" kindref="compound">Vector</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="class_azura_1_1_memory_1_1_allocator" kindref="compound">Memory::Allocator</ref> &amp;</type>
          <declname>alloc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Vector.h" line="53" column="1" bodyfile="Source/Containers/Inc/Containers/Vector.h" bodystart="384" bodyend="400"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_vector_1a2552d6447e1aeccdd359a50f9c52d016" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Azura::Containers::Vector&lt; Type &gt;::Vector</definition>
        <argsstring>(Vector &amp;&amp;other) noexcept</argsstring>
        <name>Vector</name>
        <param>
          <type><ref refid="class_azura_1_1_containers_1_1_vector" kindref="compound">Vector</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Vector.h" line="56" column="1" bodyfile="Source/Containers/Inc/Containers/Vector.h" bodystart="403" bodyend="411"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_vector_1adbb949f6f25479775bb3af194ce528d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_azura_1_1_containers_1_1_vector" kindref="compound">Vector</ref> &amp;</type>
        <definition>Vector&lt; Type &gt; &amp; Azura::Containers::Vector&lt; Type &gt;::operator=</definition>
        <argsstring>(const Vector &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_azura_1_1_containers_1_1_vector" kindref="compound">Vector</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Vector.h" line="58" column="1" bodyfile="Source/Containers/Inc/Containers/Vector.h" bodystart="414" bodyend="437"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_vector_1aed6c43d8742cd53f938c87ae91e6532b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_azura_1_1_containers_1_1_vector" kindref="compound">Vector</ref> &amp;</type>
        <definition>Vector&lt; Type &gt; &amp; Azura::Containers::Vector&lt; Type &gt;::operator=</definition>
        <argsstring>(Vector &amp;&amp;other) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="class_azura_1_1_containers_1_1_vector" kindref="compound">Vector</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Vector.h" line="59" column="1" bodyfile="Source/Containers/Inc/Containers/Vector.h" bodystart="440" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_vector_1aadc803b734b7481d9d7f2e9f86891ce4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Azura::Containers::Vector&lt; Type &gt;::PushBack</definition>
        <argsstring>(const Type &amp;data)</argsstring>
        <name>PushBack</name>
        <param>
          <type>const Type &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Appends data to the end of the vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to push </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Vector.h" line="65" column="1" bodyfile="Source/Containers/Inc/Containers/Vector.h" bodystart="500" bodyend="505"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_vector_1af55839be4b5b355ed020a09201713935" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Azura::Containers::Vector&lt; Type &gt;::PushBack</definition>
        <argsstring>(Type &amp;&amp;data)</argsstring>
        <name>PushBack</name>
        <param>
          <type>Type &amp;&amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Appends data to the end of the vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to push </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Vector.h" line="71" column="1" bodyfile="Source/Containers/Inc/Containers/Vector.h" bodystart="508" bodyend="513"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_vector_1aadfac4f55765e41e812160022a9a949f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Azura::Containers::Vector&lt; Type &gt;::EmplaceBack</definition>
        <argsstring>(Args ... args)</argsstring>
        <name>EmplaceBack</name>
        <param>
          <type>Args ...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Appends data to the end of the vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>Arguments for emplacement </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Vector.h" line="78" column="1" bodyfile="Source/Containers/Inc/Containers/Vector.h" bodystart="517" bodyend="522"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_vector_1ad181b9dc858e1ad59fc64b39f795fb75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Azura::Containers::Vector&lt; Type &gt;::PopBack</definition>
        <argsstring>()</argsstring>
        <name>PopBack</name>
        <briefdescription>
<para>Removes the last element in the vector array. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Vector.h" line="83" column="1" bodyfile="Source/Containers/Inc/Containers/Vector.h" bodystart="525" bodyend="531"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_vector_1a5da3557964b80e7c40a574fbbb7e24a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Azura::Containers::Vector&lt; Type &gt;::FindFirst</definition>
        <argsstring>(const Type &amp;data)</argsstring>
        <name>FindFirst</name>
        <param>
          <type>const Type &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Searches for the data in the <ref refid="class_azura_1_1_containers_1_1_vector" kindref="compound">Vector</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to search for </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Index if Found, else -1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Vector.h" line="90" column="1" bodyfile="Source/Containers/Inc/Containers/Vector.h" bodystart="534" bodyend="545"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_vector_1a4d191b0d876f03c44c5a58e6380a07ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Azura::Containers::Vector&lt; Type &gt;::Remove</definition>
        <argsstring>(const Type &amp;data)</argsstring>
        <name>Remove</name>
        <param>
          <type>const Type &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Searches for the given data in the vector and removes it. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to Search for and Remove </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Vector.h" line="96" column="1" bodyfile="Source/Containers/Inc/Containers/Vector.h" bodystart="548" bodyend="558"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_vector_1af9aea7a8da9e449530132e50d85ca221" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Azura::Containers::Vector&lt; Type &gt;::Reserve</definition>
        <argsstring>(U32 maxSize)</argsstring>
        <name>Reserve</name>
        <param>
          <type>U32</type>
          <declname>maxSize</declname>
        </param>
        <briefdescription>
<para>Reserves a max contiguous block for the vector Use only when you didn&apos;t supply a maxSize in the constructor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>maxSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Maxium Possible Size </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Vector.h" line="103" column="1" bodyfile="Source/Containers/Inc/Containers/Vector.h" bodystart="561" bodyend="564"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_vector_1ab527c7c81b62e3cb29d9200ff5dc208a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Azura::Containers::Vector&lt; Type &gt;::Resize</definition>
        <argsstring>(U32 maxSize)</argsstring>
        <name>Resize</name>
        <param>
          <type>U32</type>
          <declname>maxSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Vector.h" line="104" column="1" bodyfile="Source/Containers/Inc/Containers/Vector.h" bodystart="567" bodyend="571"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_vector_1a3f955f930eefbb486ff9880421bbc7a4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Azura::Containers::Vector&lt; Type &gt;::IsEmpty</definition>
        <argsstring>() const</argsstring>
        <name>IsEmpty</name>
        <briefdescription>
<para>Checks if the container is empty. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if empty </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Vector.h" line="110" column="1" bodyfile="Source/Containers/Inc/Containers/Vector.h" bodystart="574" bodyend="576"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_vector_1a9f350f9bbc7f5aaec6318369444d2d99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Azura::Containers::Vector&lt; Type &gt;::InsertAt</definition>
        <argsstring>(U32 idx, const Type &amp;data)</argsstring>
        <name>InsertAt</name>
        <param>
          <type>U32</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>const Type &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Inserts the supplied data at the index. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Target Index </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to insert </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Vector.h" line="117" column="1" bodyfile="Source/Containers/Inc/Containers/Vector.h" bodystart="579" bodyend="587"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_vector_1a6e3fd44d2821bb97f170b6e5443ec57e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Type *</type>
        <definition>Type * Azura::Containers::Vector&lt; Type &gt;::Data</definition>
        <argsstring>()</argsstring>
        <name>Data</name>
        <briefdescription>
<para>Gets the Data pointer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Vector.h" line="122" column="1" bodyfile="Source/Containers/Inc/Containers/Vector.h" bodystart="590" bodyend="592"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_vector_1a512f49e419efb7f312d0a08ddfc675b7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const Type *</type>
        <definition>const Type * Azura::Containers::Vector&lt; Type &gt;::Data</definition>
        <argsstring>() const</argsstring>
        <name>Data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Vector.h" line="124" column="1" bodyfile="Source/Containers/Inc/Containers/Vector.h" bodystart="595" bodyend="597"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_vector_1a9a0fe84cbf357050432a0f851f8a8daa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Azura::Containers::Vector&lt; Type &gt;::Reset</definition>
        <argsstring>()</argsstring>
        <name>Reset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Vector.h" line="126" column="1" bodyfile="Source/Containers/Inc/Containers/Vector.h" bodystart="600" bodyend="602"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_vector_1a9375fcc59ae44bfe9960d045d322d897" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Type &amp;</type>
        <definition>Type &amp; Azura::Containers::Vector&lt; Type &gt;::operator[]</definition>
        <argsstring>(U32 idx)</argsstring>
        <name>operator[]</name>
        <param>
          <type>U32</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Vector.h" line="128" column="1" bodyfile="Source/Containers/Inc/Containers/Vector.h" bodystart="605" bodyend="608"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_vector_1aa88a35925d3013cd8050639e07938d62" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Type &amp;</type>
        <definition>Type &amp; Azura::Containers::Vector&lt; Type &gt;::operator[]</definition>
        <argsstring>(U32 idx) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>U32</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Vector.h" line="129" column="1" bodyfile="Source/Containers/Inc/Containers/Vector.h" bodystart="611" bodyend="614"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_vector_1aff0a689dcc4d698e49a40453f4e40d3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Type &amp;</type>
        <definition>Type &amp; Azura::Containers::Vector&lt; Type &gt;::Last</definition>
        <argsstring>()</argsstring>
        <name>Last</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Vector.h" line="131" column="1" bodyfile="Source/Containers/Inc/Containers/Vector.h" bodystart="617" bodyend="619"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_vector_1a6c87f384a7a0e3c4a76e53c8607e7f04" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Type &amp;</type>
        <definition>Type &amp; Azura::Containers::Vector&lt; Type &gt;::Last</definition>
        <argsstring>() const</argsstring>
        <name>Last</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Vector.h" line="132" column="1" bodyfile="Source/Containers/Inc/Containers/Vector.h" bodystart="622" bodyend="624"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_vector_1a109fab9164fcbf717f7dba81e1a8ac47" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>U32</type>
        <definition>U32 Azura::Containers::Vector&lt; Type &gt;::GetSize</definition>
        <argsstring>() const</argsstring>
        <name>GetSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Vector.h" line="134" column="1" bodyfile="Source/Containers/Inc/Containers/Vector.h" bodystart="134" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_vector_1ad51431e69d28f4f8e240c8f64cea17db" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>U32</type>
        <definition>U32 Azura::Containers::Vector&lt; Type &gt;::GetMaxSize</definition>
        <argsstring>() const</argsstring>
        <name>GetMaxSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Vector.h" line="138" column="1" bodyfile="Source/Containers/Inc/Containers/Vector.h" bodystart="138" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_vector_1a41f8b0d08472230bbcaf4e9611c9a5b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class InputIt</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Azura::Containers::Vector&lt; Type &gt;::Assign</definition>
        <argsstring>(InputIt first, InputIt last)</argsstring>
        <name>Assign</name>
        <param>
          <type>InputIt</type>
          <declname>first</declname>
        </param>
        <param>
          <type>InputIt</type>
          <declname>last</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Vector.h" line="143" column="1" bodyfile="Source/Containers/Inc/Containers/Vector.h" bodystart="628" bodyend="634"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_vector_1a49e7eba07315528d8f75998944b0e7c5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_azura_1_1_containers_1_1_vector_1_1_iterator" kindref="compound">Iterator</ref></type>
        <definition>Vector&lt; Type &gt;::Iterator Azura::Containers::Vector&lt; Type &gt;::Begin</definition>
        <argsstring>() const</argsstring>
        <name>Begin</name>
        <briefdescription>
<para>Returns an <ref refid="class_azura_1_1_containers_1_1_vector_1_1_iterator" kindref="compound">Iterator</ref> pointing to the beginning of the vector. This is similar to <ref refid="class_azura_1_1_containers_1_1_vector_1a324d28755f053b4a83c89982eebeee93" kindref="member">begin()</ref> of a std::vector. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="class_azura_1_1_containers_1_1_vector_1_1_iterator" kindref="compound">Iterator</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Vector.h" line="273" column="1" bodyfile="Source/Containers/Inc/Containers/Vector.h" bodystart="637" bodyend="639"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_vector_1aaf8c1fcfb814e8030e5520b56c094c6a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_azura_1_1_containers_1_1_vector_1_1_iterator" kindref="compound">Iterator</ref></type>
        <definition>Vector&lt; Type &gt;::Iterator Azura::Containers::Vector&lt; Type &gt;::End</definition>
        <argsstring>() const</argsstring>
        <name>End</name>
        <briefdescription>
<para>Returns an <ref refid="class_azura_1_1_containers_1_1_vector_1_1_iterator" kindref="compound">Iterator</ref> pointing to the end of the vector. This is similar to <ref refid="class_azura_1_1_containers_1_1_vector_1a364c485414869aa9d6de832f2af0f46f" kindref="member">end()</ref> of a std::vector. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="class_azura_1_1_containers_1_1_vector_1_1_iterator" kindref="compound">Iterator</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Vector.h" line="279" column="1" bodyfile="Source/Containers/Inc/Containers/Vector.h" bodystart="642" bodyend="644"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_vector_1a324d28755f053b4a83c89982eebeee93" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_azura_1_1_containers_1_1_vector_1_1_iterator" kindref="compound">Iterator</ref></type>
        <definition>Vector&lt; Type &gt;::Iterator Azura::Containers::Vector&lt; Type &gt;::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <briefdescription>
<para>Returns an <ref refid="class_azura_1_1_containers_1_1_vector_1_1_iterator" kindref="compound">Iterator</ref> pointing to the beginning of the vector. This is similar to <ref refid="class_azura_1_1_containers_1_1_vector_1a324d28755f053b4a83c89982eebeee93" kindref="member">begin()</ref> of a std::vector. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="class_azura_1_1_containers_1_1_vector_1_1_iterator" kindref="compound">Iterator</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Vector.h" line="285" column="1" bodyfile="Source/Containers/Inc/Containers/Vector.h" bodystart="647" bodyend="649"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_vector_1a364c485414869aa9d6de832f2af0f46f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_azura_1_1_containers_1_1_vector_1_1_iterator" kindref="compound">Iterator</ref></type>
        <definition>Vector&lt; Type &gt;::Iterator Azura::Containers::Vector&lt; Type &gt;::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <briefdescription>
<para>Returns an <ref refid="class_azura_1_1_containers_1_1_vector_1_1_iterator" kindref="compound">Iterator</ref> pointing to the end of the vector. This is similar to <ref refid="class_azura_1_1_containers_1_1_vector_1a364c485414869aa9d6de832f2af0f46f" kindref="member">end()</ref> of a std::vector. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="class_azura_1_1_containers_1_1_vector_1_1_iterator" kindref="compound">Iterator</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Vector.h" line="291" column="1" bodyfile="Source/Containers/Inc/Containers/Vector.h" bodystart="652" bodyend="654"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_azura_1_1_containers_1_1_vector_1a20e4cd72d8b14584bba20323efbffed4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Azura::Containers::Vector&lt; Type &gt;::GrowIfNeeded</definition>
        <argsstring>()</argsstring>
        <name>GrowIfNeeded</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Containers/Inc/Containers/Vector.h" line="294" column="1" bodyfile="Source/Containers/Inc/Containers/Vector.h" bodystart="458" bodyend="497"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="Source/Containers/Inc/Containers/Vector.h" line="33" column="1" bodyfile="Source/Containers/Inc/Containers/Vector.h" bodystart="33" bodyend="300"/>
    <listofallmembers>
      <member refid="class_azura_1_1_containers_1_1_vector_1a41f8b0d08472230bbcaf4e9611c9a5b3" prot="public" virt="non-virtual"><scope>Azura::Containers::Vector</scope><name>Assign</name></member>
      <member refid="class_azura_1_1_containers_1_1_vector_1a49e7eba07315528d8f75998944b0e7c5" prot="public" virt="non-virtual"><scope>Azura::Containers::Vector</scope><name>Begin</name></member>
      <member refid="class_azura_1_1_containers_1_1_vector_1a324d28755f053b4a83c89982eebeee93" prot="public" virt="non-virtual"><scope>Azura::Containers::Vector</scope><name>begin</name></member>
      <member refid="class_azura_1_1_containers_1_1_vector_1a6e3fd44d2821bb97f170b6e5443ec57e" prot="public" virt="non-virtual"><scope>Azura::Containers::Vector</scope><name>Data</name></member>
      <member refid="class_azura_1_1_containers_1_1_vector_1a512f49e419efb7f312d0a08ddfc675b7" prot="public" virt="non-virtual"><scope>Azura::Containers::Vector</scope><name>Data</name></member>
      <member refid="class_azura_1_1_containers_1_1_vector_1aadfac4f55765e41e812160022a9a949f" prot="public" virt="non-virtual"><scope>Azura::Containers::Vector</scope><name>EmplaceBack</name></member>
      <member refid="class_azura_1_1_containers_1_1_vector_1aaf8c1fcfb814e8030e5520b56c094c6a" prot="public" virt="non-virtual"><scope>Azura::Containers::Vector</scope><name>End</name></member>
      <member refid="class_azura_1_1_containers_1_1_vector_1a364c485414869aa9d6de832f2af0f46f" prot="public" virt="non-virtual"><scope>Azura::Containers::Vector</scope><name>end</name></member>
      <member refid="class_azura_1_1_containers_1_1_vector_1a5da3557964b80e7c40a574fbbb7e24a6" prot="public" virt="non-virtual"><scope>Azura::Containers::Vector</scope><name>FindFirst</name></member>
      <member refid="class_azura_1_1_containers_1_1_vector_1ad51431e69d28f4f8e240c8f64cea17db" prot="public" virt="non-virtual"><scope>Azura::Containers::Vector</scope><name>GetMaxSize</name></member>
      <member refid="class_azura_1_1_containers_1_1_vector_1a109fab9164fcbf717f7dba81e1a8ac47" prot="public" virt="non-virtual"><scope>Azura::Containers::Vector</scope><name>GetSize</name></member>
      <member refid="class_azura_1_1_containers_1_1_vector_1a20e4cd72d8b14584bba20323efbffed4" prot="private" virt="non-virtual"><scope>Azura::Containers::Vector</scope><name>GrowIfNeeded</name></member>
      <member refid="class_azura_1_1_containers_1_1_vector_1a9f350f9bbc7f5aaec6318369444d2d99" prot="public" virt="non-virtual"><scope>Azura::Containers::Vector</scope><name>InsertAt</name></member>
      <member refid="class_azura_1_1_containers_1_1_vector_1a3f955f930eefbb486ff9880421bbc7a4" prot="public" virt="non-virtual"><scope>Azura::Containers::Vector</scope><name>IsEmpty</name></member>
      <member refid="class_azura_1_1_containers_1_1_vector_1aff0a689dcc4d698e49a40453f4e40d3b" prot="public" virt="non-virtual"><scope>Azura::Containers::Vector</scope><name>Last</name></member>
      <member refid="class_azura_1_1_containers_1_1_vector_1a6c87f384a7a0e3c4a76e53c8607e7f04" prot="public" virt="non-virtual"><scope>Azura::Containers::Vector</scope><name>Last</name></member>
      <member refid="class_azura_1_1_containers_1_1_vector_1a3da37d3d227c645f49efda73324c3be0" prot="private" virt="non-virtual"><scope>Azura::Containers::Vector</scope><name>m_allocator</name></member>
      <member refid="class_azura_1_1_containers_1_1_vector_1af9bdce2aa7ada2b8671fba58550bc685" prot="private" virt="non-virtual"><scope>Azura::Containers::Vector</scope><name>m_base</name></member>
      <member refid="class_azura_1_1_containers_1_1_vector_1adfb996e85aa768c6d82678f2c4b1adb2" prot="private" virt="non-virtual"><scope>Azura::Containers::Vector</scope><name>m_maxSize</name></member>
      <member refid="class_azura_1_1_containers_1_1_vector_1a6faabc30c68ff3ead2705cd513dc116b" prot="private" virt="non-virtual"><scope>Azura::Containers::Vector</scope><name>m_size</name></member>
      <member refid="class_azura_1_1_containers_1_1_vector_1adbb949f6f25479775bb3af194ce528d5" prot="public" virt="non-virtual"><scope>Azura::Containers::Vector</scope><name>operator=</name></member>
      <member refid="class_azura_1_1_containers_1_1_vector_1aed6c43d8742cd53f938c87ae91e6532b" prot="public" virt="non-virtual"><scope>Azura::Containers::Vector</scope><name>operator=</name></member>
      <member refid="class_azura_1_1_containers_1_1_vector_1a9375fcc59ae44bfe9960d045d322d897" prot="public" virt="non-virtual"><scope>Azura::Containers::Vector</scope><name>operator[]</name></member>
      <member refid="class_azura_1_1_containers_1_1_vector_1aa88a35925d3013cd8050639e07938d62" prot="public" virt="non-virtual"><scope>Azura::Containers::Vector</scope><name>operator[]</name></member>
      <member refid="class_azura_1_1_containers_1_1_vector_1ad181b9dc858e1ad59fc64b39f795fb75" prot="public" virt="non-virtual"><scope>Azura::Containers::Vector</scope><name>PopBack</name></member>
      <member refid="class_azura_1_1_containers_1_1_vector_1aadc803b734b7481d9d7f2e9f86891ce4" prot="public" virt="non-virtual"><scope>Azura::Containers::Vector</scope><name>PushBack</name></member>
      <member refid="class_azura_1_1_containers_1_1_vector_1af55839be4b5b355ed020a09201713935" prot="public" virt="non-virtual"><scope>Azura::Containers::Vector</scope><name>PushBack</name></member>
      <member refid="class_azura_1_1_containers_1_1_vector_1a4d191b0d876f03c44c5a58e6380a07ee" prot="public" virt="non-virtual"><scope>Azura::Containers::Vector</scope><name>Remove</name></member>
      <member refid="class_azura_1_1_containers_1_1_vector_1af9aea7a8da9e449530132e50d85ca221" prot="public" virt="non-virtual"><scope>Azura::Containers::Vector</scope><name>Reserve</name></member>
      <member refid="class_azura_1_1_containers_1_1_vector_1a9a0fe84cbf357050432a0f851f8a8daa" prot="public" virt="non-virtual"><scope>Azura::Containers::Vector</scope><name>Reset</name></member>
      <member refid="class_azura_1_1_containers_1_1_vector_1ab527c7c81b62e3cb29d9200ff5dc208a" prot="public" virt="non-virtual"><scope>Azura::Containers::Vector</scope><name>Resize</name></member>
      <member refid="class_azura_1_1_containers_1_1_vector_1a1501bebfe27b34397ade56d274261d60" prot="public" virt="non-virtual"><scope>Azura::Containers::Vector</scope><name>Vector</name></member>
      <member refid="class_azura_1_1_containers_1_1_vector_1a6f3debb85587cf01eef9bddcb14c58fb" prot="public" virt="non-virtual"><scope>Azura::Containers::Vector</scope><name>Vector</name></member>
      <member refid="class_azura_1_1_containers_1_1_vector_1a57b086de3f62679d082a086300138636" prot="public" virt="non-virtual"><scope>Azura::Containers::Vector</scope><name>Vector</name></member>
      <member refid="class_azura_1_1_containers_1_1_vector_1af816fc5ac5a9e5060f6c88cb4e8beaa3" prot="public" virt="non-virtual"><scope>Azura::Containers::Vector</scope><name>Vector</name></member>
      <member refid="class_azura_1_1_containers_1_1_vector_1a791c8721cacac5dd785a45a98e45d4a8" prot="public" virt="non-virtual"><scope>Azura::Containers::Vector</scope><name>Vector</name></member>
      <member refid="class_azura_1_1_containers_1_1_vector_1a11574d6d332a04eccebcc4f0255275b4" prot="public" virt="non-virtual"><scope>Azura::Containers::Vector</scope><name>Vector</name></member>
      <member refid="class_azura_1_1_containers_1_1_vector_1a3b25f7177d538d7bb646ceb5fa46f30c" prot="public" virt="non-virtual"><scope>Azura::Containers::Vector</scope><name>Vector</name></member>
      <member refid="class_azura_1_1_containers_1_1_vector_1afa47d6fd1b56460466a5b15a1030c439" prot="public" virt="non-virtual"><scope>Azura::Containers::Vector</scope><name>Vector</name></member>
      <member refid="class_azura_1_1_containers_1_1_vector_1a2552d6447e1aeccdd359a50f9c52d016" prot="public" virt="non-virtual"><scope>Azura::Containers::Vector</scope><name>Vector</name></member>
      <member refid="class_azura_1_1_containers_1_1_vector_1a81495c5eec68f60da33123073cdde942" prot="public" virt="non-virtual"><scope>Azura::Containers::Vector</scope><name>~Vector</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
