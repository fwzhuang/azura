<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="_vk_type_mapping_8h" kind="file" language="C++">
    <compoundname>VkTypeMapping.h</compoundname>
    <includes local="no">vulkan/vulkan_core.h</includes>
    <includes local="no">optional</includes>
    <includes refid="_azura_2_render_system_2_inc_2_generic_2_generic_types_8h" local="yes">Generic/GenericTypes.h</includes>
    <includes refid="_raw_storage_format_8h" local="yes">Core/RawStorageFormat.h</includes>
    <includedby refid="_vk_core_8cpp" local="yes">Source/Azura/RenderSystem/Src/Vulkan/VkCore.cpp</includedby>
    <includedby refid="_vk_drawable_pool_8cpp" local="yes">Source/Azura/RenderSystem/Src/Vulkan/VkDrawablePool.cpp</includedby>
    <includedby refid="_vk_renderer_8cpp" local="yes">Source/Azura/RenderSystem/Src/Vulkan/VkRenderer.cpp</includedby>
    <includedby refid="_vk_scoped_image_8cpp" local="yes">Source/Azura/RenderSystem/Src/Vulkan/VkScopedImage.cpp</includedby>
    <includedby refid="_vk_scoped_pipeline_8cpp" local="yes">Source/Azura/RenderSystem/Src/Vulkan/VkScopedPipeline.cpp</includedby>
    <includedby refid="_vk_scoped_render_pass_8cpp" local="yes">Source/Azura/RenderSystem/Src/Vulkan/VkScopedRenderPass.cpp</includedby>
    <includedby refid="_vk_scoped_swap_chain_8cpp" local="yes">Source/Azura/RenderSystem/Src/Vulkan/VkScopedSwapChain.cpp</includedby>
    <includedby refid="_vk_shader_8cpp" local="yes">Source/Azura/RenderSystem/Src/Vulkan/VkShader.cpp</includedby>
    <includedby refid="_vk_type_mapping_8cpp" local="yes">Source/Azura/RenderSystem/Src/Vulkan/VkTypeMapping.cpp</includedby>
    <incdepgraph>
      <node id="1741">
        <label>functional</label>
      </node>
      <node id="1742">
        <label>iterator</label>
      </node>
      <node id="1754">
        <label>Utils/Hash.h</label>
        <link refid="_hash_8h_source"/>
        <childnode refid="1745" relation="include">
        </childnode>
      </node>
      <node id="1749">
        <label>Core/RawStorageFormat.h</label>
        <link refid="_raw_storage_format_8h_source"/>
        <childnode refid="1745" relation="include">
        </childnode>
        <childnode refid="1748" relation="include">
        </childnode>
        <childnode refid="1750" relation="include">
        </childnode>
        <childnode refid="1751" relation="include">
        </childnode>
        <childnode refid="1752" relation="include">
        </childnode>
        <childnode refid="1753" relation="include">
        </childnode>
      </node>
      <node id="1744">
        <label>Memory/Allocator.h</label>
        <link refid="_allocator_8h_source"/>
        <childnode refid="1741" relation="include">
        </childnode>
        <childnode refid="1745" relation="include">
        </childnode>
        <childnode refid="1746" relation="include">
        </childnode>
      </node>
      <node id="1755">
        <label>Core/AssetLocation.h</label>
        <link refid="_asset_location_8h_source"/>
      </node>
      <node id="1739">
        <label>cassert</label>
      </node>
      <node id="1752">
        <label>boost/preprocessor/tuple/elem.hpp</label>
      </node>
      <node id="1737">
        <label>Generic/GenericTypes.h</label>
        <link refid="_azura_2_render_system_2_inc_2_generic_2_generic_types_8h_source"/>
        <childnode refid="1738" relation="include">
        </childnode>
        <childnode refid="1747" relation="include">
        </childnode>
        <childnode refid="1745" relation="include">
        </childnode>
        <childnode refid="1749" relation="include">
        </childnode>
        <childnode refid="1754" relation="include">
        </childnode>
        <childnode refid="1755" relation="include">
        </childnode>
        <childnode refid="1756" relation="include">
        </childnode>
        <childnode refid="1753" relation="include">
        </childnode>
      </node>
      <node id="1746">
        <label>Utils/Macros.h</label>
        <link refid="_macros_8h_source"/>
      </node>
      <node id="1756">
        <label>boost/container/small_vector.hpp</label>
      </node>
      <node id="1747">
        <label>Generic/Constants.h</label>
        <link refid="_azura_2_render_system_2_inc_2_generic_2_constants_8h_source"/>
        <childnode refid="1748" relation="include">
        </childnode>
        <childnode refid="1745" relation="include">
        </childnode>
      </node>
      <node id="1753">
        <label>boost/detail/bitmask.hpp</label>
      </node>
      <node id="1748">
        <label>tuple</label>
      </node>
      <node id="1743">
        <label>Array.h</label>
        <link refid="_array_8h_source"/>
        <childnode refid="1739" relation="include">
        </childnode>
        <childnode refid="1740" relation="include">
        </childnode>
        <childnode refid="1744" relation="include">
        </childnode>
        <childnode refid="1745" relation="include">
        </childnode>
      </node>
      <node id="1736">
        <label>optional</label>
      </node>
      <node id="1738">
        <label>Containers/Vector.h</label>
        <link refid="_vector_8h_source"/>
        <childnode refid="1739" relation="include">
        </childnode>
        <childnode refid="1740" relation="include">
        </childnode>
        <childnode refid="1741" relation="include">
        </childnode>
        <childnode refid="1742" relation="include">
        </childnode>
        <childnode refid="1743" relation="include">
        </childnode>
        <childnode refid="1744" relation="include">
        </childnode>
        <childnode refid="1745" relation="include">
        </childnode>
        <childnode refid="1746" relation="include">
        </childnode>
      </node>
      <node id="1735">
        <label>vulkan/vulkan_core.h</label>
      </node>
      <node id="1750">
        <label>boost/preprocessor/repetition/repeat.hpp</label>
      </node>
      <node id="1745">
        <label>Types.h</label>
      </node>
      <node id="1734">
        <label>Source/Azura/RenderSystem/Inc/Vulkan/VkTypeMapping.h</label>
        <link refid="_vk_type_mapping_8h"/>
        <childnode refid="1735" relation="include">
        </childnode>
        <childnode refid="1736" relation="include">
        </childnode>
        <childnode refid="1737" relation="include">
        </childnode>
        <childnode refid="1749" relation="include">
        </childnode>
      </node>
      <node id="1740">
        <label>cstring</label>
      </node>
      <node id="1751">
        <label>boost/preprocessor/seq/for_each.hpp</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_azura">Azura</innernamespace>
    <innernamespace refid="namespace_azura_1_1_vulkan">Azura::Vulkan</innernamespace>
    <innernamespace refid="namespace_azura_1_1_vulkan_1_1_impl">Azura::Vulkan::Impl</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="_vk_type_mapping_8h_1a501220aa5ce0886f25f9aa630e1bcc0f" prot="public" static="no">
        <name>CREATE_MAPPER_H</name>
        <param><defname>FROM_FORMAT</defname></param>
        <param><defname>TO_FORMAT</defname></param>
        <initializer>std::optional&lt;TO_FORMAT&gt; To##TO_FORMAT(FROM_FORMAT inputFormat)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Azura/RenderSystem/Inc/Vulkan/VkTypeMapping.h" line="12" column="9" bodyfile="Source/Azura/RenderSystem/Inc/Vulkan/VkTypeMapping.h" bodystart="12" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vulkan/vulkan_core.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;optional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Generic/GenericTypes.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Core/RawStorageFormat.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_azura" kindref="compound">Azura</ref><sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Vulkan<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Impl<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CREATE_MAPPER_H(FROM_FORMAT,<sp/>TO_FORMAT)<sp/>std::optional&lt;TO_FORMAT&gt;<sp/>To##TO_FORMAT(FROM_FORMAT<sp/>inputFormat)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Impl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO(vasumahesh1):<sp/>Enable<sp/>enum<sp/>mappings<sp/>when<sp/>all<sp/>mappings<sp/>are<sp/>complete<sp/>to<sp/>prevent<sp/>-Wswitch<sp/>issues</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal">CREATE_MAPPER_H(RawStorageFormat,<sp/>VkFormat);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CREATE_MAPPER_H(VkFormat,<sp/>RawStorageFormat);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal">CREATE_MAPPER_H(RawStorageFormat,<sp/>VkIndexType);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CREATE_MAPPER_H(VkIndexType,<sp/>RawStorageFormat);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal">CREATE_MAPPER_H(ColorSpace,<sp/>VkColorSpaceKHR);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CREATE_MAPPER_H(VkColorSpaceKHR,<sp/>ColorSpace);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">CREATE_MAPPER_H(PresentModes,<sp/>VkPresentModeKHR);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CREATE_MAPPER_H(VkPresentModeKHR,<sp/>PresentModes);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal">CREATE_MAPPER_H(ShaderStage,<sp/>VkShaderStageFlagBits);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CREATE_MAPPER_H(VkShaderStageFlagBits,<sp/>ShaderStage);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal">CREATE_MAPPER_H(PrimitiveTopology,<sp/>VkPrimitiveTopology);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CREATE_MAPPER_H(VkPrimitiveTopology,<sp/>PrimitiveTopology);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">CREATE_MAPPER_H(CullMode,<sp/>VkCullModeFlags);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CREATE_MAPPER_H(VkCullModeFlags,<sp/>CullMode);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal">CREATE_MAPPER_H(FrontFace,<sp/>VkFrontFace);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CREATE_MAPPER_H(VkFrontFace,<sp/>FrontFace);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">CREATE_MAPPER_H(BufferUsageRate,<sp/>VkVertexInputRate);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal">CREATE_MAPPER_H(ImageType,<sp/>VkImageType);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal">CREATE_MAPPER_H(ImageViewType,<sp/>VkImageViewType);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CREATE_MAPPER_H(VkImageType,<sp/>ImageType);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">CREATE_MAPPER_H(BlendFactor,<sp/>VkBlendFactor);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CREATE_MAPPER_H(VkBlendFactor,<sp/>BlendFactor);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal">CREATE_MAPPER_H(BlendOp,<sp/>VkBlendOp);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CREATE_MAPPER_H(VkBlendOp,<sp/>BlendOp);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">VkShaderStageFlagBits<sp/>GetCombinedShaderStageFlag(ShaderStage<sp/>stage);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Vulkan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Azura</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="Source/Azura/RenderSystem/Inc/Vulkan/VkTypeMapping.h"/>
  </compounddef>
</doxygen>
