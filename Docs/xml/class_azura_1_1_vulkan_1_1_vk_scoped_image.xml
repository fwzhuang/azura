<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="class_azura_1_1_vulkan_1_1_vk_scoped_image" kind="class" language="C++" prot="public">
    <compoundname>Azura::Vulkan::VkScopedImage</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_azura_1_1_vulkan_1_1_vk_scoped_image_1a66c8ebe44b3b83b632d9bb3a9b2c737b" prot="private" static="no" mutable="no">
        <type>VkDevice</type>
        <definition>VkDevice Azura::Vulkan::VkScopedImage::m_device</definition>
        <argsstring></argsstring>
        <name>m_device</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Azura/RenderSystem/Inc/Vulkan/VkScopedImage.h" line="54" column="1" bodyfile="Source/Azura/RenderSystem/Inc/Vulkan/VkScopedImage.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_azura_1_1_vulkan_1_1_vk_scoped_image_1ab4ac36f19e297010ec49a4294edbe7a7" prot="private" static="no" mutable="no">
        <type>VkImage</type>
        <definition>VkImage Azura::Vulkan::VkScopedImage::m_image</definition>
        <argsstring></argsstring>
        <name>m_image</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Azura/RenderSystem/Inc/Vulkan/VkScopedImage.h" line="56" column="1" bodyfile="Source/Azura/RenderSystem/Inc/Vulkan/VkScopedImage.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_azura_1_1_vulkan_1_1_vk_scoped_image_1a350fbf4cf61acd84f3bd2d8dfa3d230d" prot="private" static="no" mutable="no">
        <type>VkImageView</type>
        <definition>VkImageView Azura::Vulkan::VkScopedImage::m_imageView</definition>
        <argsstring></argsstring>
        <name>m_imageView</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Azura/RenderSystem/Inc/Vulkan/VkScopedImage.h" line="57" column="1" bodyfile="Source/Azura/RenderSystem/Inc/Vulkan/VkScopedImage.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_azura_1_1_vulkan_1_1_vk_scoped_image_1afeca31e41a6a3cd61d1c14e45877a844" prot="private" static="no" mutable="no">
        <type>VkDeviceMemory</type>
        <definition>VkDeviceMemory Azura::Vulkan::VkScopedImage::m_memory</definition>
        <argsstring></argsstring>
        <name>m_memory</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Azura/RenderSystem/Inc/Vulkan/VkScopedImage.h" line="58" column="1" bodyfile="Source/Azura/RenderSystem/Inc/Vulkan/VkScopedImage.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_azura_1_1_vulkan_1_1_vk_scoped_image_1a09b5a847b720004dfb73bdc3a1c33469" prot="private" static="no" mutable="no">
        <type><ref refid="struct_azura_1_1_texture_desc" kindref="compound">TextureDesc</ref></type>
        <definition>TextureDesc Azura::Vulkan::VkScopedImage::m_desc</definition>
        <argsstring></argsstring>
        <name>m_desc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Azura/RenderSystem/Inc/Vulkan/VkScopedImage.h" line="60" column="1" bodyfile="Source/Azura/RenderSystem/Inc/Vulkan/VkScopedImage.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_azura_1_1_vulkan_1_1_vk_scoped_image_1a9cd1e7b8bca6e487b79c5542b101e8cd" prot="private" static="no" mutable="no">
        <type>const <ref refid="class_azura_1_1_log" kindref="compound">Log</ref></type>
        <definition>const Log Azura::Vulkan::VkScopedImage::log_VulkanRenderSystem</definition>
        <argsstring></argsstring>
        <name>log_VulkanRenderSystem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Azura/RenderSystem/Inc/Vulkan/VkScopedImage.h" line="62" column="1" bodyfile="Source/Azura/RenderSystem/Inc/Vulkan/VkScopedImage.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_azura_1_1_vulkan_1_1_vk_scoped_image_1ab39844b4d2ffe3efc2e65043bd67bb78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Azura::Vulkan::VkScopedImage::VkScopedImage</definition>
        <argsstring>(VkDevice device, const TextureDesc &amp;textureDesc, VkImageUsageFlags usage, const VkPhysicalDeviceMemoryProperties &amp;physicalDeviceMemoryProperties, Log logger)</argsstring>
        <name>VkScopedImage</name>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>const <ref refid="struct_azura_1_1_texture_desc" kindref="compound">TextureDesc</ref> &amp;</type>
          <declname>textureDesc</declname>
        </param>
        <param>
          <type>VkImageUsageFlags</type>
          <declname>usage</declname>
        </param>
        <param>
          <type>const VkPhysicalDeviceMemoryProperties &amp;</type>
          <declname>physicalDeviceMemoryProperties</declname>
        </param>
        <param>
          <type><ref refid="class_azura_1_1_log" kindref="compound">Log</ref></type>
          <declname>logger</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Azura/RenderSystem/Inc/Vulkan/VkScopedImage.h" line="19" column="1" bodyfile="Source/Azura/RenderSystem/Src/Vulkan/VkScopedImage.cpp" bodystart="11" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_vulkan_1_1_vk_scoped_image_1a73a312a39226e26b35c754b8ecc34ac5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Azura::Vulkan::VkScopedImage::VkScopedImage</definition>
        <argsstring>(VkDevice device, const TextureDesc &amp;textureDesc, VkImage image, Log logger)</argsstring>
        <name>VkScopedImage</name>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>const <ref refid="struct_azura_1_1_texture_desc" kindref="compound">TextureDesc</ref> &amp;</type>
          <declname>textureDesc</declname>
        </param>
        <param>
          <type>VkImage</type>
          <declname>image</declname>
        </param>
        <param>
          <type><ref refid="class_azura_1_1_log" kindref="compound">Log</ref></type>
          <declname>logger</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Azura/RenderSystem/Inc/Vulkan/VkScopedImage.h" line="25" column="1" bodyfile="Source/Azura/RenderSystem/Src/Vulkan/VkScopedImage.cpp" bodystart="22" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_vulkan_1_1_vk_scoped_image_1add2844406957493728bc2fbc5c05bc10" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>Azura::Vulkan::VkScopedImage::VkScopedImage</definition>
        <argsstring>(Log logger)</argsstring>
        <name>VkScopedImage</name>
        <param>
          <type><ref refid="class_azura_1_1_log" kindref="compound">Log</ref></type>
          <declname>logger</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Azura/RenderSystem/Inc/Vulkan/VkScopedImage.h" line="30" column="1" bodyfile="Source/Azura/RenderSystem/Src/Vulkan/VkScopedImage.cpp" bodystart="29" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_vulkan_1_1_vk_scoped_image_1aff7c4dcbf5ca1ec6bfbe18890bf6569b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Azura::Vulkan::VkScopedImage::Create</definition>
        <argsstring>(VkDevice device, const TextureDesc &amp;textureDesc, VkImageUsageFlags usage, const VkPhysicalDeviceMemoryProperties &amp;physicalDeviceMemoryProperties)</argsstring>
        <name>Create</name>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>const <ref refid="struct_azura_1_1_texture_desc" kindref="compound">TextureDesc</ref> &amp;</type>
          <declname>textureDesc</declname>
        </param>
        <param>
          <type>VkImageUsageFlags</type>
          <declname>usage</declname>
        </param>
        <param>
          <type>const VkPhysicalDeviceMemoryProperties &amp;</type>
          <declname>physicalDeviceMemoryProperties</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Azura/RenderSystem/Inc/Vulkan/VkScopedImage.h" line="32" column="1" bodyfile="Source/Azura/RenderSystem/Src/Vulkan/VkScopedImage.cpp" bodystart="34" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_vulkan_1_1_vk_scoped_image_1af3728969e86e52d9a54108f491c6a4b2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>VkImage</type>
        <definition>VkImage Azura::Vulkan::VkScopedImage::Real</definition>
        <argsstring>() const</argsstring>
        <name>Real</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Azura/RenderSystem/Inc/Vulkan/VkScopedImage.h" line="37" column="1" bodyfile="Source/Azura/RenderSystem/Src/Vulkan/VkScopedImage.cpp" bodystart="62" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_vulkan_1_1_vk_scoped_image_1a32729ce8c4660320ffcc3ab7ddf14899" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>VkImageView</type>
        <definition>VkImageView Azura::Vulkan::VkScopedImage::View</definition>
        <argsstring>() const</argsstring>
        <name>View</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Azura/RenderSystem/Inc/Vulkan/VkScopedImage.h" line="38" column="1" bodyfile="Source/Azura/RenderSystem/Src/Vulkan/VkScopedImage.cpp" bodystart="66" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_vulkan_1_1_vk_scoped_image_1ae3a8b213b432b455803723e0d8add312" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>VkDeviceMemory</type>
        <definition>VkDeviceMemory Azura::Vulkan::VkScopedImage::Memory</definition>
        <argsstring>() const</argsstring>
        <name>Memory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Azura/RenderSystem/Inc/Vulkan/VkScopedImage.h" line="39" column="1" bodyfile="Source/Azura/RenderSystem/Src/Vulkan/VkScopedImage.cpp" bodystart="70" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_vulkan_1_1_vk_scoped_image_1aed98850fb160fb489701f3b7e5eeedc4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>VkFormat</type>
        <definition>VkFormat Azura::Vulkan::VkScopedImage::GetRealFormat</definition>
        <argsstring>() const</argsstring>
        <name>GetRealFormat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Azura/RenderSystem/Inc/Vulkan/VkScopedImage.h" line="41" column="1" bodyfile="Source/Azura/RenderSystem/Src/Vulkan/VkScopedImage.cpp" bodystart="74" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_vulkan_1_1_vk_scoped_image_1aa055ecd8a3fa0f0201fc3a8269dd0e27" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>RawStorageFormat</type>
        <definition>RawStorageFormat Azura::Vulkan::VkScopedImage::GetFormat</definition>
        <argsstring>() const</argsstring>
        <name>GetFormat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Azura/RenderSystem/Inc/Vulkan/VkScopedImage.h" line="42" column="1" bodyfile="Source/Azura/RenderSystem/Src/Vulkan/VkScopedImage.cpp" bodystart="81" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_vulkan_1_1_vk_scoped_image_1aae834e782badd70841122283cd0da378" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Azura::Vulkan::VkScopedImage::CleanUp</definition>
        <argsstring>() const</argsstring>
        <name>CleanUp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Azura/RenderSystem/Inc/Vulkan/VkScopedImage.h" line="44" column="1" bodyfile="Source/Azura/RenderSystem/Src/Vulkan/VkScopedImage.cpp" bodystart="85" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_vulkan_1_1_vk_scoped_image_1a14c88cd39e3fbad1d89a5c95305cc467" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Azura::Vulkan::VkScopedImage::TransitionLayout</definition>
        <argsstring>(VkCommandBuffer commandBuffer, ImageTransition oldTransition, ImageTransition newTransition) const</argsstring>
        <name>TransitionLayout</name>
        <param>
          <type>VkCommandBuffer</type>
          <declname>commandBuffer</declname>
        </param>
        <param>
          <type><ref refid="struct_azura_1_1_vulkan_1_1_image_transition" kindref="compound">ImageTransition</ref></type>
          <declname>oldTransition</declname>
        </param>
        <param>
          <type><ref refid="struct_azura_1_1_vulkan_1_1_image_transition" kindref="compound">ImageTransition</ref></type>
          <declname>newTransition</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Azura/RenderSystem/Inc/Vulkan/VkScopedImage.h" line="46" column="1" bodyfile="Source/Azura/RenderSystem/Src/Vulkan/VkScopedImage.cpp" bodystart="91" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_vulkan_1_1_vk_scoped_image_1a1f78ab7bfb444b6d0c56a7fdddb51e2d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Azura::Vulkan::VkScopedImage::CopyFromBuffer</definition>
        <argsstring>(VkCommandBuffer commandBuffer, const TextureBufferInfo &amp;bufferInfo, VkBuffer buffer) const</argsstring>
        <name>CopyFromBuffer</name>
        <param>
          <type>VkCommandBuffer</type>
          <declname>commandBuffer</declname>
        </param>
        <param>
          <type>const <ref refid="struct_azura_1_1_texture_buffer_info" kindref="compound">TextureBufferInfo</ref> &amp;</type>
          <declname>bufferInfo</declname>
        </param>
        <param>
          <type>VkBuffer</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Azura/RenderSystem/Inc/Vulkan/VkScopedImage.h" line="49" column="1" bodyfile="Source/Azura/RenderSystem/Src/Vulkan/VkScopedImage.cpp" bodystart="117" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="class_azura_1_1_vulkan_1_1_vk_scoped_image_1a50ec1ac7163cf57dfc7e09a5c2aeb50f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Azura::Vulkan::VkScopedImage::CreateImageView</definition>
        <argsstring>(ImageViewType imageView)</argsstring>
        <name>CreateImageView</name>
        <param>
          <type>ImageViewType</type>
          <declname>imageView</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Azura/RenderSystem/Inc/Vulkan/VkScopedImage.h" line="51" column="1" bodyfile="Source/Azura/RenderSystem/Src/Vulkan/VkScopedImage.cpp" bodystart="162" bodyend="195"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="Source/Azura/RenderSystem/Inc/Vulkan/VkScopedImage.h" line="17" column="1" bodyfile="Source/Azura/RenderSystem/Inc/Vulkan/VkScopedImage.h" bodystart="17" bodyend="63"/>
    <listofallmembers>
      <member refid="class_azura_1_1_vulkan_1_1_vk_scoped_image_1aae834e782badd70841122283cd0da378" prot="public" virt="non-virtual"><scope>Azura::Vulkan::VkScopedImage</scope><name>CleanUp</name></member>
      <member refid="class_azura_1_1_vulkan_1_1_vk_scoped_image_1a1f78ab7bfb444b6d0c56a7fdddb51e2d" prot="public" virt="non-virtual"><scope>Azura::Vulkan::VkScopedImage</scope><name>CopyFromBuffer</name></member>
      <member refid="class_azura_1_1_vulkan_1_1_vk_scoped_image_1aff7c4dcbf5ca1ec6bfbe18890bf6569b" prot="public" virt="non-virtual"><scope>Azura::Vulkan::VkScopedImage</scope><name>Create</name></member>
      <member refid="class_azura_1_1_vulkan_1_1_vk_scoped_image_1a50ec1ac7163cf57dfc7e09a5c2aeb50f" prot="public" virt="non-virtual"><scope>Azura::Vulkan::VkScopedImage</scope><name>CreateImageView</name></member>
      <member refid="class_azura_1_1_vulkan_1_1_vk_scoped_image_1aa055ecd8a3fa0f0201fc3a8269dd0e27" prot="public" virt="non-virtual"><scope>Azura::Vulkan::VkScopedImage</scope><name>GetFormat</name></member>
      <member refid="class_azura_1_1_vulkan_1_1_vk_scoped_image_1aed98850fb160fb489701f3b7e5eeedc4" prot="public" virt="non-virtual"><scope>Azura::Vulkan::VkScopedImage</scope><name>GetRealFormat</name></member>
      <member refid="class_azura_1_1_vulkan_1_1_vk_scoped_image_1a9cd1e7b8bca6e487b79c5542b101e8cd" prot="private" virt="non-virtual"><scope>Azura::Vulkan::VkScopedImage</scope><name>log_VulkanRenderSystem</name></member>
      <member refid="class_azura_1_1_vulkan_1_1_vk_scoped_image_1a09b5a847b720004dfb73bdc3a1c33469" prot="private" virt="non-virtual"><scope>Azura::Vulkan::VkScopedImage</scope><name>m_desc</name></member>
      <member refid="class_azura_1_1_vulkan_1_1_vk_scoped_image_1a66c8ebe44b3b83b632d9bb3a9b2c737b" prot="private" virt="non-virtual"><scope>Azura::Vulkan::VkScopedImage</scope><name>m_device</name></member>
      <member refid="class_azura_1_1_vulkan_1_1_vk_scoped_image_1ab4ac36f19e297010ec49a4294edbe7a7" prot="private" virt="non-virtual"><scope>Azura::Vulkan::VkScopedImage</scope><name>m_image</name></member>
      <member refid="class_azura_1_1_vulkan_1_1_vk_scoped_image_1a350fbf4cf61acd84f3bd2d8dfa3d230d" prot="private" virt="non-virtual"><scope>Azura::Vulkan::VkScopedImage</scope><name>m_imageView</name></member>
      <member refid="class_azura_1_1_vulkan_1_1_vk_scoped_image_1afeca31e41a6a3cd61d1c14e45877a844" prot="private" virt="non-virtual"><scope>Azura::Vulkan::VkScopedImage</scope><name>m_memory</name></member>
      <member refid="class_azura_1_1_vulkan_1_1_vk_scoped_image_1ae3a8b213b432b455803723e0d8add312" prot="public" virt="non-virtual"><scope>Azura::Vulkan::VkScopedImage</scope><name>Memory</name></member>
      <member refid="class_azura_1_1_vulkan_1_1_vk_scoped_image_1af3728969e86e52d9a54108f491c6a4b2" prot="public" virt="non-virtual"><scope>Azura::Vulkan::VkScopedImage</scope><name>Real</name></member>
      <member refid="class_azura_1_1_vulkan_1_1_vk_scoped_image_1a14c88cd39e3fbad1d89a5c95305cc467" prot="public" virt="non-virtual"><scope>Azura::Vulkan::VkScopedImage</scope><name>TransitionLayout</name></member>
      <member refid="class_azura_1_1_vulkan_1_1_vk_scoped_image_1a32729ce8c4660320ffcc3ab7ddf14899" prot="public" virt="non-virtual"><scope>Azura::Vulkan::VkScopedImage</scope><name>View</name></member>
      <member refid="class_azura_1_1_vulkan_1_1_vk_scoped_image_1ab39844b4d2ffe3efc2e65043bd67bb78" prot="public" virt="non-virtual"><scope>Azura::Vulkan::VkScopedImage</scope><name>VkScopedImage</name></member>
      <member refid="class_azura_1_1_vulkan_1_1_vk_scoped_image_1a73a312a39226e26b35c754b8ecc34ac5" prot="public" virt="non-virtual"><scope>Azura::Vulkan::VkScopedImage</scope><name>VkScopedImage</name></member>
      <member refid="class_azura_1_1_vulkan_1_1_vk_scoped_image_1add2844406957493728bc2fbc5c05bc10" prot="public" virt="non-virtual"><scope>Azura::Vulkan::VkScopedImage</scope><name>VkScopedImage</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
