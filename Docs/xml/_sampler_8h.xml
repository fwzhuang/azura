<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="_sampler_8h" kind="file" language="C++">
    <compoundname>Sampler.h</compoundname>
    <includes local="no">cinttypes</includes>
    <includes refid="_dibella_2_inc_2_core_2_types_8h" local="yes">../Core/Types.h</includes>
    <includedby refid="_sampler_8cpp" local="yes">Source/Dibella/Src/Samplers/Sampler.cpp</includedby>
    <incdepgraph>
      <node id="4948">
        <label>mathfu/vector.h</label>
      </node>
      <node id="4946">
        <label>string</label>
      </node>
      <node id="4942">
        <label>cinttypes</label>
      </node>
      <node id="4943">
        <label>../Core/Types.h</label>
        <link refid="_dibella_2_inc_2_core_2_types_8h_source"/>
        <childnode refid="4944" relation="include">
        </childnode>
        <childnode refid="4945" relation="include">
        </childnode>
        <childnode refid="4946" relation="include">
        </childnode>
        <childnode refid="4947" relation="include">
        </childnode>
        <childnode refid="4948" relation="include">
        </childnode>
      </node>
      <node id="4941">
        <label>Source/Dibella/Inc/Samplers/Sampler.h</label>
        <link refid="_sampler_8h"/>
        <childnode refid="4942" relation="include">
        </childnode>
        <childnode refid="4943" relation="include">
        </childnode>
      </node>
      <node id="4944">
        <label>ToolsCore.h</label>
      </node>
      <node id="4945">
        <label>cstddef</label>
      </node>
      <node id="4947">
        <label>mathfu/matrix.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_dibella_1_1_sampler" prot="public">Dibella::Sampler</innerclass>
    <innernamespace refid="namespace_dibella">Dibella</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cinttypes&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Core/Types.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_dibella" kindref="compound">Dibella</ref><sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="class_dibella_1_1_sampler" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_dibella_1_1_sampler" kindref="compound">Sampler</ref><sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Sampler<sp/>Interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_dibella_1_1_sampler" kindref="compound">Sampler</ref>();</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_dibella_1_1_sampler" kindref="compound">Sampler</ref>(U64<sp/>samplesPerPixel);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>Float<sp/>Get1D()<sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>Point2f<sp/>Get2D()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;Sampler&gt;<sp/>Clone(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seed)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SetSampleNumber(U64<sp/>sampleNum);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>std::string<sp/>StateString()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StringPrintf(</highlight><highlight class="stringliteral">&quot;(%d,%d),<sp/>sample<sp/>%&quot;</highlight><highlight class="normal"><sp/>PRId64,<sp/>currentPixel.x,<sp/>currentPixel.y,<sp/>currentPixelSampleIndex);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>U64<sp/>CurrentSampleNumber()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>currentPixelSampleIndex;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Sampler<sp/>Public<sp/>Data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>U64<sp/>samplesPerPixel;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Sampler<sp/>Protected<sp/>Data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>Point2i<sp/>currentPixel;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>U64<sp/>currentPixelSampleIndex;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>std::vector&lt;int&gt;<sp/>samples1DArraySizes,<sp/>samples2DArraySizes;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>std::vector&lt;std::vector&lt;Float&gt;&gt;<sp/>sampleArray1D;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>std::vector&lt;std::vector&lt;Point2f&gt;&gt;<sp/>sampleArray2D;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Sampler<sp/>Private<sp/>Data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>array1DOffset,<sp/>array2DOffset;</highlight></codeline>
<codeline lineno="41"><highlight class="normal">};</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Dibella</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="Source/Dibella/Inc/Samplers/Sampler.h"/>
  </compounddef>
</doxygen>
