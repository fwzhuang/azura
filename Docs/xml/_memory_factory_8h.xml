<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="_memory_factory_8h" kind="file" language="C++">
    <compoundname>MemoryFactory.h</compoundname>
    <includes refid="_stack_memory_buffer_8h" local="yes">Memory/StackMemoryBuffer.h</includes>
    <includes refid="_heap_memory_buffer_8h" local="yes">Memory/HeapMemoryBuffer.h</includes>
    <includes local="yes">Types.h</includes>
    <includedby refid="_d3_d12_compute_pool_8cpp" local="yes">Source/Azura/RenderSystem/Src/D3D12/D3D12ComputePool.cpp</includedby>
    <includedby refid="_d3_d12_drawable_pool_8cpp" local="yes">Source/Azura/RenderSystem/Src/D3D12/D3D12DrawablePool.cpp</includedby>
    <includedby refid="_d3_d12_renderer_8cpp" local="yes">Source/Azura/RenderSystem/Src/D3D12/D3D12Renderer.cpp</includedby>
    <includedby refid="_d3_d12_scoped_compute_pass_8cpp" local="yes">Source/Azura/RenderSystem/Src/D3D12/D3D12ScopedComputePass.cpp</includedby>
    <includedby refid="_d3_d12_scoped_render_pass_8cpp" local="yes">Source/Azura/RenderSystem/Src/D3D12/D3D12ScopedRenderPass.cpp</includedby>
    <includedby refid="_d3_d12_scoped_shader_8cpp" local="yes">Source/Azura/RenderSystem/Src/D3D12/D3D12ScopedShader.cpp</includedby>
    <includedby refid="_vk_core_8cpp" local="yes">Source/Azura/RenderSystem/Src/Vulkan/VkCore.cpp</includedby>
    <includedby refid="_vk_drawable_pool_8cpp" local="yes">Source/Azura/RenderSystem/Src/Vulkan/VkDrawablePool.cpp</includedby>
    <includedby refid="_vk_renderer_8cpp" local="yes">Source/Azura/RenderSystem/Src/Vulkan/VkRenderer.cpp</includedby>
    <includedby refid="_vk_scoped_image_8cpp" local="yes">Source/Azura/RenderSystem/Src/Vulkan/VkScopedImage.cpp</includedby>
    <includedby refid="_vk_scoped_render_pass_8cpp" local="yes">Source/Azura/RenderSystem/Src/Vulkan/VkScopedRenderPass.cpp</includedby>
    <includedby refid="_vk_scoped_swap_chain_8cpp" local="yes">Source/Azura/RenderSystem/Src/Vulkan/VkScopedSwapChain.cpp</includedby>
    <includedby refid="_vk_shader_8cpp" local="yes">Source/Azura/RenderSystem/Src/Vulkan/VkShader.cpp</includedby>
    <includedby refid="_renderer__test_8cpp" local="yes">Source/Azura/RenderSystem/Test/Renderer_test.cpp</includedby>
    <includedby refid="_render_test_cases_8cpp" local="yes">Source/Azura/RenderSystem/Test/RenderTestCases.cpp</includedby>
    <includedby refid="_vector__benchmark_8h" local="yes">Source/Containers/Benchmark/Vector_benchmark.h</includedby>
    <includedby refid="_app_renderer_8_basic_8cpp" local="yes">Source/Samples/0_TestZone/Src/AppRenderer.Basic.cpp</includedby>
    <includedby refid="_app_renderer_8_cloth_8cpp" local="yes">Source/Samples/0_TestZone/Src/AppRenderer.Cloth.cpp</includedby>
    <includedby refid="_app_renderer_8_compute_8cpp" local="yes">Source/Samples/0_TestZone/Src/AppRenderer.Compute.cpp</includedby>
    <includedby refid="0___test_zone_2_src_2_app_renderer_8cpp" local="yes">Source/Samples/0_TestZone/Src/AppRenderer.cpp</includedby>
    <includedby refid="_app_renderer_8_deferred_8cpp" local="yes">Source/Samples/0_TestZone/Src/AppRenderer.Deferred.cpp</includedby>
    <includedby refid="_app_renderer_8_instanced_8cpp" local="yes">Source/Samples/0_TestZone/Src/AppRenderer.Instanced.cpp</includedby>
    <includedby refid="1___procedural_planet_2_src_2_app_renderer_8cpp" local="yes">Source/Samples/1_ProceduralPlanet/Src/AppRenderer.cpp</includedby>
    <includedby refid="_forward_compute_scene_8cpp" local="yes">Source/Samples/2_DeferredRenderer/Src/ForwardComputeScene.cpp</includedby>
    <includedby refid="_forward_plus_compute_scene_8cpp" local="yes">Source/Samples/2_DeferredRenderer/Src/ForwardPlusComputeScene.cpp</includedby>
    <includedby refid="_forward_scene_8cpp" local="yes">Source/Samples/2_DeferredRenderer/Src/ForwardScene.cpp</includedby>
    <includedby refid="3___cloth_sim_2_src_2_app_renderer_8cpp" local="yes">Source/Samples/3_ClothSim/Src/AppRenderer.cpp</includedby>
    <includedby refid="_sandbox_2main_8cpp" local="yes">Source/Sandbox/main.cpp</includedby>
    <incdepgraph>
      <node id="3957">
        <label>Source/Common/Inc/Memory/MemoryFactory.h</label>
        <link refid="_memory_factory_8h"/>
        <childnode refid="3958" relation="include">
        </childnode>
        <childnode refid="3963" relation="include">
        </childnode>
        <childnode refid="3961" relation="include">
        </childnode>
      </node>
      <node id="3960">
        <label>MemoryBuffer.h</label>
        <link refid="_memory_buffer_8h_source"/>
        <childnode refid="3961" relation="include">
        </childnode>
      </node>
      <node id="3959">
        <label>cassert</label>
      </node>
      <node id="3963">
        <label>Memory/HeapMemoryBuffer.h</label>
        <link refid="_heap_memory_buffer_8h_source"/>
        <childnode refid="3960" relation="include">
        </childnode>
        <childnode refid="3961" relation="include">
        </childnode>
      </node>
      <node id="3958">
        <label>Memory/StackMemoryBuffer.h</label>
        <link refid="_stack_memory_buffer_8h_source"/>
        <childnode refid="3959" relation="include">
        </childnode>
        <childnode refid="3960" relation="include">
        </childnode>
        <childnode refid="3961" relation="include">
        </childnode>
        <childnode refid="3962" relation="include">
        </childnode>
      </node>
      <node id="3962">
        <label>Utils/Macros.h</label>
        <link refid="_macros_8h_source"/>
      </node>
      <node id="3961">
        <label>Types.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3964">
        <label>Source/Common/Inc/Memory/MemoryFactory.h</label>
        <link refid="_memory_factory_8h"/>
        <childnode refid="3965" relation="include">
        </childnode>
      </node>
      <node id="3965">
        <label>Source/Containers/Benchmark/Vector_benchmark.h</label>
        <link refid="_vector__benchmark_8h_source"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespace_azura">Azura</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="_memory_factory_8h_1a3da28f025434d4fd5db92a55ac12949b" prot="public" static="no">
        <name>STACK_ALLOCATOR</name>
        <param><defname>NAME</defname></param>
        <param><defname>TYPE</defname></param>
        <param><defname>SIZE</defname></param>
        <initializer>Memory::StackMemoryBuffer&lt;SIZE&gt; buffer##NAME;                                                                        \
  TYPE allocator##NAME = TYPE(buffer##NAME, SIZE);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Common/Inc/Memory/MemoryFactory.h" line="7" column="9" bodyfile="Source/Common/Inc/Memory/MemoryFactory.h" bodystart="7" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_memory_factory_8h_1af0bd5bba5d0fd3b851fd9984a25767f2" prot="public" static="no">
        <name>HEAP_ALLOCATOR</name>
        <param><defname>NAME</defname></param>
        <param><defname>TYPE</defname></param>
        <param><defname>SIZE</defname></param>
        <initializer>Memory::HeapMemoryBuffer buffer##NAME = Memory::HeapMemoryBuffer(SIZE);                                                     \
  TYPE allocator##NAME = TYPE(buffer##NAME, SIZE);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Common/Inc/Memory/MemoryFactory.h" line="11" column="9" bodyfile="Source/Common/Inc/Memory/MemoryFactory.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Memory/StackMemoryBuffer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Memory/HeapMemoryBuffer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Types.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_azura" kindref="compound">Azura</ref><sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STACK_ALLOCATOR(NAME,<sp/>TYPE,<sp/>SIZE)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="8"><highlight class="preprocessor"><sp/><sp/>Memory::StackMemoryBuffer&lt;SIZE&gt;<sp/>buffer##NAME;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="9"><highlight class="preprocessor"><sp/><sp/>TYPE<sp/>allocator##NAME<sp/>=<sp/>TYPE(buffer##NAME,<sp/>SIZE);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HEAP_ALLOCATOR(NAME,<sp/>TYPE,<sp/>SIZE)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor"><sp/><sp/>Memory::HeapMemoryBuffer<sp/>buffer##NAME<sp/>=<sp/>Memory::HeapMemoryBuffer(SIZE);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="13"><highlight class="preprocessor"><sp/><sp/>TYPE<sp/>allocator##NAME<sp/>=<sp/>TYPE(buffer##NAME,<sp/>SIZE);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Azura</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="Source/Common/Inc/Memory/MemoryFactory.h"/>
  </compounddef>
</doxygen>
