<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="_d3_d12_scoped_command_buffer_8cpp" kind="file" language="C++">
    <compoundname>D3D12ScopedCommandBuffer.cpp</compoundname>
    <includes refid="_d3_d12_scoped_command_buffer_8h" local="yes">D3D12/D3D12ScopedCommandBuffer.h</includes>
    <includes refid="_d3_d12_macros_8h" local="yes">D3D12/D3D12Macros.h</includes>
    <includes refid="_log_8h" local="yes">Log/Log.h</includes>
    <incdepgraph>
      <node id="2174">
        <label>functional</label>
      </node>
      <node id="2164">
        <label>windows.h</label>
      </node>
      <node id="2175">
        <label>iterator</label>
      </node>
      <node id="2187">
        <label>Utils/Hash.h</label>
        <link refid="_hash_8h_source"/>
        <childnode refid="2178" relation="include">
        </childnode>
      </node>
      <node id="2163">
        <label>D3D12/D3D12Core.h</label>
        <link refid="_d3_d12_core_8h_source"/>
        <childnode refid="2164" relation="include">
        </childnode>
        <childnode refid="2165" relation="include">
        </childnode>
        <childnode refid="2166" relation="include">
        </childnode>
        <childnode refid="2167" relation="include">
        </childnode>
        <childnode refid="2168" relation="include">
        </childnode>
        <childnode refid="2169" relation="include">
        </childnode>
        <childnode refid="2170" relation="include">
        </childnode>
      </node>
      <node id="2182">
        <label>Core/RawStorageFormat.h</label>
        <link refid="_raw_storage_format_8h_source"/>
        <childnode refid="2178" relation="include">
        </childnode>
        <childnode refid="2181" relation="include">
        </childnode>
        <childnode refid="2183" relation="include">
        </childnode>
        <childnode refid="2184" relation="include">
        </childnode>
        <childnode refid="2185" relation="include">
        </childnode>
        <childnode refid="2186" relation="include">
        </childnode>
      </node>
      <node id="2165">
        <label>d3d12.h</label>
      </node>
      <node id="2177">
        <label>Memory/Allocator.h</label>
        <link refid="_allocator_8h_source"/>
        <childnode refid="2174" relation="include">
        </childnode>
        <childnode refid="2178" relation="include">
        </childnode>
        <childnode refid="2179" relation="include">
        </childnode>
      </node>
      <node id="2188">
        <label>Core/AssetLocation.h</label>
        <link refid="_asset_location_8h_source"/>
      </node>
      <node id="2172">
        <label>cassert</label>
      </node>
      <node id="2185">
        <label>boost/preprocessor/tuple/elem.hpp</label>
      </node>
      <node id="2168">
        <label>wrl.h</label>
      </node>
      <node id="2192">
        <label>stdexcept</label>
      </node>
      <node id="2170">
        <label>Generic/GenericTypes.h</label>
        <link refid="_azura_2_render_system_2_inc_2_generic_2_generic_types_8h_source"/>
        <childnode refid="2171" relation="include">
        </childnode>
        <childnode refid="2180" relation="include">
        </childnode>
        <childnode refid="2178" relation="include">
        </childnode>
        <childnode refid="2182" relation="include">
        </childnode>
        <childnode refid="2187" relation="include">
        </childnode>
        <childnode refid="2188" relation="include">
        </childnode>
        <childnode refid="2189" relation="include">
        </childnode>
        <childnode refid="2186" relation="include">
        </childnode>
      </node>
      <node id="2179">
        <label>Utils/Macros.h</label>
        <link refid="_macros_8h_source"/>
      </node>
      <node id="2167">
        <label>D3Dcompiler.h</label>
      </node>
      <node id="2189">
        <label>boost/container/small_vector.hpp</label>
      </node>
      <node id="2180">
        <label>Generic/Constants.h</label>
        <link refid="_azura_2_render_system_2_inc_2_generic_2_constants_8h_source"/>
        <childnode refid="2181" relation="include">
        </childnode>
        <childnode refid="2178" relation="include">
        </childnode>
      </node>
      <node id="2186">
        <label>boost/detail/bitmask.hpp</label>
      </node>
      <node id="2181">
        <label>tuple</label>
      </node>
      <node id="2176">
        <label>Array.h</label>
        <link refid="_array_8h_source"/>
        <childnode refid="2172" relation="include">
        </childnode>
        <childnode refid="2173" relation="include">
        </childnode>
        <childnode refid="2177" relation="include">
        </childnode>
        <childnode refid="2178" relation="include">
        </childnode>
      </node>
      <node id="2190">
        <label>D3D12/D3D12Macros.h</label>
        <link refid="_d3_d12_macros_8h_source"/>
        <childnode refid="2191" relation="include">
        </childnode>
        <childnode refid="2192" relation="include">
        </childnode>
        <childnode refid="2178" relation="include">
        </childnode>
      </node>
      <node id="2194">
        <label>vector</label>
      </node>
      <node id="2171">
        <label>Containers/Vector.h</label>
        <link refid="_vector_8h_source"/>
        <childnode refid="2172" relation="include">
        </childnode>
        <childnode refid="2173" relation="include">
        </childnode>
        <childnode refid="2174" relation="include">
        </childnode>
        <childnode refid="2175" relation="include">
        </childnode>
        <childnode refid="2176" relation="include">
        </childnode>
        <childnode refid="2177" relation="include">
        </childnode>
        <childnode refid="2178" relation="include">
        </childnode>
        <childnode refid="2179" relation="include">
        </childnode>
      </node>
      <node id="2193">
        <label>Log/Log.h</label>
        <link refid="_log_8h_source"/>
        <childnode refid="2178" relation="include">
        </childnode>
        <childnode refid="2194" relation="include">
        </childnode>
      </node>
      <node id="2166">
        <label>dxgi1_4.h</label>
      </node>
      <node id="2161">
        <label>Source/Azura/RenderSystem/Src/D3D12/D3D12ScopedCommandBuffer.cpp</label>
        <link refid="_d3_d12_scoped_command_buffer_8cpp"/>
        <childnode refid="2162" relation="include">
        </childnode>
        <childnode refid="2190" relation="include">
        </childnode>
        <childnode refid="2193" relation="include">
        </childnode>
      </node>
      <node id="2183">
        <label>boost/preprocessor/repetition/repeat.hpp</label>
      </node>
      <node id="2178">
        <label>Types.h</label>
      </node>
      <node id="2191">
        <label>winerror.h</label>
      </node>
      <node id="2162">
        <label>D3D12/D3D12ScopedCommandBuffer.h</label>
        <link refid="_d3_d12_scoped_command_buffer_8h_source"/>
        <childnode refid="2163" relation="include">
        </childnode>
      </node>
      <node id="2173">
        <label>cstring</label>
      </node>
      <node id="2169">
        <label>shellapi.h</label>
      </node>
      <node id="2184">
        <label>boost/preprocessor/seq/for_each.hpp</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_azura">Azura</innernamespace>
    <innernamespace refid="namespace_azura_1_1_d3_d12">Azura::D3D12</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;D3D12/D3D12ScopedCommandBuffer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;D3D12/D3D12Macros.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Log/Log.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_azura" kindref="compound">Azura</ref><sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">D3D12<sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal">D3D12ScopedCommandBuffer::D3D12ScopedCommandBuffer(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Microsoft::WRL::ComPtr&lt;ID3D12Device&gt;&amp;<sp/>device,</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/>D3D12_COMMAND_LIST_TYPE<sp/>commandListType,</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Log&amp;<sp/>log_D3D12RenderSystem)</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/>:<sp/>m_commandListType(commandListType),</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>m_fenceEvent()<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/>VERIFY_D3D_OP(log_D3D12RenderSystem,<sp/>device-&gt;CreateCommandAllocator(m_commandListType,<sp/>IID_PPV_ARGS(&amp;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>m_commandAllocator)),<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>command<sp/>allocator&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>D3D12ScopedCommandBuffer::CreateGraphicsCommandList(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Microsoft::WRL::ComPtr&lt;ID3D12Device&gt;&amp;<sp/>device,<sp/>ID3D12PipelineState*<sp/>pipelineState,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Log&amp;<sp/>log_D3D12RenderSystem)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>VERIFY_D3D_OP(log_D3D12RenderSystem,<sp/>device-&gt;CreateCommandList(0,<sp/>m_commandListType,<sp/>m_commandAllocator.Get(),<sp/>pipelineState,<sp/>IID_PPV_ARGS(&amp;m_commandList)),<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>command<sp/>allocator&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal">ID3D12GraphicsCommandList*<sp/>D3D12ScopedCommandBuffer::GetGraphicsCommandList()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_commandList.Get();</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>D3D12ScopedCommandBuffer::Execute(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Microsoft::WRL::ComPtr&lt;ID3D12Device&gt;&amp;<sp/>device,<sp/>ID3D12CommandQueue*<sp/>commandQueue,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Log&amp;<sp/>log_D3D12RenderSystem)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>VERIFY_D3D_OP(log_D3D12RenderSystem,<sp/>device-&gt;CreateFence(m_fenceValue,<sp/>D3D12_FENCE_FLAG_NONE,<sp/>IID_PPV_ARGS(&amp;m_fence)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>),<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>fence&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>m_fenceValue++;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>an<sp/>event<sp/>handle<sp/>to<sp/>use<sp/>for<sp/>frame<sp/>synchronization.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>m_fenceEvent<sp/>=<sp/>CreateEvent(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>FALSE,<sp/>FALSE,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_fenceEvent<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>VERIFY_D3D_OP(log_D3D12RenderSystem,<sp/>HRESULT_FROM_WIN32(GetLastError()),<sp/></highlight><highlight class="stringliteral">&quot;Fence<sp/>Event<sp/>Null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>ID3D12CommandList*<sp/>ppCommandLists[]<sp/>=<sp/>{<sp/>m_commandList.Get()<sp/>};</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>commandQueue-&gt;ExecuteCommandLists(1,<sp/>ppCommandLists);<sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>D3D12ScopedCommandBuffer::WaitForComplete(ID3D12CommandQueue*<sp/>commandQueue,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Log&amp;<sp/>log_D3D12RenderSystem)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>U32<sp/>fence<sp/>=<sp/>m_fenceValue;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>VERIFY_D3D_OP(log_D3D12RenderSystem,<sp/>commandQueue-&gt;Signal(m_fence.Get(),<sp/>m_fenceValue),<sp/></highlight><highlight class="stringliteral">&quot;Fence<sp/>wait<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>m_fenceValue++;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>until<sp/>the<sp/>previous<sp/>frame<sp/>is<sp/>finished.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>VERIFY_D3D_OP(log_D3D12RenderSystem,<sp/>m_fence-&gt;SetEventOnCompletion(fence,<sp/>m_fenceEvent),<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>set<sp/>event<sp/>completion<sp/>on<sp/>Fence&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>WaitForSingleObject(m_fenceEvent,<sp/>INFINITE);</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>D3D12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Azura</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="Source/Azura/RenderSystem/Src/D3D12/D3D12ScopedCommandBuffer.cpp"/>
  </compounddef>
</doxygen>
