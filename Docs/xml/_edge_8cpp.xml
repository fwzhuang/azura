<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="_edge_8cpp" kind="file" language="C++">
    <compoundname>Edge.cpp</compoundname>
    <includes refid="_edge_8h" local="yes">Physics/Geometry/Edge.h</includes>
    <incdepgraph>
      <node id="5643">
        <label>Math/Core.h</label>
        <link refid="_core_8h_source"/>
        <childnode refid="5644" relation="include">
        </childnode>
        <childnode refid="5645" relation="include">
        </childnode>
      </node>
      <node id="5646">
        <label>boost/container_hash/hash.hpp</label>
      </node>
      <node id="5641">
        <label>Source/Physics/Src/Geometry/Edge.cpp</label>
        <link refid="_edge_8cpp"/>
        <childnode refid="5642" relation="include">
        </childnode>
      </node>
      <node id="5642">
        <label>Physics/Geometry/Edge.h</label>
        <link refid="_edge_8h_source"/>
        <childnode refid="5643" relation="include">
        </childnode>
        <childnode refid="5646" relation="include">
        </childnode>
      </node>
      <node id="5645">
        <label>Types.h</label>
      </node>
      <node id="5644">
        <label>mathfu/matrix.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_azura">Azura</innernamespace>
    <innernamespace refid="namespace_azura_1_1_physics">Azura::Physics</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;Physics/Geometry/Edge.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_azura" kindref="compound">Azura</ref><sp/>{</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Physics<sp/>{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Edge::operator==(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Edge&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((m_indexA<sp/>==<sp/>rhs.m_indexA)<sp/>&amp;&amp;<sp/>(m_indexB<sp/>==<sp/>rhs.m_indexB))<sp/>||<sp/>(</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(m_indexA<sp/>==<sp/>rhs.m_indexB)<sp/>&amp;&amp;<sp/>(m_indexB<sp/>==<sp/>rhs.m_indexA));</highlight></codeline>
<codeline lineno="9"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Physics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Azura</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="Source/Physics/Src/Geometry/Edge.cpp"/>
  </compounddef>
</doxygen>
